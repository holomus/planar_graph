prompt MODULE TRANSLATE
begin
uis.lang_en('hac:001:message:only one primary attachment to is allowed to one device','A device can only be assigned to one company');
uis.lang_en('hac:002:message:device must have primary company attached to it','The device must be attached to a company');
uis.lang_en('hac:003:message:cannot delete primary attachment to company','The device must be attached to a company');
uis.lang_en('hac:004:message:synchronised company must have same server_id as target server_id','Synchronized company and data source must be from the same server');
uis.lang_en('hac:005:message:company not ready for work','The company is not ready to work');
uis.lang_en('hac:005:solution:provide department code','Enter organization code');
uis.lang_en('hac:005:solution:provide organization code','Enter organization code');
uis.lang_en('hac:005:solution:provide person group code','Enter the group code');
uis.lang_en('hac:006:message:no server with provided token, token = $1','No server with provided token, Token = <b>$1</b>');
uis.lang_en('hac:006:solution:set new server token and resubscribe events','Set new server token and resubscribe events');
uis.lang_en('hac:007:message:unknown event type provided, event type code = $1','Unknown event type provided, event type code = $1');
uis.lang_en('hac:device_attach:primary','Basic');
uis.lang_en('hac:device_attach:secondary','Secondary');
uis.lang_en('hac:device_status:offline','Offline');
uis.lang_en('hac:device_status:online','Online');
uis.lang_en('hac:device_status:unknown','unknown');
uis.lang_en('hac:face or card','Face or Card');
uis.lang_en('hac:hik_door_state:closed','Closed');
uis.lang_en('hac:hik_door_state:offline','Offline');
uis.lang_en('hac:hik_door_state:open','Open');
uis.lang_en('hac:hik_door_state:remain closed','Closed (default)');
uis.lang_en('hac:hik_door_state:remain open','Open (default)');
uis.lang_en('hac:person_auth:external code','External code');
uis.lang_en('hac:person_auth:person code','Person code');
uis.lang_en('hac:person_auth:pin','Pin');
uis.lang_en('hes:001:message: at least one of "gps determination" and "face recognition" must be enabled','At least one of the mark types <b>GPS Coordinates</b> or <b>Face Recognition</b> must be enabled');
uis.lang_en('hes:002:message:qr code limit time must be less than 24 hours','<b>QR</b> duration must be less than 24 hours');
uis.lang_en('hes:003:message:billz subject is empty. subject must be provided','Billz subject is empty. Subject is a required field');
uis.lang_en('hes:004:message:billz secret_key is empty. secret_key must be provided','Billz secret_key is empty. Secret_key is a required field');
uis.lang_en('hes:005:message:billz credentials are not provided','Billz credentials are empty. Credentials are required fields');
uis.lang_en('hes:006:message:request date period must be smaller than $1 days','Requested period must be less than $1 days');
uis.lang_en('hes:007:message:billz api returned an error. code = $1, message = $2','There was an error in the Billz API. Error Code = $1, Message = $2');
uis.lang_en('hes:008:message:billz api returned neither a result nor an error','An error occurred or the result returned empty in Billz API');
uis.lang_en('hes:009:message:you do not have access to create/update request','You do not have access to create or edit Request for Absences');
uis.lang_en('hes:010:message:you do not have access to create/update change','You do not have access to create or edit Request for Work schedule changes');
uis.lang_en('hes:011:message:task manager setting value must be in (y, n)','Task manager setting value must be in (y, n)');
uis.lang_en('hes:gps_tracking_qualty_kind: custom','Custom');
uis.lang_en('hes:gps_tracking_qualty_kind: high','High');
uis.lang_en('hes:gps_tracking_qualty_kind: low','Low');
uis.lang_en('hes:gps_tracking_qualty_kind: medium','Medium');
uis.lang_en('hes:staff_track_settings_save: at least one of "gps determination" and "face recognition" must be enabled','You must select at least one of "gps determination" and "face recognition"');
uis.lang_en('hface:001:message:recognition settings are not provided','Recognition settings are not provided.');
uis.lang_en('hface:002:message:duplicate prevention value must be in (y, n)','The value to prevent duplicates should be (y, n).');
uis.lang_en('hface:003:message:face recognition service couldnt recognize any faces in image','The facial recognition service was unable to recognize the faces in the image.');
uis.lang_en('hface:003:solution:try again with another image','Try again with a different image.');
uis.lang_en('hface:003:title:no face found','Face not found');
uis.lang_en('hface:004:message:couldnt establish connection with face recognition service, try again later','Failed to establish a connection to the facial recognition service. Try again later.');
uis.lang_en('hface:004:title:connection failure','Connection failure');
uis.lang_en('hface:005:message:duplicate prevention is enabled','Anti-Duplication Enabled');
uis.lang_en('hface:005:title:illegal action','Illegal action');
uis.lang_en('hface:title:error','Error');
uis.lang_en('hisl:ispring learn user activate','iSpring Learn User Activation');
uis.lang_en('hisl:ispring learn user create','Creating an iSpring Learn User');
uis.lang_en('hisl:ispring learn user dismiss','Terminating an iSpring Learn User');
uis.lang_en('hisl:ispring learn user update','iSpring Learn User Update');
uis.lang_en('hisl:request_status:error','Error');
uis.lang_en('hisl:request_status:success','Successfully');
uis.lang_en('hisl:use the following details to sign in to ispring academy - email: $1{email}, password: $2{password}','Use the following details to sign in to iSpring Academy - email: $1, password: $2');
uis.lang_en('hlic:001:message:units not initialized for run_units_revising','Not initialized set');
uis.lang_en('hlic:002:message:required licenses exceeded available amount by $1{exceed_amount}','Will exceed the limit of <b>available</b> subscriptions, requires additional <b>$1</b> subscriptions');
uis.lang_en('hlic:002:solution:buy additional licenses','Buy additional subscriptions');
uis.lang_en('hlic:002:title:not enough licenses','Not enough subscriptions');
uis.lang_en('hln:001:message:$1{question_group_names} are required, question type must be chosen for them','A question type must be chosen for $1, they are required.');
uis.lang_en('hln:001:title:question type not choosen','Specify question type');
uis.lang_en('hln:002:message:pick kind of $1{exam_name} is not auto','Selection type for exam <b>$1</b> is not automatic.');
uis.lang_en('hln:002:solution:change the pick kind of $1{exam_name} to auto','Select the selection type <b>Auto</b> for the <b>$1</b> exam.');
uis.lang_en('hln:003:message:not enough questions for pattern, exam name: $1{exam_name}, pattern name: $2{pattern_name}, pattern quantity: $3{pattern_quantity}, question quantity: $4{question_quantity}','Not enough questions in template <b>$2</b>');
uis.lang_en('hln:003:solution:add many questions as required in this exam, or reduce the quantity of questions, required amount: $1','Add <b>$1</b> questions to the template or reduce the number of questions required in the template');
uis.lang_en('hln:004:message:cannot change system question group, question group name: $1{group_name}','The <b>$1</b> question group is a system one. You can not change the system question group');
uis.lang_en('hln:005:message:cannot delete system question group, question group name: $1{group_name}','The <b>$1</b> question group is a system one. You can''t delete a system question group');
uis.lang_en('hln:006:message:the group of $1{question_type_name} cannot be changed','You cannot change the question group to which the question type is attached.');
uis.lang_en('hln:007:message:$1{question_type_name} is system question type, it cannot be deleted','The <b>$1</b> is system question type. You can not change the system question type');
uis.lang_en('hln:008:message:question must include at least 2 options, question_id=$1','Question must contain at least <b>two</b> answer options');
uis.lang_en('hln:008:title:not enough options','Not enough answers');
uis.lang_en('hln:009:message:there must be at least 1 correct answer, question_id=$1','The question must contain at least <b>one</b> correct answer');
uis.lang_en('hln:009:title:no correct answers','There is no correct answer');
uis.lang_en('hln:010:message:answer type is single but correct answers more than 1, question_id=$1','A question with a single answer type can contain only <b>one</b> correct answer');
uis.lang_en('hln:010:title:multiple correct answers','Several correct answers');
uis.lang_en('hln:011:message:$1{exam_question_count} selected questions are less than $2{question_count} exam questions','The selected number of questions (<b>$1</b>) is less than the number of questions specified in the exam (<b>$2</b>)');
uis.lang_en('hln:012:message:sum of patterns question quantity count($1) must be equal exams question count($2)','The total number of questions in the templates (<b>$1</b>) is less than the number of questions specified in the exam (<b>$2</b>)');
uis.lang_en('hln:012:title:questions count are different','Not enough questions');
uis.lang_en('hln:013:message:this $1{testing_number} testing depends on $2{attestation_number} attestation','Testing with number <b>$1</b> is associated with attestation with number <b>$2</b>.');
uis.lang_en('hln:013:title:testing depends on attestation','Testing is associated with attestation.');
uis.lang_en('hln:014:message:examiner and participant must be different, testing id: $1','The examiner must not participate in testing.');
uis.lang_en('hln:015:message:to update testing, status must be new, testing number: $1, current status: $2','To update testing, the status must be <b>New</b>, testing number: $1, current status: $2.');
uis.lang_en('hln:015:solution:change status to new and try again','Change the status to <b>New</b> and retry the operation');
uis.lang_en('hln:015:title:testing in another status','Wrong test status');
uis.lang_en('hln:016:message:testing status is already new, testing number: $1','Test number <b>$1</b> is already in <b>New</b> state');
uis.lang_en('hln:017:message:to enter the testing, testing status must be new, testing number: $1, current status: $2','<b>$1</b> must be <b>New</b> to run test.');
uis.lang_en('hln:017:solution:change status to new and try again','Remove testing from the entering list and repeat the operation');
uis.lang_en('hln:017:title:testing in another status','Wrong test status');
uis.lang_en('hln:018:message:to enter the testing, begin time must be set, testing number: $1','To start testing <b>$1</b>, the start time of testing must be specified');
uis.lang_en('hln:018:solution:set begin time for test and try again','Set the start time and repeat the operation');
uis.lang_en('hln:019:message:$1{testing_number} testing cannot be execute before $2{begin_time}','Tests <b>$1</b> cannot be started before test start time <b>$2</b>');
uis.lang_en('hln:019:solution:wait until $1{begin_time} or change begin time as you need','Wait until <b>$1</b> or change the start time to something more suitable');
uis.lang_en('hln:020:message:testing executes between $1{begin_time} and $2{end_time}, testing number: $3','<b>$3</b> test must be run between <b>$1</b> and <b>$2</b>');
uis.lang_en('hln:021:message:to return execute, status must be checking or finished, testing number: $1, current status: $2','Test <b>$1</b> must be in checking or finished to restart');
uis.lang_en('hln:021:solution:change status checking or finished and try again','Remove testing from the restart list and repeat the operation');
uis.lang_en('hln:021:title:testing in another status','Wrong test status');
uis.lang_en('hln:022:message:to pause testing, status must be execute, testing number: $1, current status: $2','Test <b>$1</b> must be running in order to pause');
uis.lang_en('hln:022:solution:change status execute and try again','Remove testing from the pause list and retry the operation');
uis.lang_en('hln:022:title:testing in another status','Wrong test status');
uis.lang_en('hln:023:message:to continue testing, status must be pause, testing number: $1, current status: $2','To continue testing <b>$1</b> it must be paused');
uis.lang_en('hln:023:solution:change status pause and try again','Remove testing from the list for continuation and repeat the operation');
uis.lang_en('hln:023:title:testing in another status','Wrong test status');
uis.lang_en('hln:024:message:to return checking, testing status must be finished, testing number: $1, current status: $2','Testing <b>$1</b> must be finished in order to recheck');
uis.lang_en('hln:024:solution:change status finished and try again','Remove testing from the list for rechecking and repeat the operation');
uis.lang_en('hln:024:title:testing in another status','Wrong test status');
uis.lang_en('hln:025:message:testing already finished, testing number: $1','Testing with number <b>$1</b> is already finished.');
uis.lang_en('hln:026:message:cannot finish testing, writing questions are not checked completely, testing number: $1','Review all written questions before completing <b>$1</b> testing');
uis.lang_en('hln:026:title:unchecked answers found','Found unverified questions');
uis.lang_en('hln:027:message:cannot finish to new status until $1{end_time}, testing number: $2','Unable to finish unstarted test <b>$2</b> until end of test <b>$1</b>');
uis.lang_en('hln:027:solution:wait until $1{end_time} or change end time as you need','Wait until end of test <b>$1</b> or change end of test');
uis.lang_en('hln:028:message:to stop testing, status must be executed or paused, testing number: $1, current status: $2','For <b>$1</b> testing to complete, it must be run');
uis.lang_en('hln:028:solution:change status execute or pause and try again','Remove testing from the list to stop and repeat the operation');
uis.lang_en('hln:028:title:testing in another status','Wrong test status');
uis.lang_en('hln:029:message:cannot stop testing until $1{end_time}, except attached person, testing number: $2','Only the test taker can complete the <b>$1</b> test before it ends');
uis.lang_en('hln:029:solution:wait until $1{end_time}','Wait for <b>$1</b> and retry the operation');
uis.lang_en('hln:030:message:to set begin time, status must be new, testing number: $1, current status: $2','To set test start time <b>$1</b> it must be new');
uis.lang_en('hln:030:solution:change status to new','Remove testing from the list to set the start time and repeat the operation');
uis.lang_en('hln:030:title:testing in another status','Wrong test status');
uis.lang_en('hln:031:message:current date($1) must be equal to testing date($2), testing number: $3','The current date (<b>$1</b>) must match the test date <b>$3</b> (<b>$2</b>)');
uis.lang_en('hln:032:message:to start testing, status must be new, testing number: $1, current status: $2','To start testing <b>$1</b> it must be new');
uis.lang_en('hln:032:solution:change status to new','Change the status to <b>New</b> and retry the operation');
uis.lang_en('hln:032:title:testing in another status','Wrong test status');
uis.lang_en('hln:033:message:to save attestation, status must be new, attestation number: $1, current status: $2','To save attestation, the status must be new, attestation number: $1, current status: $2');
uis.lang_en('hln:033:solution:change status to new','Change the status to <b>New</b> and retry the operation');
uis.lang_en('hln:033:title:attestation in another status','Wrong attestation status');
uis.lang_en('hln:034:message:persons must be unique, attestation number: $1, duplicate persons: $2','Employee must be unique, attestation number: $1, duplicate emplyees: $2');
uis.lang_en('hln:034:solution:remove dublicate persons','Assign attestation to these employees only once');
uis.lang_en('hln:034:title:duplicate persons found','Multiple appointment');
uis.lang_en('hln:035:message:to delete attestation, status must be new, attestation number: $1, current status: $2','To delete attestation, the status must be <b>New<b/>, attestation number: $1, current status: $2');
uis.lang_en('hln:035:solution:change status to new','Remove attestation from the list for deletion and repeat the operation');
uis.lang_en('hln:035:title:attestation in another status','Wrong attestation status');
uis.lang_en('hln:036:message:to send answer, status must be executed, testing number: $1, current status: $2','Test <b>$1</b> must be launched in order to send answer');
uis.lang_en('hln:036:solution:change status to executed','Start testing and retry the operation');
uis.lang_en('hln:036:title:testing in another status','Wrong test status');
uis.lang_en('hln:037:message:answer type of $1{testing_number} testing is single, only one answer can be selected, question id: $2','Only one correct answer can be selected for this question');
uis.lang_en('hln:037:title:several selected answers found','Multiple Answer Options');
uis.lang_en('hln:038:message:answer type is writing, testing number: $1, question id: $2','This question is a written question, you cannot select answers for it.');
uis.lang_en('hln:038:title:answers found','Answer options found');
uis.lang_en('hln:039:message:answer type is not writing, testing number: $1, question id: $2','Answer type is not writing, testing number: $1, question I: $2.');
uis.lang_en('hln:039:title:write answer found','Write answer found');
uis.lang_en('hln:040:message:to check answers, status must be checking, testing number: $1, current status: $2','To check answers, the status must be <b>To be checked</b>, testing number: $1, current status: $2.');
uis.lang_en('hln:040:solution:change status to checking','Submit the testing for check and repeat the operation.');
uis.lang_en('hln:040:title:testing in another status','Wrong test status');
uis.lang_en('hln:041:message:to save training, status must be new, training number: $1, current status: $2','Training <b>$1</b> must be new to change');
uis.lang_en('hln:041:solution:change status to new','Change the status to <b>New</b> and retry the operation');
uis.lang_en('hln:041:title:training in another status','Wrong training status');
uis.lang_en('hln:042:message:to delete training, status must be new, training number: $1, current status: $2','Training <b>$1</b> must be new to delete');
uis.lang_en('hln:042:solution:change status to new','Remove the training from the list for deletion and repeat the operation');
uis.lang_en('hln:042:title:training in another status','Wrong training status');
uis.lang_en('hln:043:message:to assess person in training, status must be execute, training number: $1, current status: $2','To assess the participants of training <b>$1</b>, it must be running.');
uis.lang_en('hln:043:solution:change status to execute','Start the training and repeat the operation');
uis.lang_en('hln:043:title:training in another status','Wrong training status');
uis.lang_en('hln:044:message:to set new in training, status must be executed, training number: $1, current status: $2','To reset training <b>$1</b>, it must be running, current status: $2.');
uis.lang_en('hln:044:solution:change status to executed','Remove the training from the reset list and repeat the operation.');
uis.lang_en('hln:044:title:training in another status','Wrong training status');
uis.lang_en('hln:045:message:to execute training, status must be finished, training number: $1, current status: $2','Training <b>$1</b> must be completed to restart, current status: $2.');
uis.lang_en('hln:045:solution:change status to finished','Remove the training from the list for restart and repeat the operation');
uis.lang_en('hln:045:title:training in another status','Wrong training status');
uis.lang_en('hln:046:message:to finish training, all persons must be checked, training number: $1','To finish training, all persons must be checked, training number: $1');
uis.lang_en('hln:046:title:found unchecked persons','Found unchecked persons');
uis.lang_en('hln:047:message:to finish training, status must be executed, training number: $1, current status: $2','To finish training, the status must be launched, training number: $1, current status: $2');
uis.lang_en('hln:047:solution:change status to executed','Remove the training from the list for completion and repeat the operation.');
uis.lang_en('hln:047:title:training in another status','Wrong training status');
uis.lang_en('hln:048:message:testing atteched to $1{attached_person_name}, not to $2{person_name}, testing number: $3','Testing attached to $1, not to $2, testing number: $3');
uis.lang_en('hln:049:message:$1{question_type_name} not found among question types','$1 not found among question types. Please ensure the correctness of the name.');
uis.lang_en('hln:050:message:only admin or mentor can assess, training number: $1','Only admin or mentor can assess, training number: $1');
uis.lang_en('hln:050:title:not access to assess','Not access to assess');
uis.lang_en('hln:051:message:to assess training, status must be executed, training number: $1, current status: $2','<b>$1</b> training must be running in order to assess the participants. Current status: $2');
uis.lang_en('hln:051:title:training in another status','Wrong training status');
uis.lang_en('hln:052:message:you must select at least one subject','At least one subject must be selected!');
uis.lang_en('hln:053:message:testing period change value must be in (y, n)','The testing period change format must be in (Y, N).');
uis.lang_en('hln:054:message:testing must be begin between period begin and period end, testing number: $1, period begin: $2, period end: $3','Testing must begin between period begin and period end. Testing number: $1; Period begin: $2; Period end: $3.');
uis.lang_en('hln:054:solution:change period begin and period end time','Change period begin and period end time.');
uis.lang_en('hln:054:title:you can not start testing in this time','Testing cannot be initiated during this time');
uis.lang_en('hln:055:message:begin time period begin must be less than begin time period end, testing number: $1, begin time: $2, end time: $3','The begin time of the period must be less than the end time of the period. Test number: $1; Begin time: $2; End time: $3.');
uis.lang_en('hln:055:title:period times are in valid','Period times are invalid');
uis.lang_en('hln:056:message:begin time period begin must be less than begin time period end, attestation number: $1, begin time: $2, end time: $3','The start time of the testing period must be less than the end time of the testing period. Attestation number: $1; Start of testing period: $2; Start of testing period: $3.');
uis.lang_en('hln:056:title:period times are in valid','Period times are invalid');
uis.lang_en('hln:057:message:if this exam for recruitment, pick kind must be manual, exam name: $1{exam_name}','The type of exam should be manual to use for recruiting.');
uis.lang_en('hln:057:title:pick kind must be manual','The type of exam should be manual.');
uis.lang_en('hln:058:message:find question with file, if this vacancy for recruitment file should not be set in question or in option, exam name: $1{exam_name}, question id: $2{question_id}','The question (ID = $2) with files and photos do not meet the requirements of the <b>$1</b> exam used for recruiting.');
uis.lang_en('hln:058:solution:find this question, remove all files, in question and in options, and try again','Find the question and extract all attachments to it');
uis.lang_en('hln:058:title:question not validate','The question does not meet the requirements of the exam used for recruiting.');
uis.lang_en('hln:059:message:if this vacancy for recruitment, options must be less than 4, exam name: $1{exam_name}, question id: $2{question_id}','A question (ID = $2) with more than 4 answer choices does not meet the requirements of the exam used for recruiting.');
uis.lang_en('hln:059:solution:find this question, reduce number of options, and try again','Find the question and reduce the answer choices.');
uis.lang_en('hln:059:title:question not validate','The question does not meet the requirements of the exam used for recruiting.');
uis.lang_en('hln:060:message:if this vacancy for recruitment, answer type of question must be single, exam name: $1{exam_name}, question id: $2{question_id}','A question (ID = $2) that has only one correct answer does not meet the requirements of the exam used for recruiting.');
uis.lang_en('hln:060:solution:find this question, change answer type to single, and try again','Find the question and change the answer type to <b>single</b>.');
uis.lang_en('hln:060:title:question not validate','The question does not meet the requirements of the exam used for recruiting.');
uis.lang_en('hln:061:message:old exam was for recrutiment, new exam is not, you can not edit if its already set for recruitment, exam name: $1{exam_name}','You cannot customize its use for recruiting when the exam is tied to a job opening.');
uis.lang_en('hln:061:title:you can not update exam','It''s impossible to change the exam');
uis.lang_en('hln:062:message:subjects not found for this subject group, subject group name: $1','Subjects not found for this Subject group, subject group name: $1');
uis.lang_en('hln:062:title:subjects not found','Subjects not found');
uis.lang_en('hln:answer_type:multiple','Multiple');
uis.lang_en('hln:answer_type:single','Single');
uis.lang_en('hln:answer_type:writing','Writing');
uis.lang_en('hln:assert_assess: only mentor or admin can assess, training_id=$1','Only mentor or administrator can assess. Training ID = $1');
uis.lang_en('hln:assert_assess: training status must be executed, training_id=$1','Training status must be "Launched". Training ID = $1');
uis.lang_en('hln:assert_required_groups: question type must be chosen for required question groups, question_group_ids: $1','Question type must be chosen for required question group. Question Group ID = $1');
uis.lang_en('hln:assert_testing: this testing depends on attestation, attestation_id=$1, testing_id=$2','This testing belongs to attestation. Attestation ID = $1, Testing ID = $2');
uis.lang_en('hln:asses_person: training status must be executed, training_id=$1','Training status must be "Launched". Training ID = $1');
uis.lang_en('hln:attestation','Attestation');
uis.lang_en('hln:attestation_delete:attestation status must be new, attestation_id=$1','Attestation status must be "New". Attestattion ID = $1');
uis.lang_en('hln:attestation_save: persons must be unique, attestation_id=$1, person ids=$2','Participants must be unique. Attestation ID = $1, Participant ID = $2');
uis.lang_en('hln:attestation_save: status must be new, attestation_id=$1','Status must be "New"');
uis.lang_en('hln:attestation_status:finished','Finished');
uis.lang_en('hln:attestation_status:new','New');
uis.lang_en('hln:attestation_status:processing','Processing');
uis.lang_en('hln:cannot stop testing until end time, except attached person, testing_id=$1','You cannot stop testing until it ends, except participant. Testing ID = $1');
uis.lang_en('hln:check_answer: testing status must be checking, testing_id=$1','Testing status must be "To be checked". Testing ID = $1');
uis.lang_en('hln:exam_save: selected questions $1 are less than exam','Selected questions of $1 are fewer than exam questions');
uis.lang_en('hln:exam_save: sum of patterns question quantity count($1) must be equal exams question count($2), exam_id = $3','Template questions of $1 must be equal to exam questions of $2. Exam ID = $3');
uis.lang_en('hln:exam_save: sum of patterns question quantity count($1) must be equal exams question count($2), exam_id=$3','Template questions of $1 must be equal to exam questions of $2. Exam ID = $3');
uis.lang_en('hln:examiner','Examiner');
uis.lang_en('hln:generate_questions: exam pick kind is not auto, exam_id=$1','Selection type must be Auto. Exam ID = $1');
uis.lang_en('hln:generate_questions: not enough questions for pattern, exam_id=$1, exam_name=$2, pattern_id=$3, quantity=$4, found questions count=$5','Not enough questions for template. Exam ID = $1, Exam Name = $2, Template ID = $3, Qty = $4, Found Questions Qty = $5');
uis.lang_en('hln:generate_questions: not enough questions for pattern, exam_id=$1, pattern_id=$2, quantity=$3, found questions count=$4','Not enough questions for template. Exam ID = $1, Template ID = $2, Qty = $3, Found Questions Qty = $4');
uis.lang_en('hln:generate_questions: not enough questions for pattern, testing_id =$1, exam_id=$2, pattern_id=$3, quantity=$4, found questions count=$5','Not enough questions for template. Testing ID = $1, Exam ID = $2, Template ID = $3, Qty = 4, Found questions from template = $5');
uis.lang_en('hln:mentor','Mentor');
uis.lang_en('hln:participant','Participant');
uis.lang_en('hln:passed: indeterminate','Undefined');
uis.lang_en('hln:pick_kind:auto','Auto');
uis.lang_en('hln:pick_kind:manual','Manual');
uis.lang_en('hln:question group save: question group is read only','Questions group is readonly');
uis.lang_en('hln:question type save: the group cannot be changed','Group cannot be changed');
uis.lang_en('hln:question_group_save: cannot change system question group','System question group cannot be changed');
uis.lang_en('hln:question_save: answer type is single but answers more than 1, question_id=$1','Answer type is single, but answers qty is more than 1. Question ID = $1');
uis.lang_en('hln:question_save: at least one of $1{question_group} type must be chosen, question_id=$2','There at least one of the $1 questions group must be chosen. Question ID = $1');
uis.lang_en('hln:question_save: question must include at least 2 options, question_id=$1','Question must include at least 2 options. Question ID = $1');
uis.lang_en('hln:question_save: there must be at least 1 correct answer, question_id=$1','There must be 1 correct answer. Question ID = $1');
uis.lang_en('hln:question_type_id_by_name: no data found, question_type_name=$1','Question type not found. Name = $1');
uis.lang_en('hln:question_type_save: the group cannot be changed','Group cannot be changed');
uis.lang_en('hln:send_answer: answer type is multiple, testing_id=$1, question_id=$2','Answer type is multiple. Testing ID = $1, Question ID = $2');
uis.lang_en('hln:send_answer: answer type is single, testing_id=$1, question_id=$2','Answer type is single. Testing ID = $1, Question ID = $2');
uis.lang_en('hln:send_answer: answer type is writing testing_id=$1, question_id=$2','Answer type is writing. Testing ID = $1, Question ID = $2');
uis.lang_en('hln:send_answer: testing status must be executed, testing_id=$1','Testing status must be "Launched". Testing ID = $1');
uis.lang_en('hln:testing','Testing');
uis.lang_en('hln:testing already finished, testing_id=$1','Testing has already finished. Testing ID = $1');
uis.lang_en('hln:testing is planned another person','Current testing is for another participant');
uis.lang_en('hln:testing status must be executed or paused, testing_id=$1, current testing status=$2','Testing status must be "Launched" or "Paused". Testing ID = $1, Current Testing Status = $2');
uis.lang_en('hln:testing_continue: testing status must be paused, testing_id=$1, current testing status=$2','Testing status must be "Paused". Testing ID = $1, Current Testing Status = $2');
uis.lang_en('hln:testing_enter: begin time must be set, testing_id=$1','Testing beginning time must be set. Testing ID = $1');
uis.lang_en('hln:testing_enter: testing cannot execute before begin time, testing_id=$1, testing begin time=$2','Testing cannot be launched until it begins. Testing ID = $1, Testing Beginning Time = $2');
uis.lang_en('hln:testing_enter: testing executes between begin time and end time, testing_id=$1, testing begin time=$2, testing end time=$3','Testing can be launched between beginning time and end time. Testing ID = $1, Testing Beginning Time = $2, Testing End Time = $3');
uis.lang_en('hln:testing_enter: testing status must new, testing_id=$1','Testing status must be "New". Testing ID = $1');
uis.lang_en('hln:testing_execute: cannot change to execute directly, testing_id=$1, current testing status=$2','You cannot finish testing without any status. Testing ID = $1, Current Testing Status = $2');
uis.lang_en('hln:testing_execute: firstly must set begin time to testing, testing_id=$1','At first, you must set testing beginning time. Testing ID = $1');
uis.lang_en('hln:testing_execute: testing cannot execute before begin time, testing_id=$1, testing begin time=$2','You cannot begin test in advance. Testing ID = $1, Testing Beginning Time = $2');
uis.lang_en('hln:testing_execute: testing executes between begin time and end time, testing_id=$1, testing begin time=$2, testing end time=$3','Testing can be begun in set time interval. Testing ID = $1, Testing Beginning Time = $2, Testing End Time = $3');
uis.lang_en('hln:testing_finish: cannot finish testing from new status until end time, testing_id=$1, end_time=$2','You cannot finish testing with status of "New" until it ends. Testing ID = $1, End Time = $2');
uis.lang_en('hln:testing_finish: cannot finish testing, writing questions are not checked completely, testing_id=$1','You cannot finish testing. Writing questions are not checked completely. Testing ID = $1.');
uis.lang_en('hln:testing_finish: testing already finished, testing_id=$1','Testing has already finished. Testing ID = $1');
uis.lang_en('hln:testing_pause: testing status must be executed, testing_id=$1, current testing status=$2','Testing status must be "Launched". Testing ID = $1, Current Testing Status = $2');
uis.lang_en('hln:testing_return_checking: testing status must be finished, testing_id=$1, current testing status=$2','Testing status must be "Finished". Testing ID = $1, Current Testing Status = $2');
uis.lang_en('hln:testing_return_execute: testing status must be checking or finished, testing_id=$1','Testing status must be "To be checked" or "Finished". Testing ID = $1');
uis.lang_en('hln:testing_save: examiner and person must be different, testing_id=$1','Examiner and participant cannot be the same simultaneosly. Testing ID = $1');
uis.lang_en('hln:testing_save: testing status must be new, testing_id=$1','Testing status must be "New". Testing ID = $1');
uis.lang_en('hln:testing_set_begin_time: testing status must be new, testing_id=$1','Testing status must be "New". Testing ID = $1');
uis.lang_en('hln:testing_set_new: testing status cannot be new, testing_id=$1','Testing status cannot be "New". Testing ID = $1');
uis.lang_en('hln:testing_start: current date($2) must be equal to testing date($3), testing_id=$1','Current date $2 must be equal to testing date $3. Testing ID = $1');
uis.lang_en('hln:testing_start: testing status must be new, testing_id=$1','Testing status must be "New". Testing ID = $1');
uis.lang_en('hln:testing_status:checking','To be checked');
uis.lang_en('hln:testing_status:executed','Launched');
uis.lang_en('hln:testing_status:finished','Finished');
uis.lang_en('hln:testing_status:new','New');
uis.lang_en('hln:testing_status:paused','Paused');
uis.lang_en('hln:testing_stop: cannot stop testing until end time, except attached person, testing_id=$1','Testing can be stopped only by participant. Testing ID = $1');
uis.lang_en('hln:testing_stop: testing status must be executed or paused, testing_id=$1, current testing status=$2','Testing status must be "Launched" or "Paused". Testing ID = $1, Current Testing Status = $2');
uis.lang_en('hln:today, you have attestation with $1{attestation_number} at $2{begin_time}','Today you have an Attestation with number of $1 at $2.');
uis.lang_en('hln:today, you have training with $1{training_number} at $2{begin_time}','Today you have an Training with number of $1 at $2.');
uis.lang_en('hln:training','Training');
uis.lang_en('hln:training_delete: training status must be new or finish, training_id=$1','Training status must be "New" or "Finished". Training ID = $1');
uis.lang_en('hln:training_delete: training status must be new, training_id=$1','Training status must be "New". Training ID = $1');
uis.lang_en('hln:training_execute: training status must be new or finished, training_id=$1','Training status must be "New" or "Finished". Training ID = $1');
uis.lang_en('hln:training_execute: training status must be new, training_id=$1','Training status must be "New". Training ID = $1');
uis.lang_en('hln:training_finish: to finish the training, all employees must checked, training_id=$1','All participants must be checked to finish the training. Training ID = $1');
uis.lang_en('hln:training_finish: training status must be executed, training_id=$1','Training status must be "Launched". Training ID = $1');
uis.lang_en('hln:training_save: training status must be new, training_id=$1','Training status must be "New". Training ID = $1');
uis.lang_en('hln:training_set_new: training status must be executed, training_id=$1','Training status must be "Launched". Training ID = $1');
uis.lang_en('hln:training_status:executed','Launched');
uis.lang_en('hln:training_status:finished','Finished');
uis.lang_en('hln:training_status:new','New');
uis.lang_en('hln:you attached as $1{person_type} to $2{action_kind} with $3{action_number} on $4{begin_time}','You attached as $1 to $2 with number $3. Start Date: $4.');
uis.lang_en('hln:you attached as $1{person_type} to $2{action_kind} with $3{action_number} on between $4{begin_time} and $5{end_time}','You are attached as $1 to $2 with the number $3. Period to start testing: between $4 and $5.');
uis.lang_en('hln:you detached from $1{action_kind} with $2{action_number} on $3{begin_time}','You detached from $1 with number $2. Start Date: $3.');
uis.lang_en('hln:you detached from $1{action_kind} with $2{action_number} on between $3{begin_time} and $4{end_time}','You are detached from $1 with the number $2. Period to start testing: from $3 to $4.');
uis.lang_en('hln:your $1{action_kind} info updated to $2{action_number} on $3{begin_time}','$1 with number $2 is updated. Start Date: $3.');
uis.lang_en('hln:your $1{action_kind} info updated to $2{action_number} on between $3{begin_time} and $4{end_time}','Your $1 info with the number $2 updated. Period to start testing: from $3 to $4.');
uis.lang_en('hpd:# $1{staff_name}','$1');
uis.lang_en('hpd:$1{person_name} created new $2{journal_type_name} journal','$1 created $2 document');
uis.lang_en('hpd:$1{person_name} delete $2{journal_type_name} journal','Employee $1 deleted document "$2"');
uis.lang_en('hpd:$1{person_name} deleted $2{journal_number} journal','$1 deleted $2 document');
uis.lang_en('hpd:$1{person_name} deleted $2{journal_type_name} journal','$1 deleted $2 document');
uis.lang_en('hpd:$1{person_name} posted $2{journal_type_name} journal','$1 posted $2 document');
uis.lang_en('hpd:$1{person_name} save $2{journal_type_name} journal','Employee $1 created document "$2"');
uis.lang_en('hpd:$1{person_name} saved $2{journal_type_name} journal','$1 saved $2 document');
uis.lang_en('hpd:$1{person_name} unposted $2{journal_type_name} journal','$1 canceled $2 document');
uis.lang_en('hpd:$1{person_name} update $2{journal_type_name} journal','Employee $1 modified document "$2"');
uis.lang_en('hpd:$1{person_name} updated $2{journal_type_name} journal','$1 edited $2 document');
uis.lang_en('hpd:$1{user_name} changed status of application for $2{application_type_name} $3{application_number} from $4{old_status_name} to $5{new_status_name}','$1 changed status of application for $2 $3 from "$4" to "$5"');
uis.lang_en('hpd:$1{user_name} created an application for $2{application_type_name} $3{application_number}','$1 created application for $2 $3');
uis.lang_en('hpd:001:message:unpost staff $1 hiring','To delete employee <b>$1</b> you must first cancel its hiring');
uis.lang_en('hpd:001:title:cannot delete staff','You can''t delete an employee');
uis.lang_en('hpd:002:message:employee $1{employee_name} staffs intersect on $2{intersection_date}','Work periods of employee <b>$1</b> intersected by <b>$2</b>');
uis.lang_en('hpd:002:solution:move hiring date after $2{intersection_date}','Move <b>hiring</b> date to work <b>after</b> $2');
uis.lang_en('hpd:002:title:staff intersection found','Intersection in work periods');
uis.lang_en('hpd:003:message:got unregistered vacation turnover days kind','Day type not found, contact administrator');
uis.lang_en('hpd:003:title:days kind not found {vacation turnover days kind}','Day type not found');
uis.lang_en('hpd:004:message:cannot post vacation for $1{staff_name} on $2{exceed_date}, exceed_amount=$3','Failed to take employee vacation <b>$1</b> from $2, exceeded limit is <b>$3</b> days');
uis.lang_en('hpd:004:solution:add vacation limit days or decrease vacation days','Increase <b>limit</b> vacation days for an employee or reduce <b>duration</b> vacation');
uis.lang_en('hpd:004:title:vacation limit exceeded','Vacation limit exceeded');
uis.lang_en('hpd:005:message:staff $1{staff_name} has dismissal on $1{first_dismissal_date} and $2{second_dismissal_data_two}','Employee <b>$1</b> was dismissed <b>two</b> times. First time dismissed from $1 number, second time from $2');
uis.lang_en('hpd:005:title:two dismissals found','Found two dismissals');
uis.lang_en('hpd:006:message:$1{interval_kind} blocks $2{trans_type} changes for staff $3{staff_name} between $4{begin_date} and $5{end_date}','<b>$1</b> blocks changes to $2 for employee <b>$3</b> between $4 and $5');
uis.lang_en('hpd:006:solution:move $1{trans_type} change date after $2{block_end_date}','Move <b>modified date</b> $1 after $2');
uis.lang_en('hpd:006:solution:unpost $1{interval_kind} on $2{blocked_period}','Cancel <b>$1</b> for $2');
uis.lang_en('hpd:006:title:locked interval found','Time interval locked');
uis.lang_en('hpd:007:message:cannot post transaction for $1{staff_name}, because $2{trans_type} transaction on $3{trans_date} comes before hiring_date ($4{hiring_date})','Failed to post change $2 for employee <b>$1</b> because the <b>change</b> date ($3) is <b>before</b> the <b>hiring</b> date ($4)');
uis.lang_en('hpd:007:solution:move hiring date before transaction date ($1{trans_date})','Move the hiring date before the change date ($1)');
uis.lang_en('hpd:007:solution:move transaction date after hiring date ($1{hiring_date})','Move the change date after the hiring date ($1)');
uis.lang_en('hpd:007:title:found transaction before hiring','Changes before hiring');
uis.lang_en('hpd:008:message:cannot post transaction for $1{staff_name}, because $2{trans_type} transaction on $3{trans_date} comes after dimissal ($4{dismissal_date})','Failed to post change $2 for employee <b>$1</b> because the <b>change</b> date ($3) is <b>after</b> the <b>dismissal</b> date ($4 )');
uis.lang_en('hpd:008:solution:move dismissal date after transaction date ($1{trans_date})','Move the dismissal date after the change date ($1)');
uis.lang_en('hpd:008:solution:move transaction date before dismissal date ($1{dismissal_date})','Move the change date before the dismissal date ($1)');
uis.lang_en('hpd:008:title:found transaction after dismissal','Changes after dismissal');
uis.lang_en('hpd:009:message:to remove $1{staff_name} hirings all transactions should be unposted','To cancel the hire of an employee $1, cancel all transactions');
uis.lang_en('hpd:009:title:staff has posted transactions','Transactions found');
uis.lang_en('hpd:010:message:secondary job for staff $1{staff_name} started ($2{secondary_hiring}) before primary job ($3{primary_hiring})','Employee <b>$1</b> internal part-time job started ($2) <b>before</b> start date of <b>primary</b> job');
uis.lang_en('hpd:010:solution:move secondary hiring date after primary hiring date ($1{primary_hiring})','Move the beginning of the internal part-time job after the date of admission to the main job ($1)');
uis.lang_en('hpd:010:title:secondary job cross out primary job','Internal part-time job cross out primary job');
uis.lang_en('hpd:011:message:secondary job for staff $1{staff_name} ended ($2{secondary_dismissal}) after primary job ($3{primary_dismissal})','Internal part-time employee <b>$1</b> dismissed ($2) <b>after</b> dismissed date of <b>primary</b> job');
uis.lang_en('hpd:011:solution:move secondary dismissal date before primary dismissal date ($1{primary_hiring})','Move the dismissal date of internal part-time job to the date of dismissal date from the primary job ($1)');
uis.lang_en('hpd:011:title:secondary job cross out primary job','Internal part-time job cross out primary job');
uis.lang_en('hpd:012:message:staff $1{staff_name} secondary job requires primary job to be created','To hire an employee <b>$1</b> for an internal part-time job, he must be hired');
uis.lang_en('hpd:012:solution:create primary job for staff $1{staff_name} before $2{hiring_date}','Create an hiring for a <b>primary</b> job up to $2');
uis.lang_en('hpd:012:title:primary job not found','Primary job not found');
uis.lang_en('hpd:013:message:multiple primary jobs found after $1{hiring_date} for staff $2{staff_name}','During the period of internal part-time work of employee <b>$1</b>, several primary jobs were found');
uis.lang_en('hpd:013:title:secondary job intersects multiple primary jobs','Several primary jobs');
uis.lang_en('hpd:014:message:cannot post transaction for $1{staff_name}, because $2{trans_type} transaction on $3{trans_date} comes before hiring_date ($4{hiring_date})','Failed to post change $2 for employee <b>$1</b> because the <b>change</b> date ($3) is <b>before</b> the <b>hiring</b> date ($4)');
uis.lang_en('hpd:014:solution:move hiring date before transaction date ($2{trans_date})','Move the hiring date before the change date ($1)');
uis.lang_en('hpd:014:solution:move transaction date after hiring date ($1{hiring_date})','Move the change date after the hiring date ($1)');
uis.lang_en('hpd:014:title:transaction before hiring date','Changes before hiring');
uis.lang_en('hpd:015:message:staff $1{staff_name} was dismissed $2{dismissed_cnt} times','Employee <b>$1</b> was dismissed $2 times');
uis.lang_en('hpd:015:solution:unpost one of dismissals','Cancel one of the dismissals');
uis.lang_en('hpd:015:title:multiple dismissals found','Found multiple dismissals');
uis.lang_en('hpd:016:message:hiring date ($1{hiring_date}) for staff $2{staff_name} should not come after dismissal date ($3{dismissal_date})','Hire date ($1) of employee <b>$2</b> was after the date of dismissal ($3)');
uis.lang_en('hpd:016:solution:move dismissal date after desired hiring date ($1{hiring_date})','Move your dismissal date after your desired hire date ($1)');
uis.lang_en('hpd:016:solution:move hiring date before dismissal date ($1{dismissal_date})','Move hire date before dismissal date ($1)');
uis.lang_en('hpd:016:title:hiring after dismissal','Dismissal before hiring');
uis.lang_en('hpd:017:message:cannot remove hiring. staff $1{staff_name} is already dismissed','Failed to cancel the hiring. Employee <b>$1</b> has already been dismissed');
uis.lang_en('hpd:017:solution:unpost dismissal and try again','Cancel the dismissal and try again');
uis.lang_en('hpd:018:message:cannot remove hiring. staff $1{staff_name} has secondary jobs','Failed to cancel the hiring. Employee <b>$1</b> works internally');
uis.lang_en('hpd:018:solution:remove all secondary jobs and try again','Cancel all internal part-time jobs and try again');
uis.lang_en('hpd:019:message:cannot change hiring date. secondary job for staff $1{staff_name} starts ($2{secondary_hiring}) before hiring date ($3{primary_hiring})','Failed to change the hire date. Internal part-time job for employee <b>$1</b> started ($2) <b>before</b> date of hiring to the primary job ($3)');
uis.lang_en('hpd:019:solution:move hiring date before secondary job start ($1{secondary_hiring})','Move the date of hiring to the primary  job before the start date of the internal part-time job');
uis.lang_en('hpd:019:solution:move secondary job start after hiring date ($1{orimary_hiring})','Move the start date of the internal part-time job after the date of hiring to the primary  job ($1)');
uis.lang_en('hpd:020:message:dismissal date ($1{dismissal_date}) for staff $2{staff_name} should not come before hiring date ($3{hiring_date})','Employee <b>$2</b> dismissal date ($1) before the hire date ($3)');
uis.lang_en('hpd:020:solution:move dismissal date after hiring date ($1{hiring_date})','Move the dismissal date after the hire date ($1)');
uis.lang_en('hpd:020:solution:move hiring date before desired dismissal date ($1{dismissal_date})','Move hire date before desired dismissal date ($1)');
uis.lang_en('hpd:020:title:dismissal before hiring','Dismissal before hiring');
uis.lang_en('hpd:021:message:staff kind changed for staff $1{staff_name} when transfering other position','The type of employment cannot be changed when transferring to another position. The employment type of employee <b>$1</b> has been changed');
uis.lang_en('hpd:021:title:cannot change staff kind','Changing the type of employment');
uis.lang_en('hpd:022:message:journal $1{journal_number} already posted','Document with number <b>$1</b> has already been posted');
uis.lang_en('hpd:023:message:to unpost journal $1{journal_number} it should be initially posted','Unable to cancel document with number <b>$1</b>. The document has not been posted');
uis.lang_en('hpd:024:message:found intersection for staff $1{staff_name} on $2{intersect_start} – $3{intersect_date}','Intersection found for employee <b>$1</b> between <b>$2</b> and <b>$3</b>');
uis.lang_en('hpd:024:solution:move $1{interval_kind} end date before $2{intersect_start}','Move validity period $1 to $2');
uis.lang_en('hpd:024:solution:move $1{interval_kind} out of $2{intersect_start} and $3{intersect_end}','Move the $1 validity period beyond the $2 to $3 period');
uis.lang_en('hpd:024:solution:move $1{interval_kind} start date after $2{intersect_end}','Move validity period $1 after $2');
uis.lang_en('hpd:024:title:cannot post $1{interval_kind}','Failed to post $1');
uis.lang_en('hpd:025:message:cannot unpost $1{interval_kind} for staff $2{staff_name}, found charge linked to interval on $3{charge_begin} – $4{charge_end}','Failed to cancel <b>$1</b> for employee <b>$2</b>, the associated order from $3 to $4 is already used in <b>accruals</b>');
uis.lang_en('hpd:025:solution:remove charge by deleting its book','Remove related orders from all accruals');
uis.lang_en('hpd:025:title:used charge found','Used order found');
uis.lang_en('hpd:026:message:cv contract $1{contract_id} already posted','Civil contract with ID <b>$1</b> has already been completed');
uis.lang_en('hpd:027:message:to unpost cv contract $1{contract_id} it should be initially posted','Failed to cancel civil contract with ID <b>$1</b>. The contract was not posted');
uis.lang_en('hpd:028:message:cannot unpost cv contract for $1{person_name}, found facts linked to interval on $2{facts_month}','Failed to cancel civil contract with <b>$1</b>, related completed services found');
uis.lang_en('hpd:028:solution:unpost facts and try again','Cancel service termination and try again');
uis.lang_en('hpd:028:title:used facts found','Used service found');
uis.lang_en('hpd:029:message:to early close cv contract $1{contract_id} it should be initially posted','Failed to prematurely end the civil contract with ID <b>$1</b>. The contract was not posted');
uis.lang_en('hpd:030:message:fatal:there is not any changed transactions','Change operations not found');
uis.lang_en('hpd:031:message:cv contract $1{contract_id} must have date for early closure','Failed to prematurely end the civil contract with ID <b>$1</b>. End date not specified');
uis.lang_en('hpd:032:message:cannot save timeoff. timeoffs journal cannot be changed, trying to change timeoff $1{timeoff_id} in journal $2{journal_id}','Failed to save the official absence. Changed document ID ($2) official absence');
uis.lang_en('hpd:033:message:staff state must be passive, staff_name=$1','Employee <b>$1</b> state must be passive');
uis.lang_en('hpd:033:message:to delete staff first unpost staff $1 hiring','To delete employee <b>$1</b> you must first cancel its hiring');
uis.lang_en('hpd:033:title:cannot delete staff','You can''t delete an employee');
uis.lang_en('hpd:034:message:expected journal types $1{journal types} but got $2{wrong_journal_type}','Expected one of document types <b>$1</b>, but received type <b>$2</b>');
uis.lang_en('hpd:034:title:wrong journal type','Wrong document type');
uis.lang_en('hpd:035:message:cannot change/save journal. journal $1{journal_number} already posted','Failed to save document. Document <b>$1</b> has already been posted');
uis.lang_en('hpd:035:solution:post journal with changes','Post document along with changes');
uis.lang_en('hpd:035:solution:unpost journal then save changes','Cancel document and save changes');
uis.lang_en('hpd:036:message:journal type was $1{wrong_journal_type} but got expected journal types $2{journal types}','Document type was <b>$1</b> but expected document types changed to <b>$2</b>');
uis.lang_en('hpd:036:title:journal type cannot change','Changing the Document Type');
uis.lang_en('hpd:037:message:cannot delete hiring for staff $1{staff_name} found journal $2{journal_number} linked to staff','Failed to delete hiring for employee <b>$1</b>. Document <b>$2</b> is associated with an employee');
uis.lang_en('hpd:037:solution:remove staff from journal $1{journal_number} and try again','Delete employee from document <b>$1</b> and try again');
uis.lang_en('hpd:037:title:staff linked other journals','Related documents found');
uis.lang_en('hpd:038:message:cannot delete journal. journal $1{journal_number} already posted','Failed to delete posted document <b>$1</b>');
uis.lang_en('hpd:038:solution:unpost journal and try again','Cancel the document and try again');
uis.lang_en('hpd:039:message:contract $1{contract_id} has no items, when access to add item is no contract must have at least one item','There are no services in the civil contract <b>$1</b>. If there is no access to add services, the civil contract must contain at least one service');
uis.lang_en('hpd:039:title:no contract items','Services not found');
uis.lang_en('hpd:040:message:cannot change/save cv contract. cv contract $1{contract_id} already posted','Failed to save the civil contract. Contract <b>$1</b> has already been completed');
uis.lang_en('hpd:040:solution:post contract with changes','Post the contract along with the changes');
uis.lang_en('hpd:040:solution:unpost contract then save changes','Cancel the contract and try again');
uis.lang_en('hpd:041:message:cannot delete cv contract. cv contract $1{contract_id} must be unposted','Failed to delete posted civil contract <b>$1</b>');
uis.lang_en('hpd:041:solution:unpost contract and try again','Cancel the contract and try again');
uis.lang_en('hpd:042:message:cannot save overtime. overtimes journal cannot be changed, trying to change overtime $1{overtime_id} in journal $2{journal_id}','Failed to save overtime. Changed overtime document ID ($2)');
uis.lang_en('hpd:043:message:journal type not registered','Unregistered document type. Contact the administrator');
uis.lang_en('hpd:044:message:staff $1{staff_name} has several oper types attached for $2{oper_group_name}','Employee <b>$1</b> has several types of accruals associated with group <b>$2</b>');
uis.lang_en('hpd:044:solution:remove all but one oper types and try again','Remove all but one type of accrual and try again');
uis.lang_en('hpd:045:message:singular type journal cannot contain more than 1 page','This document type can only contain one page');
uis.lang_en('hpd:045:solution:change journal type to multiple','Select the appropriate document type ''List''');
uis.lang_en('hpd:045:solution:send each page in separate journal','Send each page in separate document');
uis.lang_en('hpd:046:message:cannot change existing journal type','Document type cannot be changed');
uis.lang_en('hpd:046:solution:restore old journal type $1{journal_type_name}','Set the old document type <b>$1</b> and try again');
uis.lang_en('hpd:047:message:cannot change page in singular journal type','This document type does not allow page replacement');
uis.lang_en('hpd:047:solution:change journal type to multiple','Select the appropriate document type ''List''');
uis.lang_en('hpd:047:solution:send each employee in separate journal','Send each page in separate document');
uis.lang_en('hpd:048:message:too many pages. given journal has several journals, route ($1{request_route_uri}) allows only one page per journal','The selected URI ($1) allows only one employee at a time');
uis.lang_en('hpd:049:message:schedule for $1{staff_name} is not selected in schedule change journal','Work schedule for <b>$1</b> is not selected for "Work Schedule Change"');
uis.lang_en('hpd:049:solution:select schedule for $1{staff_name}','Select work schedule for <b>$1</b>');
uis.lang_en('hpd:050:message:given overtime date $1 doesnt belong to the given month $2','Selected date $1 does not match selected month $2');
uis.lang_en('hpd:051:message:too many overtime journals assigned to one journal','Too many overtime for one document');
uis.lang_en('hpd:052:message:chosen time kind $1{time_kind_name} is not a vacation time kind','The selected type of working time is not vacation.');
uis.lang_en('hpd:052:solution:choose vacation time kind or one of its descendants','Select the type of working time with the "Vacation" parent.');
uis.lang_en('hpd:052:title:wrong time kind','Error with working time type');
uis.lang_en('hpd:053:message:timebook adjustment for $1{staff_name} on $2{adjustment_date} has already been calced in $3{journal_number} from $4{journal_date}','Time sheet adjusment for $1 for $2 has been already completed in document with the number of $3 and date = $4');
uis.lang_en('hpd:053:solution:remove adjustment  for $1{staff_name} on $2{adjustment_date} from journal and try again','Delete adjustment for $1 for $2 from document and try again');
uis.lang_en('hpd:053:solution:unpost journal $1{journal_number} from $2{journal_date} and try again','Cancel document with the number of $1 for $2 and try again');
uis.lang_en('hpd:053:title:timebook adjustment has already been calced','Time sheet adjustment has been already completed');
uis.lang_en('hpd:054:message:timesheet for $1{staff_name} on $2{adjustment_date} is not found','Work schedule not found for $1 for $2');
uis.lang_en('hpd:054:solution:set daily schedule for $1{staff_name} on $2{adjustment_date} and try again','Set work schedule for $1 for $2 and try again');
uis.lang_en('hpd:054:title:timesheet is not found','Work schedule not found');
uis.lang_en('hpd:055:message:application $1{application_number} cannot be deleted in status $2{status_name}','Application $1 cannot be deleted with status $2');
uis.lang_en('hpd:055:solution:change status to new and try again','Change status to "New" and try again');
uis.lang_en('hpd:056:message:application $1{application_number} cannot be edited in status $2{status_name}','Application $1 cannot be edited with status $2');
uis.lang_en('hpd:056:solution:change status to new and try again','Change status to "New" and try again');
uis.lang_en('hpd:057:message:application type not registered','Application type not registered');
uis.lang_en('hpd:058:message:status new{status_name} can only be assigned from status waiting{status_name}, application_number=$1, status_name=$2','Only from "Waiting" status can be changed to "New" status. Application Number = $1, Status = $2');
uis.lang_en('hpd:058:title:invalid status transition','Invalid status change');
uis.lang_en('hpd:059:message:status waiting{status_name} can only be assigned from statuses (new, approved, canceled){status_names}, application_number=$1, status_name=$2','Only from the statuses "New, Approved and Canceled" can be changed to the status "New". Application number = $1, Status = $2');
uis.lang_en('hpd:059:title:invalid status transition','Invalid status change');
uis.lang_en('hpd:060:message:status approved{status_name} can only be assigned from statuses (waiting, in progress){status_names}, application_number=$1, status_name=$2','Only from "Waiting and In progress" status can be changed to "Approved" status. Application Number = $1, Status = $2');
uis.lang_en('hpd:060:title:invalid status transition','Invalid status change');
uis.lang_en('hpd:061:message:status in progress{status_name} can only be assigned from statuses (approved, complete){status_names}, application_number=$1, status_name=$2','Only from "Approved and Completed" status can be changed to "In progress" status. Application Number = $1, Status = $2');
uis.lang_en('hpd:061:title:invalid status transition','Invalid status change');
uis.lang_en('hpd:062:message:status complete{status_name} can only be assigned from status in progress{status_name}, application_number=$1, status_name=$2','Only from "Waiting" status can be changed to "Completed" status. Application Number = $1, Status = $2');
uis.lang_en('hpd:062:title:invalid status transition','Invalid status change');
uis.lang_en('hpd:063:message:status canceled{status_name} can only be assigned from status waiting{status_name}, application_number=$1, status_name=$2','Only from "Waiting" status can be changed to "Canceled" status. Application Number = $1, Status = $2');
uis.lang_en('hpd:063:title:invalid status transition','Invalid status change');
uis.lang_en('hpd:063:title:the source is changed','Source is changed');
uis.lang_en('hpd:064:message:application $1{application_number} result can be binded only when status is in progress{status_name}, status_name=$2','In order <b>$1</b>, the result can be recorded with the status "In progress". Status = <b>$2</b>');
uis.lang_en('hpd:065:message:application $1{application_number} result not found','Application result $1 not found');
uis.lang_en('hpd:065:solution:you might need to add a posted journal based on this application','You can add a posted document based on the current application');
uis.lang_en('hpd:065:solution:you might need to add a robot based on this application','You can add a position based on the current application');
uis.lang_en('hpd:066:message:application $1{application_number} based journal $2{journal_number} employee $3{employee_name} does not match with employee $4{employee_name} in application','Application <b>$1</b> based on document <b>$2</b> and employee $3 does not match employee $4 on the application');
uis.lang_en('hpd:067:message:application $1{application_number} based journal $2{journal_number} already exists','Application <b>$1</b> based on document <b>$2</b> already exists');
uis.lang_en('hpd:067:solution:you can delete journal $1{journal_number} and try to add new','You can delete document <b>$1</b> and try adding a new one');
uis.lang_en('hpd:067:solution:you can edit existing journal $1{journal_number}','You can modify an existing document $1');
uis.lang_en('hpd:068:message:cannot change/save journal. the source of the journal $1{journal_number} cannot be changed','Unable to modify/save document, source $1 cannot be modified');
uis.lang_en('hpd:068:solution:do this action in $1{source_name} form and source_id is $2{source_id}','Do your last action at source $1 with document ID = $2');
uis.lang_en('hpd:069:message:cannot post journal. the source of the journal $1{journal_number} and the source of this action are not equal','Unable to post document. Document source $1 and activity source are not equal');
uis.lang_en('hpd:069:solution:do this action in $1{source_name} form and source_id is $2{source_id}','Do your last action at source $1 with document ID = $2');
uis.lang_en('hpd:069:solution:remove this jounal from the list and try again','Delete the document from HR documents and try again');
uis.lang_en('hpd:069:title:the source is changed','Source changed');
uis.lang_en('hpd:070:message:cannot unpost/delete journal. the source of the journal $1{journal_number} and the source of this action are not equal','Unable to cancel/delete the document. Document source $1 and activity source are not equal');
uis.lang_en('hpd:070:solution:do this action in $1{source_name} form and source_id is $2{source_id}','Do your last action at source $1 with document ID = $2');
uis.lang_en('hpd:070:solution:remove this jounal from the list and try again','Delete the document from HR documents and try again');
uis.lang_en('hpd:070:title:the source is changed','Source changed');
uis.lang_en('hpd:071:message:when saving application expected $1{expected_application_type_name} application type, but got $2{wrong_application_type_name} application type','When saving application expected application type: $1, but got $2');
uis.lang_en('hpd:071:title:application type cannot be changed','Application type cannot be changed');
uis.lang_en('hpd:072:message:you must select currency when it is enabled','Choose a currency for employee''s wages');
uis.lang_en('hpd:073:message:hiring journal not found, staff_id: $1{staff_id}','Hiring not found, Employee ID = $1');
uis.lang_en('hpd:074:message:staff $1{staff_name} must have at least one continuous transaction','Employee <b>$1</b> must have at least one continuous transaction');
uis.lang_en('hpd:074:solution:in journal $1{journal_number} (id: $2{journal_id}) remove end date','Remove end date in document <b>$1</b> (ID: <b>$2</b>)');
uis.lang_en('hpd:074:title:continuous transaction','Discrete transactions');
uis.lang_en('hpd:075:message:$1{interval_kind} blocks timesheet adjustments for staff $2{staff_name} on $3{timeoff_date}','<b>$1</b> blocks Time Sheet Adjustment for employee <b>$2</b> on <b>$3</b>');
uis.lang_en('hpd:075:solution:unpost $1{interval_kind} on $2{timeoff_date}','Unpost <b>$1</b> on <b>$2</b>');
uis.lang_en('hpd:075:title:timeoff found','Official absence found');
uis.lang_en('hpd:076:message:timesheet adjustment blocks $1{interval_kind} for staff $2{staff_name} on $3{adjustment_date}','Time Sheet Adjustment blocks <b>$1</b> for employee <b>$2</b> on <b>$3</b>');
uis.lang_en('hpd:076:solution:unpost timesheet adjustment on $1{adjustment_date}','Unpost Time Sheet Adjustment on <b>$1</b>');
uis.lang_en('hpd:076:title:timesheet adjustment found','Time Sheet Adjustment found');
uis.lang_en('hpd:077:message:you must select at least one region','At least one region must be selected!');
uis.lang_en('hpd:078:message:fte of $1{employee_name} has exceeded the fte limit','Full Time Equivalent of <b>$1</b> has exceeded the limit');
uis.lang_en('hpd:079:message:application $1{application_number} must have at least one transferred staff','The application $1 must have at least one employee.');
uis.lang_en('hpd:079:solution:try to add at least one staff transfer into application $1{application_number} and try again','Add at least one HR Transfer to application with number <b>$1</b> and try again');
uis.lang_en('hpd:079:title:no transfers found','Transfers not found');
uis.lang_en('hpd:080:message:application must have at least one staff transfer, application_type=$1','The application must contain at least one HR Transfer. Application Type ID = $1');
uis.lang_en('hpd:080:title:no transfers found','Transfers not found');
uis.lang_en('hpd:081:message:contractor journal must have an end date','Hiring to a Civil-Law Contract must have a End Date');
uis.lang_en('hpd:082:message:cannot change employment type to contractor','Unable to change the employment type to "Contractor"');
uis.lang_en('hpd:082:solution:remove staff $1 from journal','Delete employee <b>$1</b> from the document');
uis.lang_en('hpd:083:message:cannot have contractor employees in transfer journal','It is impossible to transfer employees with Civil-Law Contract');
uis.lang_en('hpd:083:solution:remove staff $1 from journal','Delete employee <b>$1</b> from the document');
uis.lang_en('hpd:084:message:for post this journal, sign document status must be approved, sign document status: $1{document_status}, journal number: $2{journal_number}','A workflow must be approved to post this document. Document number = $2, workflow status = $1.');
uis.lang_en('hpd:084:solution:change sign document status to approved and try again','Approve the workflow and try again.');
uis.lang_en('hpd:084:title:cannot post this journal','Unable to post the document.');
uis.lang_en('hpd:085:message:for delete this journal, sign document status must be draft, sign document status: $1{document_status}, journal number: $2{journal_number}','The workflow must be in "Draft" to delete this document. Document number = $2, workflow status = $1.');
uis.lang_en('hpd:085:solution:change sign document status to draft and try again','Change the document state to "Draft" and try again.');
uis.lang_en('hpd:085:title:cannot delete this journal','Unable to delete a document.');
uis.lang_en('hpd:086:message:for edit this journal, sign document status must be draft, sign document status: $1{document_status}, journal number: $2{journal_number}','The workflow must be in "Draft" to change this document. Document number = $2, workflow status = $1.');
uis.lang_en('hpd:086:solution:change sign document status to draft and try again','Change the document state to "Draft" and try again.');
uis.lang_en('hpd:086:title:cannot edit this journal','Unable to edit the document.');
uis.lang_en('hpd:087:message:for unpost this journal, sign document status must be approved, sign document status: $1{document_status}, journal number: $2{journal_number}','A workflow must be approved to cancel this document. Document number = $2, workflow status = $1.');
uis.lang_en('hpd:087:solution:change sign document status to approved and try again','Approve the workflow and try again.');
uis.lang_en('hpd:087:title:cannot unpost this journal','Unable to cancel a document.');
uis.lang_en('hpd:088:message:for save sign document you must create sign template for this journal type, journal type name: $1{journal_type_name}','To saving Workflow, you must create Workflow Template for this Document type,  Document type: $1');
uis.lang_en('hpd:088:solution:create sign template for this journal and try again','Create Workflow Template for this Document and try again');
uis.lang_en('hpd:088:title:cannot save sign document','Unable to save workflow.');
uis.lang_en('hpd:089:message:for save sign document journal must be unposted, journal number: $1{journal_number}','A workflow must be canceled to save this document. Document number = $1.');
uis.lang_en('hpd:089:solution:unpost journal and try again','Cancel the document and try again');
uis.lang_en('hpd:089:title:cannot save sign document','Unable to  save workflow.');
uis.lang_en('hpd:090:message:for edit journal sign document status must be draft and journal must be unposted, sign document status: $1{status}, journal number: $2{journal_number}','The workflow must be in "Draft" to change this document. Document number = $2, workflow status = $1.');
uis.lang_en('hpd:090:solution:unpost journal and change sign document status to draft and try again','Cancel the document and try again');
uis.lang_en('hpd:090:title:you cannot edit journal','Unable to change the document');
uis.lang_en('hpd:adjustment_kind: full','Employees with attendance');
uis.lang_en('hpd:adjustment_kind: incomplete','Employees without attendance');
uis.lang_en('hpd:application_status:approved','Approved');
uis.lang_en('hpd:application_status:cancel','Canceled');
uis.lang_en('hpd:application_status:canceled','Canceled');
uis.lang_en('hpd:application_status:complete','Completed');
uis.lang_en('hpd:application_status:completed','Completed');
uis.lang_en('hpd:application_status:in_progress','In progress');
uis.lang_en('hpd:application_status:new','New');
uis.lang_en('hpd:application_status:waiting','Waiting');
uis.lang_en('hpd:assert_changed_intervals: locked interval found, staff_id=$1, begin_date=$2, end_date=$3','Locked interval found. Employee ID = $1, Start Date = $2, End Date = $3');
uis.lang_en('hpd:assert_lock_intervals: locked interval found, line_trans_id=$1, staff_id=$2, begin_date=$3, end_date=$4','Unable to post operations. A blocked time period was found. Transaction ID = $1, Employee ID = $2, Start Date = $3, End Date = $4');
uis.lang_en('hpd:assert_vacation_turnover: vacation limit exceeded, staff_id=$1, staff_name=$2, period=$3, planned_days=$4, used_days=$5','Vacation days limit exceeded. Employee ID = $1, Employee = $2, Period = $3, Planned Days = $4, Used Days = $5');
uis.lang_en('hpd:cannot delete journal, it is posted, journal_id=$1','You cannot delete posted HR document. ID = $1');
uis.lang_en('hpd:contract_employment:freelancer','Civil-Law Contract');
uis.lang_en('hpd:contract_employment:staff member','Employee number');
uis.lang_en('hpd:cv_contract_kind:cyclical','Cyclical');
uis.lang_en('hpd:cv_contract_kind:simple','One-time');
uis.lang_en('hpd:document flow for $1{document_type_name} №$2{journal_number} with date of $3{journal_date}','Workflow for $1 №$2 with date of $3');
uis.lang_en('hpd:employment_type:contractor','Contractor');
uis.lang_en('hpd:employment_type:external_parttime','External Secondary Employment');
uis.lang_en('hpd:employment_type:internal_parttime','Internal Secondary Employment');
uis.lang_en('hpd:employment_type:main_job','Primary Employment');
uis.lang_en('hpd:error:interval_kind:business_trip','business trip');
uis.lang_en('hpd:error:interval_kind:perfomance','efficiency calculation');
uis.lang_en('hpd:error:interval_kind:sales_bonus_department_sales','Department Sales');
uis.lang_en('hpd:error:interval_kind:sales_bonus_personal_sales','Personal Sales');
uis.lang_en('hpd:error:interval_kind:sales_bonus_successful_delivery','Successful delivery');
uis.lang_en('hpd:error:interval_kind:sick_leave','sick leave');
uis.lang_en('hpd:error:interval_kind:timebook','time sheet');
uis.lang_en('hpd:error:interval_kind:timeoff','official absence');
uis.lang_en('hpd:error:interval_kind:vacation','vacation');
uis.lang_en('hpd:error:source:recommended rank document','Rank Promotion Document');
uis.lang_en('hpd:error:trans_type:currency','Currency');
uis.lang_en('hpd:error:trans_type:operation','remuneration');
uis.lang_en('hpd:error:trans_type:rank','rank');
uis.lang_en('hpd:error:trans_type:robot','position');
uis.lang_en('hpd:error:trans_type:schedule','work schedule');
uis.lang_en('hpd:error:trans_type:vacation limit','Vacation limit');
uis.lang_en('hpd:fte_kind:custom','Custom');
uis.lang_en('hpd:fte_kind:full','Full');
uis.lang_en('hpd:fte_kind:half','Half');
uis.lang_en('hpd:fte_kind:occupied','Used');
uis.lang_en('hpd:fte_kind:quarter','Quarter');
uis.lang_en('hpd:hpd_api.journal_staff_repairing: staff linked other journals, staff_id=$1, journal_id=$2','Linked HR documents with current employee left. Employee ID = $1, Document ID = $2');
uis.lang_en('hpd:hpd_api.staff_delete: staff state must be passive for deleting, staff_id=$1','Status must be Inactive for delete an employee. Employee ID = $1');
uis.lang_en('hpd:hpd_core.agreement_evaluate: after dismiss staff, cannot post other documents, after dismiss journal_id=$1, employee_id=$2, employee_number=$3, employee_name=$4','You cannot post documents, if u dismissed an employee before. Document ID = $1, Employee ID = $2, PersNo = $3');
uis.lang_en('hpd:hpd_core.agreement_evaluate: exist any documents before hiring journal_id=$1, employee_id=$2, employee_number=$3, employee_name=$4','Some HR documents found before hiring. Document ID = $1, Employee ID = $2, PersNo = $3, Full Name = $4');
uis.lang_en('hpd:hpd_core.agreement_evaluate: staff has posted documents, initially unpost transfer documents, staff_id=$1','There are some posted documents related to current employee, firstly, cancel all the related documents. Employee ID = $1');
uis.lang_en('hpd:hpd_core.agreement_fill: after dismiss staff, cannot post other documents, after dismiss journal_id=$1, employee_id=$2, employee_number=$3, employee_name=$4','You cannot post documents, if u dismissed an employee before. Document ID = $1, Employee ID = $2, PersNo = $3');
uis.lang_en('hpd:hpd_core.agreement_fill: exist any documents before hiring journal_id=$1, employee_id=$2, employee_number=$3, employee_name=$4','Some HR documents found before hiring. Document ID = $1, Employee ID = $2, PersNo = $3, Full Name = $4');
uis.lang_en('hpd:hpd_core.agreement_fill: two dismissal transactions found, staff_id=$1, dismissal_dare=$2','2 dismissal documents found. Employee ID = $1, Dismissal Date = $2');
uis.lang_en('hpd:hpd_core.agreements_evaluate: after dismiss staff, cannot post other documents, after dismiss journal_id=$1, employee_id=$2, employee_number=$3, employee_name=$4','You cannot post documents, if u dismissed an employee before. Document ID = $1, Employee ID = $2, PersNo = $3');
uis.lang_en('hpd:hpd_core.agreements_evaluate: exist any documents before hiring journal_id=$1, employee_id=$2, employee_number=$3, employee_name=$4','Some HR documents found before hiring. Document ID = $1, Employee ID = $2, PersNo = $3, Full Name = $4');
uis.lang_en('hpd:hpd_core.agreements_evaluate: staff has posted documents, initially unpost transfer documents, staff_id=$1','There are some posted documents related to current employee, firstly, cancel all the related documents. Employee ID = $1');
uis.lang_en('hpd:hpd_core.assert_intersection_staff: primary employee have a intersection, employee_id=$1, staff_id=$2, intersected_staff_id=$3','Employee can only have 1 primary employment. There are some intersections in documents. Employee ID = $1, Employee ID = $2, Intersected Employee ID = $3');
uis.lang_en('hpd:hpd_core.dismissal_trans_insert: hiring date is not grater than dismissal date, staff_id=$1, hiring_date=$2, dismissal_date=$3','Hiring date should not be greater than dismissal date. Employee ID = $1, Hiring Date = $2, Dismissal Date = $3');
uis.lang_en('hpd:hpd_core.get_parent_staff: primary jobs are not found, employee_id=$1, hiring_date=$2','In order to have a internal secondary eomployment, employee must have at least 1 primary employment, Employment ID = $1, Hiring Date = $2');
uis.lang_en('hpd:hpd_core.get_parent_staff: secondary job cross out primary job, employee_id=$1, hiring_date=$2, dismissal_date=$3','Internal secondary employment must be in the primary employment time interval. Employee ID = $1, Hiring Date = $2, Dismissal Date = $3');
uis.lang_en('hpd:hpd_core.get_parent_staff: secondary job cross outs and intersects multiply primary jobs, employee_id=$1, hiring_date=$2, dismissal_date=$3','Time interval of internal secondary employment must be only in one time interval of primary employment. Employee ID = $1, Hiring Date = $2, Dismissal Date = $3');
uis.lang_en('hpd:hpd_core.journal_post: journal already posted, journal_number=$1','Document has been already posted, Number = $1');
uis.lang_en('hpd:hpd_core.journal_unpost: journal already unposted, journal_number=$1','Document has been already cancelled, Number = $1');
uis.lang_en('hpd:hpd_core.lock_interval_delete: linked part found, staff_id=$1, begin_date=$2, end_date=$3, oper_type_id=$4, status=$5','The time period cannot be deleted. The calculated portion of the wage payment for this time period was found. Employee ID = $1, Start Date = $2, End Date = $3, Wage Payment ID = $4, Status = $5');
uis.lang_en('hpd:hpd_core.lock_interval_insert: lock_interval_insert: intersection found, staff_id=$1, begin_date=$2, end_date=$3, kind=$4','Unable to insert a time period. An intersection in the time period was found. Employee ID = $1, Start Date = $2, End Date = $3, Type = $4');
uis.lang_en('hpd:hpd_core.rank_trans_insert: the robot of staff is contractual, cannot use rank, staff_id=$1, begin_date=$2','Position of employee is based on contractual wage, therefore rank cannot be used there. Employee ID = $1, Start Date = $2');
uis.lang_en('hpd:hpd_core.staff_delete: staff state must be passive for deleting, staff_id=$1','For deleting the document, you have to cancel previous document, Employee ID = $1');
uis.lang_en('hpd:hpd_core.staff_life_cycle_evaluate: hiring date is not grater than dismissal date, staff_id=$1, hiring_date=$2, dismissal_date=$3','Hiring date cannot be greater than dismissal date, Employee ID = $1, Hiring Date = $2, Dismissal Date = $3');
uis.lang_en('hpd:hpd_core.staff_life_cycle_evaluate: more dismissal documents found, cnt=$1, employee_number=$2, employee_name=$3','There are some documents about dismissal of an employee. Found Documents Qty = $1, PersNo = $2, Employee = $3');
uis.lang_en('hpd:hpd_core.staff_relationship_evaluate: secondary staff should be match primary staffs period, secondary_staff_id=$1, primary_staff_id=$2','Internal secondary employment must be in the primary employment time interval. Internal Secondary Employment ID = $1, Primary Employment ID = $2');
uis.lang_en('hpd:hpd_core.staff_relationship_evaluate: staff has posted documents, initially unpost transfer documents, staff_id=$1','There are some posted documents related to current employee, firstly, cancel all the related documents. Employee ID = $1');
uis.lang_en('hpd:hpd_core.staff_relationship_evaluate: staff is dismissed, initially you unpost dismissal journals, staff_id=$1, dismissal_date=$2','Employee is dismissed, cancel the related documents of the current employee. Employee ID = $1, Dismissal Date = $2');
uis.lang_en('hpd:hpd_core.staff_relationship_evaluate: this employee has internal part time jobs, staff_id=$1','Current employee works in internal secondary employment. Employee ID = $1');
uis.lang_en('hpd:hpd_core.trans_insert: transaction must be in the staff period, hiring_date=$1, begin_date=$2','For posting document, date should be between hiring date and transaction day date, Hiring Date = $1, Transaction Day Date = $2');
uis.lang_en('hpd:hpd_core.transfer_journal_post: staff kind cannot change when transfering other position, staff_id=$1, staff_kind=$2, employment_type=$3','While transfering employee to another position, employment type cannot be changed. Employee ID = $1, Employment Type = $2, Employment Type = $3');
uis.lang_en('hpd:initially secondary jobs should dismiss, staff_id=$1','Firstly, employee must be dismissed from secondary employment. ID = $1');
uis.lang_en('hpd:initially transaction must be unpost,staff_id=$1, begin_date=$2, end_date=$3, page_id=$4','Firstly, transaction must be cancelled. Employee ID = $1, Start Date = $2m End Date = $3, Page ID = $4');
uis.lang_en('hpd:journal already posted, journal_number=$1','HR document has been already posted. Number = $1');
uis.lang_en('hpd:journal already unposted, journal_number=$1','HR document has been already cancelled. Number = $1');
uis.lang_en('hpd:journal posted, initially unpost, journal_id=$1','You cannot cancel not posted HR document. ID = $1');
uis.lang_en('hpd:journal type cannot change, journal_type_id=$1','You cannot change HR document type. ID = $1');
uis.lang_en('hpd:journal_type: dismissal','Dismissal');
uis.lang_en('hpd:journal_type: hiring','Hiring');
uis.lang_en('hpd:journal_type: rank_change','Rank Change');
uis.lang_en('hpd:journal_type: schedule_change','Schedule Change');
uis.lang_en('hpd:journal_type: transfer','Transfer');
uis.lang_en('hpd:journal_type: vacation_limit_change','Vacation Days Change');
uis.lang_en('hpd:journal_type: wage_change','Wage Change');
uis.lang_en('hpd:line kind cannot change, line_kind=$1, staff_id=$2','You cannot change work line type. Type = $1, Employee ID = $2');
uis.lang_en('hpd:lock_interval_delete, linked part found, staff_id=$1, begin_date=$2, end_date=$3, oper_type_id=$4, status=$5','The time period cannot be deleted. The calculated portion of the wage payment for this time period was found. Employee ID = $1, Start Date = $2, End Date = $3, Wage Payment ID = $4, Status = $5');
uis.lang_en('hpd:lock_interval_insert: intersection found, staff_id=$1, begin_date=$2, end_date=$3, kind=$4','Unable to insert a time period. An intersection in the time period was found. Employee ID = $1, Start Date = $2, End Date = $3, Type = $4');
uis.lang_en('hpd:lock_interval_kind:performance','KPI');
uis.lang_en('hpd:lock_interval_kind:sales bonus department sales','Department Sales');
uis.lang_en('hpd:lock_interval_kind:sales bonus personal sales','Personal Sales');
uis.lang_en('hpd:lock_interval_kind:sales bonus successful delivery','Successful delivery');
uis.lang_en('hpd:lock_interval_kind:timebook','Time Sheet');
uis.lang_en('hpd:lock_interval_kind:timeoff','Absence Time');
uis.lang_en('hpd:primary employee lines have intersection, employee_id=$1, hiring_date=$2, dismissal_date=$3','There is an intersection in working line. Employee ID = $1, Hiring Date = $2, Dismissal Date = $3');
uis.lang_en('hpd:primary job of this employee is dismissed, you could not reopen this dismiss, staff_id=$1, parent_staff_id=$2','Employee was dismissed from primary employment, you cannot dismiss him again. Employee ID = $1, Employee ID (primary employment) = $2');
uis.lang_en('hpd:primary jobs are not found, employee_id=$1, hiring_date=$2','Primary employment not found, Employee ID = $1, Hiring Date = $2');
uis.lang_en('hpd:secondary job cross out primary job, employee_id=$1, hiring_date=$2, dismissal_date=$3','Secondary employment goes beyond primary employment. Employee ID = $1, Hiring Date = $2, Dismissal Date = $3');
uis.lang_en('hpd:secondary job cross outs and intersects multiply primary jobs, employee_id=$1, hiring_date=$2, dismissal_date=$3','Secondary employment goes beyond primary employment and involve several primary employments. Employee ID = $1, Hiring Date = $2, Dismissal Date = $3');
uis.lang_en('hpd:staff in staff_line and dismissal doc must equal','Employee must be the only for working line and dismissal');
uis.lang_en('hpd:staff is already dismissal, staff_id=$1','Employee already dismissed. Employee ID =$1');
uis.lang_en('hpd:staff line is dismissed, initially you unpost dismissal journals, staff_id=$1, dismissal_date=$2','Working line stopped, you must cancel employee''s dismissal first, Employee ID=$1, Dismissal Date=$2');
uis.lang_en('hpd:staff line is not found for dismissal staff, staff_id=$1','Working line not found for dismissal. Employee ID = $1');
uis.lang_en('hpd:staff line is not found for hiring staff, staff_id=$1','Working line not found for hiring. Employee ID = $1');
uis.lang_en('hpd:staff line kind cannot change, staff_id=$1','Working line type cannot be changed. Employee ID = $1');
uis.lang_en('hpd:staff line not found, staff_id=$1, period=$2','Working line not found. Employee ID = $1, Date = $2');
uis.lang_en('hpd:staff line was not dismissed, initially you dismiss then you could reopen, staff_id=$1','Working line not stopped. Before hiring you have to dismiss. Employee ID = $1');
uis.lang_en('hpd:staff lines have intersection, staff_id=$1, hiring_date=$2, dismissal_date=$3','Working line intersection. Employee ID = $1, Hiring Date = $2, Dismissal Date = $3');
uis.lang_en('hpd:this employee has internal part time jobs, staff_id=$1','This employee has internal secondary employment. Employee ID = $1');
uis.lang_en('hpd:transaction must be in the staff_line period, dismissal_date=$1, end_date=$2','Transaction must be in the working line period. Dismissal Date = $1, End Date = $3');
uis.lang_en('hpd:transfer_kind:permanently','Permanently');
uis.lang_en('hpd:transfer_kind:temporarily','Temporarily');
uis.lang_en('hpd:trial_period:exists','With initial assessment period');
uis.lang_en('hpd:trial_period:not_exists','Without initial assessment period');
uis.lang_en('hpd:vacation_turnover_evaluate:days kind not found','Day type not found');
uis.lang_en('hpd:wrong journal type, journal_type_id=$1','Wrong journal type. ID = $1');
uis.lang_en('hper:# $1{staff_name}','$1');
uis.lang_en('hper:001:message: calc kind of $1{plan_type_name} is not task, plan_type_id=$2, calc_kind=$3','You can add a task type to the performance indicator only if the calculation type is <b>Task  assessment</b>');
uis.lang_en('hper:001:solution: change calc kind of $1{plan_type_name} to task','Change the calculation type of the <b>$1</b> metric is calculated to <b>Task  assessment</b>');
uis.lang_en('hper:001:title: calc kind of plan type is wrong','Calculation type is wrong');
uis.lang_en('hper:002:message: job, division and employment type are required for standard plan, plan_id=$1','The department, job or employment type for which the settings for performance indicators will work is not specified');
uis.lang_en('hper:002:solution: select job, division and employement type','Specify the department, job and employment type');
uis.lang_en('hper:003:message: plan type $1{plan_type_name} has intersection on rule $2{first_rule} and rule $3{second_rule}','The performance indicator <b>$1</b> intersects the rules <b>$2</b> and <b>$3</b>');
uis.lang_en('hper:003:solution: change $1{first_rule} rule or $2{second_rule} rule','Change one of the rules so that there is no intersection');
uis.lang_en('hper:003:title: rules intersected','Counting rule intersection');
uis.lang_en('hper:004:message: there must be at least one main plan, main_plan_count=$1','At least one main indicator must be added in the performance indicators settings');
uis.lang_en('hper:004:solution: add at least one main plan','Add a main indicator');
uis.lang_en('hper:005:message: total weight of main plans must be 100, current total weight is $1, plan_id=$2','The total weight of the main indicators should be <b>100</b>, but it turned out to be <b>$1</b>');
uis.lang_en('hper:005:solution:increase weight by $1{excess_weight}','Add a indicator with a weight of <b>$1</b> or distribute this value among the current indicators');
uis.lang_en('hper:005:solution:reduce weight by $1{excess_weight}','Subtract the total <b>$1%</b> weights from the current indicators');
uis.lang_en('hper:005:title: total weight must be 100','Wrong total weight');
uis.lang_en('hper:006:message: total weight of extra plans must be 100, current total weight is $1, plan_id=$2','The total weight of additional indicators should be <b>100</b>, but it turned out to be <b>$1</b>');
uis.lang_en('hper:006:solution:increase weight by $1{excess_weight}','Add a indicator with a weight of <b>$1</b> or distribute this value among the current indicators');
uis.lang_en('hper:006:solution:reduce weight by $1{excess_weight}','Subtract the total <b>$1%</b> weights from the current indicators');
uis.lang_en('hper:006:title: total weight must be 100','Wrong total weight');
uis.lang_en('hper:007:message: staff plan must be draft or new, staff_name=$1, staff_plan_id=$2, status=$3, plan_date=$4','Failed to save the KPI calculation for employee <b>$1</b>. To save changes, the calculation must be in the state <b>New</b> or <b>Draft</b>');
uis.lang_en('hper:007:solution: change the status of staff plan to draft or new','Change the KPI calculation status to <b>New</b> or <b>Draft</b>');
uis.lang_en('hper:007:title: staff plan cannot be updated','Wrong calculation status');
uis.lang_en('hper:008:message: staff plan must be draft or new, staff_name=$1, staff_plan_id=$2, status=$3, plan_date=$4','Failed to save the KPI calculation for employee <b>$1</b>. To save facts, the calculation must be in the <b>New</b> or <b>Draft</b> state');
uis.lang_en('hper:008:solution: change the status of staff plan to draft or new','Change the KPI calculation status to <b>New</b> or <b>Draft</b>');
uis.lang_en('hper:008:title: staff plan part cannot be saved','Wrong calculation status');
uis.lang_en('hper:009:message: staff plan must be draft or new, staff_name=$1, staff_plan_id=$2, status=$3, plan_date=$4','Failed to delete the KPI calculation for employee <b>$1</b>. To delete facts, the calculation must be in the <b>New</b> or <b>Draft</b> state');
uis.lang_en('hper:009:solution: change the status of staff plan to draft or new','Change the KPI calculation status to <b>New</b> or <b>Draft</b>');
uis.lang_en('hper:009:title: staff plan part cannot be deleted','Wrong calculation status');
uis.lang_en('hper:010:message: staff plan must be draft or new, staff_name=$1, staff_plan_id=$2, status=$3, plan_date=$4','Failed to delete the KPI calculation for employee <b>$1</b>. To delete facts, the calculation must be in the <b>New</b> or <b>Draft</b> state');
uis.lang_en('hper:010:solution: change the status of staff plan to draft or new','Change the KPI calculation status to <b>New</b> or <b>Draft</b>');
uis.lang_en('hper:010:title: staff plan tasks cannot be updated','Wrong calculation status');
uis.lang_en('hper:011:message: staff plan can be draft when status is new, staff_name=$1, staff_plan_id=$2, status=$3, plan_date=$4','The KPI calculation for employee <b>$1</b> must be in <b>New</b> state to change to <b>Draft</b> state');
uis.lang_en('hper:011:solution: change the status of staff plan to new','Set The KPI calculation status to <b>New</b>');
uis.lang_en('hper:012:message: staff plan can be new when status is draft or waiting, staff_name=$1, staff_plan_id=$2, status=$3, plan_date=$4','The KPI calculation for employee <b>$1</b> must be in <b>Pending</b> or <b>Draft</b> state to be changed to <b>New</b> state');
uis.lang_en('hper:012:solution: change the status of staff plan to draft or waiting','Change the KPI calculation status to <b>Draft</b> or <b>Pending</b>');
uis.lang_en('hper:013:message: staff plan can be waiting when status is draft, new or completed, staff_name=$1, staff_plan_id=$2, status=$3, plan_date=$4','The KPI calculation for employee <b>$1</b> must be in the <b>Draft</b>, <b>New</b> or <b>Completed</b> state to change to the <b>Pending</b> state b>');
uis.lang_en('hper:013:solution: change the status of staff plan to draft, new or completed','Change the KPI calculation status to <b>Draft</b>, <b>New</b> or <b>Completed</b>');
uis.lang_en('hper:014:message: staff plan can be completed when status is waiting, staff_name=$1, staff_plan_id=$2, status=$3, plan_date=$4','The KPI calculation for employee <b>$1</b> must be in the <b>Pending</b> state to move to the <b>Completed</b> state');
uis.lang_en('hper:014:solution: change the status of staff plan to waiting','Set the KPI calculation status to <b>Pending</b>');
uis.lang_en('hper:015:message: staff plan can be deleted when status is draft, staff_name=$1, staff_plan_id=$2, status=$3, plan_date=$4','The KPI calculation for employee <b>$1</b> must be in <b>Draft</b> state to delete');
uis.lang_en('hper:015:solution: change the status of staff plan to draft','Change the KPI calculation status to <b>Draft</b> status');
uis.lang_en('hper:016:message: part amount must be equal to zero, staff_plan_id=$1, plan_type_id=$2, remined_amount=$3','Fact must be zero, residual <b>$3</b>');
uis.lang_en('hper:016:solution: retry or contact to developers','Contact administrator');
uis.lang_en('hper:017:message: month end must be in [1: 28], month_end:$1','The end of the month should be between 1 and 28, but it turned out to be $1');
uis.lang_en('hper:017:solution: change month end in the setting to a number in range [1: 28]','Set the end of the month between 1 and 28');
uis.lang_en('hper:017:title: month end is wrong','Wrong end of the month');
uis.lang_en('hper:018:message: item plan type must be main or extra, plan_type=$1','The measure type should be <b>main</b> or <b>additional</b>, but it turned out to be $1');
uis.lang_en('hper:018:solution: change item plan type to main or extra','Change the measure type to <b>main</b> or <b>additional</b>');
uis.lang_en('hper:018:title: item plan type is wrong','Invalid measure type');
uis.lang_en('hper:019:message: staff plan cannot be added manually to external plan type, staff_name=$1, staff_plan_id=$2, plan_date=$4','When calculating performance indicators, the Fact cannot be added manually if the method of calculating the results is "External systems". Employee = $1, Performance Calculation ID = $2, Date = $4');
uis.lang_en('hper:019:solution: do not save part for this plan type','Change the way you calculate results');
uis.lang_en('hper:019:title: staff plan part cannot be saved','Unable to save calculation');
uis.lang_en('hper:020:message: staff plan cannot be deleted manually from external plan type, staff_name=$1, staff_plan_id=$2, plan_date=$4','When calculating performance indicators, the Fact cannot be deleted manually if the method of calculating the results is "External systems". Employee = $1, Performance Calculation ID = $2, Date = $4');
uis.lang_en('hper:020:title: staff plan part cannot be deleted','Unable to delete calculation');
uis.lang_en('hper:autogenerated','Auto-creation');
uis.lang_en('hper:calc_kind:attendance','Attendance Statistics');
uis.lang_en('hper:calc_kind:external','External Systems');
uis.lang_en('hper:calc_kind:maual','Manual');
uis.lang_en('hper:calc_kind:task','Task Assessment');
uis.lang_en('hper:plan_calc_type:unit','Per Unit Calculation');
uis.lang_en('hper:plan_calc_type:weight','Weight Calculation');
uis.lang_en('hper:plan_kind:contract','Personal');
uis.lang_en('hper:plan_kind:standard','Standard');
uis.lang_en('hper:plan_save: extra plan weight must be 100, plan_id=$1, current_value=$2','Weight of additional measures must be 100. ID = $1, Value = $2');
uis.lang_en('hper:plan_save: main plan weight must be 100, plan_id=$1, current_value=$2','Weight of main measures must be 100. ID = $1, Value = $2');
uis.lang_en('hper:plan_save: quantity of the main plan must be greater than 0!','Value of main measure must be greater than 0!');
uis.lang_en('hper:plan_save: rules intersaction, plan_id=$1, plan_type=$2, first_row=$3, second_row=$4','Intersection of rules calculation. ID = $1, Measure Type = $2, First Rule Row Number = $3, Second Rule Row Number = $4');
uis.lang_en('hper:plan_type:extra','Additional Measures');
uis.lang_en('hper:plan_type:main','Main Measures');
uis.lang_en('hper:sale_kind: department','Department Sales');
uis.lang_en('hper:sale_kind: personal','Personal Sales');
uis.lang_en('hper:staff_plan_delete: plan can be deleted when status is draft , staff_plan_id=$1','Calculation can be deleted if status is "Draft". ID = $1');
uis.lang_en('hper:staff_plan_part_delete: plan can be updated when status is draft or new, staff_plan_id=$1','Calculation can be updated if status is "Draft" or "New". ID = $1');
uis.lang_en('hper:staff_plan_part_save: plan can be updated when status is draft or new, staff_plan_id=$1','Calculation can be updated if status is "Draft" or "New". ID = $1');
uis.lang_en('hper:staff_plan_save_tasks: plan can be updated when status is draft or new, staff_plan_id=$1','Calculation can be updated if status is "Draft" or "New". ID = $1');
uis.lang_en('hper:staff_plan_set_completed: can be completed when status is waiting , staff_plan_id=$1','Calculation can be completed if status is "Pending". ID = $1');
uis.lang_en('hper:staff_plan_set_draft: plan can be draft when status is new, staff_plan_id=$1','Calculation can be "Draft" if current status is "New". ID = $1');
uis.lang_en('hper:staff_plan_set_new: plan can be new when status is draft or waiting, staff_plan_id=$1','Calculation can be "New" if current status is "Draft" or "Pending". ID = $1');
uis.lang_en('hper:staff_plan_set_waiting: plan can be waiting when status is draft, new or completed, staff_plan_id=$1','Calculation can be "Pending" if current status is "New", "Draft" or "Completed". ID = $1');
uis.lang_en('hper:staff_plan_status:completed','Completed');
uis.lang_en('hper:staff_plan_status:draft','Draft');
uis.lang_en('hper:staff_plan_status:new','New');
uis.lang_en('hper:staff_plan_status:waiting','Pending');
uis.lang_en('hper:staff_plan_update: plan can be updated when status is draft or new, staff_plan_id=$1','Calculation can be updated if status is "Draft" or "New". ID = $1');
uis.lang_en('hpr:$1{person_name} created $2{timebook_number} timebook for $3{month}','$1 created timesheet $2 for $3');
uis.lang_en('hpr:$1{person_name} deleted $2{timebook_number} timebook','$1 deleted timesheet $2');
uis.lang_en('hpr:$1{person_name} deleted $2{timebook_number} timebook for $3{month}','$1 deleted timesheet $2 for $3');
uis.lang_en('hpr:$1{person_name} posted $2{timebook_number} timebook for $3{month}','$1 posted timesheet $2 for $3');
uis.lang_en('hpr:$1{person_name} saved $2{timebook_number} timebook for $3{month}','$1 saved timesheet $2 for $3');
uis.lang_en('hpr:$1{person_name} unposted $2{timebook_number} timebook for $3{month}','$1 canceled timesheet  $2 for $3');
uis.lang_en('hpr:$1{person_name} updated $2{timebook_number} timebook for $3{month}','$1 edited timesheet $2 for $3');
uis.lang_en('hpr:$1{peson_name} created $2{book_number} for $3{month}','$1 created wage payment $2 for $3');
uis.lang_en('hpr:$1{peson_name} deleted $2{book_number}','$1 deleted wage payment $2');
uis.lang_en('hpr:$1{peson_name} deleted $2{book_number} for $3{month}','$1 deleted wage payment $2');
uis.lang_en('hpr:$1{peson_name} posted $2{book_number} for $3{month}','$1 posted wage payment $2');
uis.lang_en('hpr:$1{peson_name} saved $2{book_number} for $3{month}','$1 sav ed wage payment $2');
uis.lang_en('hpr:$1{peson_name} unposted $2{book_number} for $3{month}','$1 cancelled wage payment $2');
uis.lang_en('hpr:$1{peson_name} updated $2{book_number} for $3{month}','$1 edited wage payment $2');
uis.lang_en('hpr:001:message:status must be new, fact id: $1, current status: $2','To change the fact of a civil contract, the civil contract must not be <b>$2</b>. Only a new service can be saved');
uis.lang_en('hpr:001:solution:change fact status to new and try again','Cancel accepting and ending the civil contract and try saving again');
uis.lang_en('hpr:001:title:cannot save civil contract fact','Failed to save civil contract');
uis.lang_en('hpr:002:message:item not belongs to fact, fact_id: $1, item_fact_id: $2, item_id: $3','Service ID and service fact do not match');
uis.lang_en('hpr:002:title:cannot save civil contract fact','Failed to save civil contract');
uis.lang_en('hpr:003:message:no access to add item','No access to add service');
uis.lang_en('hpr:003:solution:change access add item of contract $1{contract_id} to yes and try again','Enable access to add a service in the civil contract with ID <b>$1</b>');
uis.lang_en('hpr:003:title:cannot update civil contract fact','Failed to save civil contract');
uis.lang_en('hpr:004:message:no access to add item','No access to add service');
uis.lang_en('hpr:004:solution:change access add item of contract $1{contract_id} to yes and try again','Enable access to add a service in the civil contract with ID <b>$1</b>');
uis.lang_en('hpr:004:title:cannot add civil contract fact','Failed to save civil contract');
uis.lang_en('hpr:005:message:to delete fact, status must be new, current status: $1, month: $2','To delete the fact of the civil contract for a month of $2, the service must not be <b>$1</b>. You can only delete a new service');
uis.lang_en('hpr:005:solution:change fact $1{fact_id} status to new and try again','Cancel accepting and terminating service with ID <b>$1</b> and try saving again');
uis.lang_en('hpr:005:title:cannot delete civil contract fact','Failed to delete civil contract');
uis.lang_en('hpr:006:message:plan penalty time intersected, penalty_kind: $1, first_rule: $2, second_rule: $3','Rule <b>$2</b> intersects with rule <b>$3</b>');
uis.lang_en('hpr:006:solution:remove intersection in rule times and try again','Remove the intersection in the rules and try to save again');
uis.lang_en('hpr:006:title:penalty time intersection $1{penalty_kind}','Intersected the rules for $1');
uis.lang_en('hpr:007:message:plan penalty day intersection, penalty_kind: $1, first_rule: $2, second_rule: $3, time_rule: $4','Rule <b>$2</b> intersects with rule <b>$3</b> at policy <b>$4</b>');
uis.lang_en('hpr:007:solution:remove intersection in rule days and try again, time_rule:$1','Remove the intersection in the <b>$1</b> rules and try saving again');
uis.lang_en('hpr:007:title:penalty day intersection $1{penalty_kind}','Intersected the rules for $1');
uis.lang_en('hpr:008:message:penalty month cannot be changed, penalty_id: $1','It is not possible to change the month of a penalty policy after it''s created');
uis.lang_en('hpr:009:message:penalty division cannot be changed, penalty_id: $1','It is not possible to change the penalty policy department after it has been created');
uis.lang_en('hpr:010:message:$1{staff_name} is blocked between $2{period_begin} and $3{period_end}','For employee <b>$1</b>, a time sheet has already been posted in the period from <b>$2</b> to <b>$3</b>');
uis.lang_en('hpr:010:solution:unpost timebook $1{timebook_number} and try again','Cancel the time sheet with number <b>$1</b> to unlock the period');
uis.lang_en('hpr:010:title:locked period found','Time range locked');
uis.lang_en('hpr:011:message:timebook is already posted, timebook_number: $1','Timesheet number <b>$1</b> has already been posted');
uis.lang_en('hpr:012:message:another sheet is already posted for $1{staff_name}, period begin: $2, period end: $3','Employee <b>$1</b> has already had a payroll in the period from <b>$2</b> to <b>$3</b>');
uis.lang_en('hpr:012:solution:unpost wage sheet $1{sheet_number} and try again','Cancel payroll with number <b>$1</b> to unlock period');
uis.lang_en('hpr:012:title:locked period found','Time range locked');
uis.lang_en('hpr:013:message:to use charge, status must be in $1{status_names}, charge_id: $2','The order used in the payroll was found');
uis.lang_en('hpr:013:solution:change status one of $1{status_names} and try again','Remove this order from all other accruals');
uis.lang_en('hpr:014:message:to cancel charge, status must be used, charge_id: $1','Failed to cancel use of order, order with ID <b>$1</b> was not used');
uis.lang_en('hpr:015:message:to complete charge, status must be used, charge_id: $1','To complete the order with ID <b>$1</b>, the order must be used');
uis.lang_en('hpr:016:message:to cancel complete charge, status must be complete, charge_id: $1','Failed to cancel order execution, order with ID <b>$1</b> was not completed');
uis.lang_en('hpr:017:message:cannot change oper group of system oper type, oper_type_id: $1, oper_type_name: $2','The accrual payroll <b>$1</b> is a system one. You cannot change the system payroll of accrual');
uis.lang_en('hpr:018:message:advance available only to employees worked $1{days_limit} days before $2{booked_date}. staff $3{staff_name} worked only $4{turnout_cnt} days','Employee <b>$3</b> has only worked <b>$4</b> days. Advance payment is only available for employees who have worked <b>$1</b> days prior to the booking date <b>$2</b>');
uis.lang_en('hpr:018:title:new employee','New employee');
uis.lang_en('hpr:019:message:advance available only to employees hired $1{days_limit} days before $2{booked_date}. employee $3{employee_name} after this date','Advance payment is only available for employees hired <b>$1</b> days prior to the booking date <b>$2</b>. Employee <b>$3</b> hired after this date');
uis.lang_en('hpr:019:title:new employee','New employee');
uis.lang_en('hpr:020:message:return fact to new, status must be complete, fact_id: $1, current_status: $2','To cancel the termination of the service with ID <b>$1</b>, the service must be terminated. The current state of the service <b>$2</b>');
uis.lang_en('hpr:021:message:to complete fact, status must be new, fact_id: $1, current_status: $2','To end a service with ID <b>$1</b>, the service must be new. The current state of the service <b>$2</b>');
uis.lang_en('hpr:022:message:to accept fact, status must be complete, fact_id: $1, current_status: $2','To accept the service with ID <b>$1</b>, the service must be completed. The current state of the service <b>$2</b>');
uis.lang_en('hpr:023:message:to return in complete, status must be accept, fact_id: $1, current_status: $2','To unaccept a service with ID <b>$1</b>, the service must be accepted. The current state of the service <b>$2</b>');
uis.lang_en('hpr:024:message:cannot post timebook. $1{timebook_number} timebook already posted','Failed to post time sheet. Time sheet with number <b>$1</b> has already been posted');
uis.lang_en('hpr:025:message:cannot unpost timebook. $1{timebook_number} timebook already unposted','Unable to cancel time sheet. Time sheet with number <b>$1</b> was not posted');
uis.lang_en('hpr:026:message:cannot delete timebook. $1{timebook_number} timebook posted','Failed to delete table. Time sheet with number <b>$1</b> was posted');
uis.lang_en('hpr:026:solution:before delete timebook, unpost it','Cancel the timesheet before deleting it');
uis.lang_en('hpr:027:message:cannot save wage sheet $1{sheet_number} wage sheet already posted','Failed to save payroll. Salary calculation with number <b>$1</b> has been completed and cannot be changed');
uis.lang_en('hpr:027:message:cannot save wage sheetю $1{sheet_number} wage sheet already posted','Failed to save payroll. Salary calculation with number <b>$1</b> has been completed and cannot be changed');
uis.lang_en('hpr:027:solution:before save wage sheet, unpost it','Cancel the payroll before saving it or post the payroll with changes');
uis.lang_en('hpr:028:message:cannot delete wage sheet. $1{sheet_number} wage sheet already posted','Failed to delete payroll. Payroll with number <b>$1</b> has been posted');
uis.lang_en('hpr:028:solution:before delete wage sheet, unpost it','Cancel the payroll before deleting it');
uis.lang_en('hpr:029:message:cannot posted wage sheet. $1{sheet_number} wage sheet already posted','Failed to post payroll. Payroll with number <b>$1</b> has already been posted');
uis.lang_en('hpr:030:message:cannot unposted wage sheet. $1{sheet_number} wage sheet already unposted','Unable to cancel payroll. Payroll with number <b>$1</b> was not posted');
uis.lang_en('hpr:031:message:cannot delete system oper type, oper_type_id: $1, oper_type_name: $2','Accrual <b>$1</b> is a system accrual. System accrual cannot be deleted');
uis.lang_en('hpr:031:title:cannot delete system oper type','System accrual');
uis.lang_en('hpr:032:message:overtime coefficient mus be positive, current_value: $1','Overtime coefficient must be positive');
uis.lang_en('hpr:033:message:$1{division_name} of $2{staff_name} is wrong','The department selected in the time sheet and the department of employee <b>$2</b> do not match');
uis.lang_en('hpr:034:message:formula execution erors: $1{errors}','Failed to save accrual. Errors found while validating accrual formula: <b>$1</b>');
uis.lang_en('hpr:034:title:oper type formula invalid','Invalid formula');
uis.lang_en('hpr:035:message:payment kind must be advance, current_payment_kind: $1','Wrong payment type selected for advance. Valid payment type <b>$1</b>');
uis.lang_en('hpr:036:message:regular wage sheet cannot contains info about one-time operations','Wage Calculation sheet cannot contain info about One-time operations');
uis.lang_en('hpr:037:message:one-time wage sheet cannot contains info about regular operations','One-time operations cannot contain info about Wage calculation sheet');
uis.lang_en('hpr:038:message:sales bonus payment is already posted, payment_number: $1','Sales interest payroll has already posted. Payroll Number = $1');
uis.lang_en('hpr:038:solution:before save sales bonus payment, unpost it','Cancel current document, before saving it');
uis.lang_en('hpr:038:title:cannot save sales bonus payment','Unable to save sales interest payroll');
uis.lang_en('hpr:039:message:sales bonus $1{bonus type} for $2{staff_name} is paid between $3{period_begin} and $4{period_end}, payment_number=$5','$1 payroll for $2 was paid in period of $3 - $4. Payroll Number = $5');
uis.lang_en('hpr:039:solution:delete this operation and try again','Delete the current operation according to the above criteria and try again');
uis.lang_en('hpr:039:title:sales bonus paid period found','Sales interest payroll period has been found');
uis.lang_en('hpr:040:message:the period of sales bonus $1{bonus type} for $2{staff_name} is not between $3{period_begin} and $4{period_end}, payment_number=$5','Sales interest payroll period $1 for $2 is out of range $3 and $4. Sales Interest Payroll Number = $5');
uis.lang_en('hpr:040:solution:change the period of payment and try again','Change sales interest payroll and try again');
uis.lang_en('hpr:040:solution:delete this operation and try again','Delete the current operation and try again');
uis.lang_en('hpr:040:title:sales bonus period is wrong','Incorrect sales interest payroll');
uis.lang_en('hpr:041:message:sales bonus payment is already posted, payment_number: $1','Sales interest payroll has been already posted. Sales Interest Payroll Number = $1');
uis.lang_en('hpr:041:solution:before post sales bonus payment, unpost it','Cancel current document, before saving sales interest payroll');
uis.lang_en('hpr:041:title:cannot post sales bonus payment','Unable to post sales interest payroll');
uis.lang_en('hpr:042:message:sales bonus payment is already unposted, payment_number: $1','Sales interest payroll has been already cancelled. Sales Interest Payroll Number = $1');
uis.lang_en('hpr:042:solution:before unpost sales bonus payment, post it','Post current document, before cancelling sales interest payroll');
uis.lang_en('hpr:042:title:cannot unpost sales bonus payment','Unable to cancel sales interest payroll');
uis.lang_en('hpr:043:message:sales bonus payment is already posted, payment_number: $1','Sales interest payroll has been already posted. Sales Interest Payroll Number = $1');
uis.lang_en('hpr:043:solution:before delete sales bonus payment, unpost it','Cancel  current document, before deleting sales interest payroll');
uis.lang_en('hpr:043:title:cannot delete sales bonus payment','Unable to delete sales interest payroll');
uis.lang_en('hpr:044:message:$1{staff_name} is not worked to $2{job name} from $3{period_begin} to $4{period_end}, payment_number=$5','Employee $1 did not work in job of $2 from $3 to $4. Payment Number = $5');
uis.lang_en('hpr:044:solution:change the job of staff and try again','Change the employee''s job and try again');
uis.lang_en('hpr:044:solution:delete this operation and try again','Delete the current operation and try again');
uis.lang_en('hpr:044:title:the job of staff is wrong in payment operation','Incorrect employee''s job in sales interest payroll');
uis.lang_en('hpr:045:message:no coa attached to $1{job_name}','No attached chart of accounts to $1 job');
uis.lang_en('hpr:045:solution:attach coa to this job and try again','Attach the chart of accounts to the current job and try again');
uis.lang_en('hpr:045:solution:delete this operation and try again','Delete the current operation and try again');
uis.lang_en('hpr:046:message:you do not have access view salaries','No access to remuneration');
uis.lang_en('hpr:047:message:charge document is already posted, document_number: $1{document_number}','One-time accrual document has already been posted. Document Number = $1');
uis.lang_en('hpr:048:message:cannot delete charge document. $1{document_number} charge document posted','Failed to delete document. Document with number <b>$1</b> was posted');
uis.lang_en('hpr:048:solution:before delete charge document, unpost it','Cancel the document before deleting it');
uis.lang_en('hpr:049:message:you can not draft charge whose is not $1{status_name} in $2{documet_number} from $3{document_date} for $4{staff_name}','You cannot change the status of an charge to <b>"Draft"</b> created by document with number <b>$2</b> on date <b>$3</b> for employee <b>$4</b>. Charge status: <b>$1</b>.');
uis.lang_en('hpr:049:message:you cannot change status of charge to new if its status id not $1{satus_name} in $2{documet_number} from $3{document_date}, charge_id: $4{charge_id}','You cannot change the status of an charge to <b>"New"</b> created by document with number <b>$2</b> on date <b>$3</b>. Charge Status: <b>$1</b>, Charge ID = <b>$4</b>');
uis.lang_en('hpr:049:solution:delete book with $1{book_number} and $2{book_date} and try again','Delete wage payment with number <b>$1</b> on date <b>$2</b> and try again.');
uis.lang_en('hpr:050:message:charge document is already unposted, document_number: $1{document_number}','Document with number <b>$1</b> has already been cancelled.');
uis.lang_en('hpr:051:message:estimation kind of oper type must be entered, oper_type_id: $1{oper_typr_id}','Calculation type of wage payment must be "Fixed amount". Wage Payment ID = $1/');
uis.lang_en('hpr:052:message:nigttime policy month cannot be changed, policy_id: $1','Unable to change the policy month after it has been created, ID: $1');
uis.lang_en('hpr:053:message:nigttime policy division cannot be changed, policy_id: $1','Unable to change the policy division after it has been created, ID: $1');
uis.lang_en('hpr:054:message:coefficient must be greater than 1 on $1{rule_order} rule','The coefficient must be greater than 1 in the rule with the number $1');
uis.lang_en('hpr:054:message:period of $1{first_row_number} rule has intersaction with period of $2{second_row_number} rule','The time period of rule $1 intersects with the time period of rule $2');
uis.lang_en('hpr:055:message:coefficient must be greater than 1 on $1{rule_order} rule','Coefficient must be greater than 1 on $1 rule');
uis.lang_en('hpr:056:message:oper type not found with this name, name: $1{oper_type_name}','Cannot find an accrual type with the specified name: $1');
uis.lang_en('hpr:057:message:for save credit status must be draft, current status: $1{current_status}','For save loan, status must be in draft, current status: $1.');
uis.lang_en('hpr:058:message:status already booked, you can not change status to book again','Status is already in pre-scheduled, you can not change status to pre-schedule again.');
uis.lang_en('hpr:058:solution:select other status, and try again','Select the other status, and try again.');
uis.lang_en('hpr:059:message:status already draft, you can not change status to draft again','Status is already in to draft, you can not change status to draft again.');
uis.lang_en('hpr:059:solution:select other status, and try again','Select the other status, and try again.');
uis.lang_en('hpr:060:message:status already complete, you can not change status to complete again','Status is already in complete, you can not change status to complete again.');
uis.lang_en('hpr:060:solution:select other status, and try again','Select the other status, and try again.');
uis.lang_en('hpr:061:message:for archive status must be complete, current status: $1{current status}','For archive status must be in complete, current status: $1');
uis.lang_en('hpr:061:solution:change status to complete and try again','Change status to complete and try again.');
uis.lang_en('hpr:062:message:for delete status must be draft, current status: $1{current status}','For delete status must be in draft, current status: $1');
uis.lang_en('hpr:062:solution:change status to draft and try again','Change status to draft and try again.');
uis.lang_en('hpr:advance_limit_kind:calendar','Calendar Days');
uis.lang_en('hpr:advance_limit_kind:turnout','Working Days');
uis.lang_en('hpr:advance_save: advance available only to employees hired $1{days_limit} days before booked_date, employee_id=$2, booked_date=$3','Advance is only available to employees hired $1 days before the reservation date, Employee ID = $2, Reservation Date = $3');
uis.lang_en('hpr:advance_save: advance available only to employees worked $1{days_limit} days before booked_date, employee_id=$2, booked_date=$3','Advance is available only to employees who have worked $1 days in the month of reservation, Employee ID = $2, Reservation Date = $3');
uis.lang_en('hpr:an error occurred while validating a formula calculation','An error occured while validating a formula calculation');
uis.lang_en('hpr:charge_new: charge status must be $1, charge_id=$2','Status must be  $1, Order ID = $2');
uis.lang_en('hpr:charge_new: charge status must be in $1, charge_id=$2','Status must be  $1, Order ID = $2');
uis.lang_en('hpr:charge_status:completed','Completed');
uis.lang_en('hpr:charge_status:draft','Draft');
uis.lang_en('hpr:charge_status:new','New');
uis.lang_en('hpr:charge_status:used','In progress');
uis.lang_en('hpr:could not find indicator by identifier $1','Could not find indicator by $1 identifier');
uis.lang_en('hpr:credit status: archived','Archived');
uis.lang_en('hpr:credit status: booked','Pre-scheduled');
uis.lang_en('hpr:credit status: complete','Completed');
uis.lang_en('hpr:credit status: draft','Draft');
uis.lang_en('hpr:cv fact status: accept','Accept');
uis.lang_en('hpr:cv fact status: complete','Complete');
uis.lang_en('hpr:cv fact status: new','New');
uis.lang_en('hpr:estimation_type:entered','The result is entered by a fixed amount');
uis.lang_en('hpr:estimation_type:formula','The result is calculated by formula');
uis.lang_en('hpr:hpr_core.sheet_staff_insert: staff $2{staff_name} already posted another sheet, staff_id=$1','Employee involved in another sheet, employee ID=$1');
uis.lang_en('hpr:oper_type_delete: cannot delete system oper type, oper_type_id=$1','You cannot delete system wage payment/deduction. Wage Payment/Deduction = $1');
uis.lang_en('hpr:oper_type_save: cannot change oper group of system oper type, oper_type_id=$1, oper_group_id=$2','You cannot change system value of "Payroll". Wage Payment/Deduction = $1, Payroll = $2');
uis.lang_en('hpr:penalty kind: day skip','Day skip');
uis.lang_en('hpr:penalty kind: early','Early leaving');
uis.lang_en('hpr:penalty kind: lack','Absence');
uis.lang_en('hpr:penalty kind: late','Lateness');
uis.lang_en('hpr:penalty kind: mark skip','Skip Track');
uis.lang_en('hpr:penalty_rule:days','day');
uis.lang_en('hpr:penalty_rule:min','min');
uis.lang_en('hpr:penalty_rule:times','times');
uis.lang_en('hpr:penalty_save: penalty division cannot be changed, penalty_id=$1, division_id=$2','Department of Fine cannot be changed, ID = $1, Department ID = $2');
uis.lang_en('hpr:penalty_save: penalty month cannot be changed, penalty_id=$1, month=$2','Month of Fine cannot be changed, ID = $1, Month = $2');
uis.lang_en('hpr:penalty_save: plan penalty day intersection, penalty_id=$1, penalty_kind=$2, first_rule=$3, second_rule=$4','Fine rule has day intersection, ID = $1, Fine Kind = $2, First Rule = $3, Second Rule = $4');
uis.lang_en('hpr:penalty_save: plan penalty time intersection, penalty_id=$1, penalty_kind=$2, first_rule=$3, second_rule=$4','Fine rule has time intersection, ID = $1, Fine Kind = $2, First Rule = $3, Second Rule = $4');
uis.lang_en('hpr:period kind: custom period','Custom period');
uis.lang_en('hpr:period kind: full month','Full month');
uis.lang_en('hpr:period kind: month first half','First half of the month');
uis.lang_en('hpr:period kind: month second half','Second half of the month');
uis.lang_en('hpr:timebook period: custom period','Custom');
uis.lang_en('hpr:timebook period: full month','Full month');
uis.lang_en('hpr:timebook period: month first half','First half of month');
uis.lang_en('hpr:timebook period: month second half','Second half of month');
uis.lang_en('hpr:timebook_delete: timebook is posted, timebook_id=$1','You cannot delete time sheet. Time Sheet already posted. Time Sheet ID = $1');
uis.lang_en('hpr:timebook_post: timebook is posted, timebook_id=$1','You cannot post time sheet. Time Sheet already posted. Time Sheet ID = $1');
uis.lang_en('hpr:timebook_save: timebook is posted, timebook_id=$1','You cannot save time sheet. Time Sheet already posted. Time Sheet ID = $1');
uis.lang_en('hpr:timebook_staff_update: staff is blocked, staff_id=$1','You cannot update employee info in time sheet, Employee is blocked. Employee ID = $1');
uis.lang_en('hpr:timebook_staff_update:the division of staff is wrong, staff_id=$1, division_id=$2','You cannot update employee info in time sheet, Department is out-dated. Employee ID = $1');
uis.lang_en('hpr:timebook_unpost: timebook is unposted, timebook_id=$1','You cannot cancel time sheet. Time Sheet already cancelled. Time Sheet ID = $1');
uis.lang_en('hpr:сould not find indicator by identifier $1','Variable with $1 identifier not found');
uis.lang_en('hrec:001:message:for save application status must be draft or waiting, application id: $1{application_id}, current status: $2{status_name}','To save application, the status must be draft or pending, Application ID: <b>$1</b>, current status: <b>$2</b>');
uis.lang_en('hrec:001:solution:change application status to draft or waiting and try again','Please change the application status to draft or pending and try again.');
uis.lang_en('hrec:001:title:status must be draft','Status must be draft');
uis.lang_en('hrec:002:message:for delete application status must be draft or waiting, application id: $1{application_id}, current status: $2{status_name}','To delete application, the status must be draft or pending, Application ID: <b>$1</b>, current status: <b>$2</b>');
uis.lang_en('hrec:002:solution:change application status to draft or waiting and try again','Please change the application status to draft or pending and try again.');
uis.lang_en('hrec:002:title:status must be draft or waiting','Status must be draft or pending');
uis.lang_en('hrec:003:message:this stage $1{stage_name} is system entity, you can not delete it','Unable to delete system stage <b>$1</b>');
uis.lang_en('hrec:003:title:pcode must be null','System code must be null');
uis.lang_en('hrec:003:title:system entities cannot delete','System entities cannot be deleted');
uis.lang_en('hrec:004:message:for save stage pcode must be null, stage name: $1{stage_name}','To save the stage, the system code must be empty. Stage name: $1.');
uis.lang_en('hrec:004:solution:please delete pcode and try again','Please delete system code and try again.');
uis.lang_en('hrec:005:message:this funnel $1{stage_name} is system entity, you can not delete it','This stage $1 is a system entity and cannot be deleted.');
uis.lang_en('hrec:005:title:system entities cannot delete','System entities cannot delete.');
uis.lang_en('hrec:006:message:for save application status must be draft or waiting, application id: $1{application_id}, current status: $2{status_name}','To save application, the status must be draft or pending, Application ID: <b>$1</b>, current status: <b>$2</b>');
uis.lang_en('hrec:006:solution:change application status to draft or waiting and try again','Please change the application status to draft or pending and try again.');
uis.lang_en('hrec:006:title:status must be draft','Status must be draft');
uis.lang_en('hrec:007:message:for save vacancy status must be opened, current state: $1{state_name}, vacancy id: $2{vacancy_id}','For save vacancy status must be opened, current status: $1, vacancy ID: $2.');
uis.lang_en('hrec:007:solution:change vacancy state to opened and try again','Change the vacancy status to opened and try again.');
uis.lang_en('hrec:007:title:state must be opend','Vacancy status must be opened.');
uis.lang_en('hrec:008:message:for remove candidate, stage must be todo, cancidate id: $1{candidate_id}, current stage: $2{stage_name}','For remove candidate, status must be todo, Candidate ID: $1, Current stage: $2.');
uis.lang_en('hrec:008:solution:change stage todo and try again','Change stage "todo" and try again.');
uis.lang_en('hrec:008:title:current stage must be todo','Current stage must be "todo".');
uis.lang_en('hrec:009:message:for change application status to draft current status must be canceled, application id: $1{application_id}, current status: $2{status_name}','To change the application status to "Canceled", the current status must be "Draft". Application ID: $1, Current status: $2.');
uis.lang_en('hrec:009:solution:change status to canceled and try again','Change the application status to "Canceled" and try again.');
uis.lang_en('hrec:009:title:status must be canceled','Status must be "Canceled"');
uis.lang_en('hrec:010:message:for change application status to waiting current status must be draft, application id: $1{application_id}, current status: $2{status_name}','To change the application status to "Pending", the current status must be "Draft". Application ID: $1, Current status: $2.');
uis.lang_en('hrec:010:solution:change status to draft and try again','Change the application status to "Draft" and try again.');
uis.lang_en('hrec:010:title:status must be draft','Status must be draft');
uis.lang_en('hrec:011:message:for change application status to approved current status must be waiting, application id: $1{application_id}, current status: $2{status_name}','To change the application status to "Approved", the current status must be "Pending". Application ID: $1, Current status: $2.');
uis.lang_en('hrec:011:solution:change status to waiting and try again','Change the application status to "Pending" and try again.');
uis.lang_en('hrec:011:title:status must be waiting','Status must be pending');
uis.lang_en('hrec:012:message:for change application status to complited current status must be approved, application id: $1{application_id}, current status: $2{status_name}','To change the application status to "Completed", the current status must be "Approved". Application ID: $1, Current status: $2.');
uis.lang_en('hrec:012:solution:change status to approved and try again','Change the application status to "Approved" and try again.');
uis.lang_en('hrec:012:title:status must be approved','Status must be approved');
uis.lang_en('hrec:013:message:for change application status to complited canceled status must be waiting, application id: $1{application_id}, current status: $2{status_name}','To change the application status to "Canceled", the current status must be "Pending". Application ID: $1, Current status: $2.');
uis.lang_en('hrec:013:solution:change status to waiting and try again','Change the application status to "Pending" and try again.');
uis.lang_en('hrec:013:title:status must be waiting','Status must be pending');
uis.lang_en('hrec:014:message:you can not edit system funnel, funnel name: $1{funnel_name}','This stage $1 is a system entity and cannot be edited.');
uis.lang_en('hrec:014:title:system entity can not edit','Unable to edit system entity');
uis.lang_en('hrec:015:message:you can delete only comment operation, not action operation, operation id: $1{operation_id}, operation kind: $2{operation_kind}','Only comment operations can be Deleted, not action operations. Operation ID: $1, Operation kind: $2.');
uis.lang_en('hrec:015:title:you can delete only comment operation','Only comment operations can be Deleted.');
uis.lang_en('hrec:016:message:you can not make a passive, in this stage $1{stage_name} has a candidates','You can''t deactivate, stage has $1 candidates.');
uis.lang_en('hrec:016:title:you can not make a passive','Deactivation Not Allowed');
uis.lang_en('hrec:017:message:vacancy is already closed, vacancy id: $1{vacancy_id}, closed date: $2{closed_date}','Vacancy is already closed, Vacancy ID: $1, Closed date: $2.');
uis.lang_en('hrec:017:title:you can close vacancy','Closing the Vacancy.');
uis.lang_en('hrec:018:message:you must be auth to hh.ru','You must be authenticated to HeahHunter.');
uis.lang_en('hrec:018:title:no access','No access.');
uis.lang_en('hrec:019:message:access token invalid or does not exist','Access token invalid or does not exist');
uis.lang_en('hrec:019:message:access token lifetime exprired','Access token lifetime expired');
uis.lang_en('hrec:019:message:access token was revoked','The token has been revoked. Please request new authorization');
uis.lang_en('hrec:019:message:your hh application was deleted','Your hh application has been removed');
uis.lang_en('hrec:019:message:your manager account was blocked','Your account has been blocked');
uis.lang_en('hrec:019:solution:contact your admin to see if your hh account was not blocked','Contact your admin to see if your hh account was not blocked');
uis.lang_en('hrec:019:solution:contact your admin to see if your hh application was not deleted','Contact your admin to see if your hh application was not deleted');
uis.lang_en('hrec:019:solution:try reloggin to hh','Try re log-in in hh');
uis.lang_en('hrec:019:title:hh error','hh error');
uis.lang_en('hrec:020:message:for this job connect with head hunter not found, job name: $1{job_name}','No connection with HeadHunter for this job. Job name: $1.');
uis.lang_en('hrec:020:solution:set data map with head hunter for this job and try again','Set data map with HeadHunter for this job and try again.');
uis.lang_en('hrec:020:title:connect not found','Connection not found.');
uis.lang_en('hrec:021:message:for this region connect with head hunter not found, region name: $1{region_name}','No connection with HeadHunter for this region. Region: $1.');
uis.lang_en('hrec:021:solution:set data map with head hunter for this region and try again','Set data map with HeadHunter for this region and try again.');
uis.lang_en('hrec:021:title:connect not found','Connection not found.');
uis.lang_en('hrec:022:message:for publish to head hunter you must set job group for this job, job name: $1{job_name}','To publish on HeadHunter, you must set a job group for this job. Job name: $1.');
uis.lang_en('hrec:022:solution:set job group for this job and try again','Set a job group for this job and try again.');
uis.lang_en('hrec:022:title:job group not found','Job group not found.');
uis.lang_en('hrec:023:message:this vacancy is already published to head hunter, vacancy name: $1{vacancy_name}','The vacancy is already published on HeadHunter, vacancy name: $1.');
uis.lang_en('hrec:023:title:vacancy already published','The vacancy is already published.');
uis.lang_en('hrec:024:message:this vacancy is already published to head hunter, vacancy name: $1{vacancy_name}','The vacancy is already published on HeadHunter, vacancy name: $1.');
uis.lang_en('hrec:024:title:vacancy already published','The vacancy is already published.');
uis.lang_en('hrec:025:message:this vacancy is already published to head hunter, vacancy name: $1{vacancy_name}','The vacancy is already published on HeadHunter, vacancy name: $1.');
uis.lang_en('hrec:025:title:vacancy already published','The vacancy is already published.');
uis.lang_en('hrec:026:message:you must be auth to olx.uz','To access OLX.uz, authorization is required.');
uis.lang_en('hrec:026:title:no access','No access');
uis.lang_en('hrec:027:message:this vacancy is already published to olx, vacancy name: $1{vacancy_name}','This vacancy has already been published on OLX. Vacancy name: $1');
uis.lang_en('hrec:027:title:vacancy already published','Vacancy already published');
uis.lang_en('hrec:028:message:you must be integrate system region to olx region, system region name: $1{region_name}','It is necessary to integrate the system regions with the region on OLX. System region name: $1');
uis.lang_en('hrec:028:title:region is not integrated','Region is not integrated');
uis.lang_en('hrec:029:message:this vacancy is already published to olx, vacancy name: $1{vacancy_name}','This vacancy has already been published on OLX. Vacancy name: $1');
uis.lang_en('hrec:029:title:vacancy already published','Vacancy already published');
uis.lang_en('hrec:030:message:$1{error_title}','Error: $1');
uis.lang_en('hrec:030:title:error in publish vacancy to olx','Error when publishing a vacancy on OLX.');
uis.lang_en('hrec:031:message:this vacancy is already published to olx, vacancy name: $1{vacancy_name}','This vacancy has already been published on OLX. Vacancy name: $1');
uis.lang_en('hrec:031:title:vacancy already published','Vacancy already published');
uis.lang_en('hrec:032:message:find some problems in olx serve, please wait','There are some problems detected on the OLX server, please wait.');
uis.lang_en('hrec:032:title:find problem in olx server','There are some problems detected on the OLX server');
uis.lang_en('hrec:033:message:error in load, candidate info, plase try again','Error loading candidate information, please try again.');
uis.lang_en('hrec:033:title:error in load candidate info','Error loading candidate information.');
uis.lang_en('hrec:034:message:you can not change system pcode, vacancy group name: $1','You can not change system code, vacancy group name: $1');
uis.lang_en('hrec:034:title:you can not change','You can''t change');
uis.lang_en('hrec:035:message:you can not delete system vacancy group, vacancy group name: $1','You can not delete system vacancy group, vacancy group name: $1');
uis.lang_en('hrec:035:title:you can not delete','You can''t delete');
uis.lang_en('hrec:036:message:you can not change system pcode, vacancy type name: $1','You can not change system code, vacancy group name: $1');
uis.lang_en('hrec:036:title:you can not change','You can''t change');
uis.lang_en('hrec:037:message:you can not delete system vacancy type, vacancy type name: $1','You can not delete system vacancy group, vacancy group name: $1');
uis.lang_en('hrec:037:title:you can not delete','You can''t delete');
uis.lang_en('hrec:application_status:approved','Approved');
uis.lang_en('hrec:application_status:canceled','Denied');
uis.lang_en('hrec:application_status:completed','Completed');
uis.lang_en('hrec:application_status:draft','Draft');
uis.lang_en('hrec:application_status:waiting','Waiting');
uis.lang_en('hrec:billing_type:free','Free');
uis.lang_en('hrec:billing_type:premium','Premium');
uis.lang_en('hrec:billing_type:standard','Standard');
uis.lang_en('hrec:billing_type:standart plus','Standard plus');
uis.lang_en('hrec:olx_advertiser_type:businnes','Businnes');
uis.lang_en('hrec:olx_advertiser_type:private','Private');
uis.lang_en('hrec:operation_kind:action','Action');
uis.lang_en('hrec:operation_kind:comment','Comment');
uis.lang_en('hrec:vacancy_scope:all','All');
uis.lang_en('hrec:vacancy_scope:employees','Employees');
uis.lang_en('hrec:vacancy_scope:non employees','Non Employees');
uis.lang_en('hrec:vacancy_status:closed','Closed');
uis.lang_en('hrec:vacancy_status:open','Opened');
uis.lang_en('hrec:vacancy_type:closed','Closed');
uis.lang_en('hrec:vacancy_type:open','Open');
uis.lang_en('hrec:wage from','from');
uis.lang_en('hrec:wage from $1','Salary from $1');
uis.lang_en('hrec:wage to','to');
uis.lang_en('hrec:wage to $1','Salary to $1');
uis.lang_en('href:$1{request_begin_date} - $2{request_end_date} ($3 days)','$1 - $2 ($3 day)');
uis.lang_en('href:$1{request_date} (full day)','$1 (Full day)');
uis.lang_en('href:$1{request_date}, $2{request_begin_time}-$3{request_end_time}','$1, $2-$3');
uis.lang_en('href:001:message: the specialty kind of $1{specialty_name} cannot be changed, specialty_id: $1','Unable to change specialty type $1');
uis.lang_en('href:001:solution: restore old specilaty kind','Restore the previous type of specialty');
uis.lang_en('href:001:title: specialty kind can not be changed','Changing the type of specialty');
uis.lang_en('href:002:message: the specialty kind of $1{parent_specialty_name} (parent of $2{specialty_name}) is not group, specialty_id: $3','The parent of a specialty ($2) can only be a group of specialties');
uis.lang_en('href:002:solution: change parent which specialty kind is the group','Set the specialty parent to the specialty group');
uis.lang_en('href:002:title: parent specialty kind must be group','Wrong specialty type');
uis.lang_en('href:003:message: $1{document_type_name} is system document type, it cannot be changed, document_type_id: $2','The document type <b>$1</b> is a system type. System document types cannot be changed');
uis.lang_en('href:003:title: system document type is readonly','System document type');
uis.lang_en('href:004:message: $1{document_type_name} is system document type, it cannot be deleted, document_type_id: $2','The document type <b>$1</b> is a system type. System document types cannot be deleted');
uis.lang_en('href:004:title: system document type is readonly','System document type');
uis.lang_en('href:005:message: the person of person edu stage cannot be changed, person_edu_stage_id: $1','You cannot change the natural person attached to the education');
uis.lang_en('href:009:message: the person of person reference cannot be changed, person_reference_id: $1','You cannot change the natural person attached to the reference');
uis.lang_en('href:010:message: the person of person family member cannot be changed, person_family_member_id: $1','You cannot change an natural person attached to the relative');
uis.lang_en('href:011:message: the person of person marital status cannot be changed, person_marital_status_id: $1','You can''t change an natural person attached to the family relative');
uis.lang_en('href:012:message: the person of person experience cannot be changed, person_experience_id: $1','You can not change the natural person attached to the experience');
uis.lang_en('href:013:message: the person of person award cannot be changed, person_award_id: $1','You can not change the natural person attached to the award');
uis.lang_en('href:014:message: the person of person work place cannot be changed, person_work_place_id: $1','You can not change the natural person attached to the history of workplaces');
uis.lang_en('href:015:message: the person of document cannot be changed, document_id: $1','You cannot change the natural person attached to the document');
uis.lang_en('href:016:message: $1{indicator_name} is system indicator, it cannot be deleted, indicator_id: $2','The variable <b>$1</b> is a system variable. System variable cannot be deleted');
uis.lang_en('href:016:title: system indicator cannot be deleted','System variable');
uis.lang_en('href:017:message: $1{fte_name} is system fte, it cannot be deleted, fte_id: $2','The <b>$1</b> employment type is system employment type. System employment type cannot be deleted');
uis.lang_en('href:017:title: system fte cannot be deleted','System employment type');
uis.lang_en('href:018:message: $1{day} is unlicensed day for $2{employee_name}, period_begin: $3, period_end: $4','Employee <b>$2</b> has no <b>subscription</b> for day <b>$1</b> ranging from $3 to $4');
uis.lang_en('href:018:solution: tell the admin that need to buy a license and put it in the system, and try this action','Purchase an employee''s subscription for a given day');
uis.lang_en('href:018:title: unlicensed day is found in a given period','No subscription');
uis.lang_en('href:019:message: labor function is not found by given $1{code} code','Labor function with code <b>$1</b> not found');
uis.lang_en('href:019:solution: create labor function by setting the code','Create a new labor function with the given code');
uis.lang_en('href:019:solution: try another code','Make sure the code is correct');
uis.lang_en('href:019:title: labor function is not found by given code','Labor function not found');
uis.lang_en('href:020:message: labor function is not found by given $1{name} name','Labor function with name <b>$1</b> not found');
uis.lang_en('href:020:solution: create labor function by setting the name','Create a new labor function with the given name');
uis.lang_en('href:020:solution: try another name','Make sure the name is correct');
uis.lang_en('href:020:title: labor function is not found by given name','Labor function not found');
uis.lang_en('href:021:message: fixed term base is not found by given $1{code} code','Fixed-term Contract Proof with the code <b>$1</b> was not found');
uis.lang_en('href:021:solution: create fixed term base by setting the code','Create a new fixed-term contract proof with the given code');
uis.lang_en('href:021:solution: try another code','Make sure the code is correct');
uis.lang_en('href:021:title: fixed term base is not found by given code','Fixed-term Contract Proof not found');
uis.lang_en('href:022:message: fixed term base is not found by given $1{name} name','Fixed-term Contract Proof with the name <b>$1</b> was not found');
uis.lang_en('href:022:solution: create fixed term base by setting the name','Create a new fixed-term contract proof with the given name');
uis.lang_en('href:022:solution: try another name','Make sure the name is correct');
uis.lang_en('href:022:title: fixed term base is not found by given name','Fixed-term Contract Proof not found');
uis.lang_en('href:023:message: fte is not found by given $1{name} name','Employment type with the name <b>$1</b> was not found');
uis.lang_en('href:023:solution: create fte by setting the name','Create a new employment type with the given name');
uis.lang_en('href:023:solution: try another name','Make sure the name is correct');
uis.lang_en('href:023:title: fte is not found by given name','Employment type not found');
uis.lang_en('href:024:message: fte is not found by given $1{pcode} pcode','Employment type with system code <b>$1</b> not found');
uis.lang_en('href:024:solution: tell developers','Contact the administrator');
uis.lang_en('href:024:title: fte is not found by given pcode','Employment type not found');
uis.lang_en('href:025:message: the user has no acces to all employee','The <b>current</b> user does not have access to <b>all</b> employees');
uis.lang_en('href:025:solution: enable access all employee for this user','Enable access to all employees for the current user. Contact your administrator or Human Resources');
uis.lang_en('href:025:title: no acces to all employee','No access');
uis.lang_en('href:026:message: user has no access to $1{employee_name}','The <b>current</b> user does not have access to employee $1');
uis.lang_en('href:026:solution: be manager of the division $1{division_name}','Set current user as department head $1. The head of the department has access to his subordinates');
uis.lang_en('href:026:solution: be manual manager of the division $1{division_name}','Set department access to $1 in current user settings');
uis.lang_en('href:026:solution: be master manager of the division $1{parent_division_name}','Set current user as department head $1. The head of the department has access to the employees of all subdivisions');
uis.lang_en('href:026:solution: enable access all employee for this user','Enable access to all employees in the settings of the current user');
uis.lang_en('href:026:title: no acces to employee','No access to employee');
uis.lang_en('href:027:message: the user has no direct employees','The current user has no subordinates');
uis.lang_en('href:027:solution: admin has access to all employee','Enable access to all employees in the settings of the current user');
uis.lang_en('href:027:solution: the user must be manager to at least one direct employee','Set the current user as the head of any department');
uis.lang_en('href:027:title: no direct employees','No subordinates');
uis.lang_en('href:028:message: $1{column_name} not found','<b>$1</b> is required column and not found');
uis.lang_en('href:028:title: required column not found','Required column not found');
uis.lang_en('href:029:message: nationality is not found by given $1{name} name','Nationality is not found by <b>$1</b>');
uis.lang_en('href:029:solution: create nationality by setting the name','Create nationality by setting the name');
uis.lang_en('href:029:solution: try another name','Try another name');
uis.lang_en('href:029:title: nationality is not found by given name','Nationality is not found by given name');
uis.lang_en('href:030:message: $1{user name} is passive user. passive user can not get system access','Status of the <b>$1</b> user is inactive. Inactive users cannot get the access to the system');
uis.lang_en('href:030:solution:change user state to active','Reset user status to <b>Active</b>');
uis.lang_en('href:030:title: user state is passive','User Status');
uis.lang_en('href:031:message:verify person uniqueness setting must be in (y, n)','Employee Verification setting must be in ("Y", "N")');
uis.lang_en('href:032:message:verify person uniqueness column must be in ($1, $2, $3)','Verification Data Type can be Full Name, Passport Series and Number or NPIN');
uis.lang_en('href:033:message: user has no access to division $1{division_name}','User does not have access to department $1');
uis.lang_en('href:033:solution: change division to other division that user has access','Give access to this user for the selected department');
uis.lang_en('href:033:title: no acces to division','No access');
uis.lang_en('href:035:message:plan change note limit must be less than 300 and at least 1, limit: $1{limit}','The value of the minimum number of characters must be between 1 and 300, current value: $1');
uis.lang_en('href:035:message:request note limit must be less than 300 and at least 1, limit: $1{limit}','The value of the minimum number of characters must be between 1 and 300, current value: $1');
uis.lang_en('href:036:message:fte limit must be positive, current_value: $1','Full time equivalent limit must be positive, current value: $1');
uis.lang_en('href:address','Address');
uis.lang_en('href:assert_access_all_employees: no access','No access');
uis.lang_en('href:assert_access_all_employees: user has no access to this employee, employee_id=$1','User has no access to this employee. Employee ID = $1');
uis.lang_en('href:assert_access_all_employees: user has no access to this staff, staff_id=$1','User has no access to this employee. Employee ID = $1');
uis.lang_en('href:assert_access_direct: no access direct employee','No access to subordinate');
uis.lang_en('href:assert_access_to_division: user has no access to this division, division_id=$1','User does not have access to department. Department ID = $1');
uis.lang_en('href:birthday','Birth Date');
uis.lang_en('href:can not change specialty kind, specialty_id=$1','You cannot change specialty type. Specialty ID = $1');
uis.lang_en('href:candidate_kind: former','Dismissed employee');
uis.lang_en('href:candidate_kind: new','New candidate');
uis.lang_en('href:cannot delete system indicator, indicator_id=$1','You cannot delete system measure. Variable ID = $1');
uis.lang_en('href:cannot save other person award, person_award_id=$1','You cannot change award of other natural person. Award ID = $1');
uis.lang_en('href:cannot save other person document, document_id=$1','You cannot change document of other natural person. Document ID = $1');
uis.lang_en('href:cannot save other person edu stage, edu_stage_id=$1','You cannot change education of other natural person. Education ID = $1');
uis.lang_en('href:cannot save other person experience, person_experience_id=$1','You cannot change experience of other natural person. Experience ID = $1');
uis.lang_en('href:cannot save other person family member, person_family_member_id=$1','You cannot change relative of other natural person. Relative ID = $1');
uis.lang_en('href:cannot save other person marital status, person_marital_status_id=$1','You cannot change marital status of other natural person. Marital Status ID = $1');
uis.lang_en('href:cannot save other person reference, person_reference_id=$1','You cannot change reference of other natural person. Reference ID = $1');
uis.lang_en('href:cannot save other person work place, person_work_place_id=$1','You cannot change workplace of other natural person. Workplace ID = $1');
uis.lang_en('href:column_name:','Verification Data Type:');
uis.lang_en('href:column_name: address','Address');
uis.lang_en('href:column_name: birthday','Birth Date');
uis.lang_en('href:column_name: email','Email');
uis.lang_en('href:column_name: iapa','IAPA');
uis.lang_en('href:column_name: last_name','Last Name');
uis.lang_en('href:column_name: legal_address','Legal Address');
uis.lang_en('href:column_name: middle_name','Patronymic');
uis.lang_en('href:column_name: npin','IPSA');
uis.lang_en('href:column_name: phone_number','Phone');
uis.lang_en('href:column_name: region','Region');
uis.lang_en('href:corporate email','Corporate Email');
uis.lang_en('href:custom fte name','Custom Employment Type');
uis.lang_en('href:dismissal_reasons_type: negative','Negative');
uis.lang_en('href:dismissal_reasons_type: positive','Positive');
uis.lang_en('href:document type is readonly, document_type_id=$1','You cannot delete system document. ID = $1');
uis.lang_en('href:email','Email');
uis.lang_en('href:employee should not change in staff, staff_id=$1, employee_id=$2, changed_employee_id=$3','Natural person of employee cannot be changed. Employee ID = $1, Natural Person ID = $3, New Natural Person ID = $3');
uis.lang_en('href:employment_source_kind:both','Hiring / Dismissal');
uis.lang_en('href:employment_source_kind:dismissal','Dismissal');
uis.lang_en('href:employment_source_kind:hiring','Hiring');
uis.lang_en('href:extra phone','Extra Phone');
uis.lang_en('href:first name','First Name');
uis.lang_en('href:from_to_rule:from $1{from_value} $2{rule_unit}','from $1$2');
uis.lang_en('href:from_to_rule:to $1{to_value} $2{rule_unit}','up to $1$2');
uis.lang_en('href:fte_delete: cannot delete system fte, fte_id=$1','You cannot delete system Employment Type. ID = $1');
uis.lang_en('href:gender','Gender');
uis.lang_en('href:iapa','IAPA');
uis.lang_en('href:indicator_delete: cannot delete system indicator, indicator_id=$1','You cannot delete system indicator. Indicator ID = $1');
uis.lang_en('href:indicator_used:automatically','System');
uis.lang_en('href:indicator_used:constantly','Custom');
uis.lang_en('href:last name','Last Name');
uis.lang_en('href:legal address','Legal Address');
uis.lang_en('href:main phone','Phone');
uis.lang_en('href:middle name','Patronymic');
uis.lang_en('href:nationality','Nationality');
uis.lang_en('href:no data found, fixed_term_base_code=$1','Fixed-term Contract Proof not found. Code = $1');
uis.lang_en('href:no data found, fixed_term_base_name=$1','Fixed-term Contract Proof not found. Name = $1');
uis.lang_en('href:no data found, fte_name=$1','Employment Type not found. Name = $1');
uis.lang_en('href:no data found, labor_function_code=$1','Labour Function not found. Code = $1');
uis.lang_en('href:no data found, labor_function_name=$1','Labour Function not found. Name = $1');
uis.lang_en('href:note','Note');
uis.lang_en('href:npin','IPSA');
uis.lang_en('href:parent specialty kind must be group, specialty_id=$1, parent_id=$2','Parent of specialty must be group. Specialty ID = $1, Parent ID = $2');
uis.lang_en('href:person_document_owe_status:complete','Everything is good');
uis.lang_en('href:person_document_owe_status:exempt','No requirements');
uis.lang_en('href:person_document_owe_status:partial','There are flaws');
uis.lang_en('href:person_document_status:approved','Approved');
uis.lang_en('href:person_document_status:new','New');
uis.lang_en('href:person_document_status:rejected','Rejected');
uis.lang_en('href:region','Region');
uis.lang_en('href:set_photo_template:first_name.last_name','FirstName LastName');
uis.lang_en('href:set_photo_template:first_name.last_name.#employee_number','FirstName LastName #PersNo');
uis.lang_en('href:set_photo_template:first_name.last_name.#id','FirstName LastName #ID');
uis.lang_en('href:set_photo_template:first_name.last_name.middle_name','FirstName LastName Patronymic');
uis.lang_en('href:set_photo_template:first_name.last_name.middle_name.#employee_number','FirstName LastName Patronymic #PersNo');
uis.lang_en('href:set_photo_template:first_name.last_name.middle_name.#id','FirstName LastName Patronymic #ID');
uis.lang_en('href:set_photo_template:last_name.first_name','LastName FirstName');
uis.lang_en('href:set_photo_template:last_name.first_name.#employee_number','LastName FirstName #PersNo');
uis.lang_en('href:set_photo_template:last_name.first_name.#id','LastName FirstName #ID');
uis.lang_en('href:set_photo_template:last_name.first_name.middle_name','LastName FirstName Patronymic');
uis.lang_en('href:set_photo_template:last_name.first_name.middle_name.#employee_number','LastName FirstName Patronymic #PersNo');
uis.lang_en('href:set_photo_template:last_name.first_name.middle_name.#id','LastName FirstName Patronymic #ID');
uis.lang_en('href:specialty_kind:group','Group');
uis.lang_en('href:specialty_kind:specialty','Specialty');
uis.lang_en('href:staff_kind:primary','Primary Employment');
uis.lang_en('href:staff_kind:secondary','Internal Secondary Employment');
uis.lang_en('href:staff_status:dismissed','Dismissed');
uis.lang_en('href:staff_status:primary','Primary Employment');
uis.lang_en('href:staff_status:secondary','Secondary Employment');
uis.lang_en('href:staff_status:terminated','Dismissed');
uis.lang_en('href:staff_status:unknown','Unknown');
uis.lang_en('href:staff_status:working','Working');
uis.lang_en('href:tin','TIN');
uis.lang_en('href:user_access_level: direct employee','Subordinate');
uis.lang_en('href:user_access_level: manual','Restricted');
uis.lang_en('href:user_access_level: other','Other');
uis.lang_en('href:user_access_level: personal','Personal');
uis.lang_en('href:user_access_level: undirect employee','Indirect Subordinate');
uis.lang_en('href:verify_person_uniqueness_column:name','Verification Data Type: Full Name');
uis.lang_en('href:verify_person_uniqueness_column:npin','Verification Data Type: NPIN');
uis.lang_en('href:verify_person_uniqueness_column:passport_number','Verification Data Type: Passport Series and Number');
uis.lang_en('hrm:001:message:planed_fte robot not between range, robot_id=$1, robot_name=$2, period=$3, planed_fte=$4','The planned rate of the position <b>$1</b> from <b>$3</b> is out of range from 0 to 1. The value of the planned position is $4');
uis.lang_en('hrm:001:title:planned fte exceeded','Position rate plan exceeded');
uis.lang_en('hrm:002:message:cannot book fte ($1{booked_fte}) for robot $2{robot_name}, exceeded range between 0 and 1','Failed to book <b>$1</b> rate from position <b>$2</b>, booking value is out of range from 0 to 1');
uis.lang_en('hrm:002:message:cannot book fte ($1{booked_fte}) for robot $2{robot_name}, exceeded range between 0 and 1. booked_fte = $3{booked_fte}','Failed to book rate $1 for position $2, range 0 to 1. Booked rate = $3');
uis.lang_en('hrm:002:solution:book less fte for robot $1{robot_id}','Change the booking rate and try again');
uis.lang_en('hrm:002:title:book fte exceeded','Reservation rate exceeded');
uis.lang_en('hrm:003:message:cannot occupy fte ($1{occupied_fte}) for robot $2{robot_name}, exceeded range between 0 and 1','Failed to get position <b>$2</b>. Attempt to occupy <b>$1</b> pieces from position');
uis.lang_en('hrm:003:solution:choose another fte kind with less fte value','Please select a different type of employment with a lower rate and try again');
uis.lang_en('hrm:003:title:occupied fte exceeded','Rate limit exceeded');
uis.lang_en('hrm:004:message:planned fte exceeded for robot $1{robot_name} on $2{period}','Planned rate of position <b>$1</b> from <b>$3</b> is out of range from 0 to 1');
uis.lang_en('hrm:004:title:planned fte exceeded','Position rate plan exceeded');
uis.lang_en('hrm:005:message:robot $1{robot_name} has $2{exceed_fte} exceeding fte on $3{exceed_period}','Position <b>$1</b> has exceeded the $3 rate limit by $2');
uis.lang_en('hrm:005:solution:book less fte','Book a smaller number of rate');
uis.lang_en('hrm:005:solution:choose another fte kind with less fte value','Please select a different type of employment with a lower rate and try again');
uis.lang_en('hrm:005:title:not enough fte','Rate limit exceeded');
uis.lang_en('hrm:006:message:implicitly created robot cannot have booked transaction, robot_id=$1, trans_date=$2','Found a position rate reservation, with the staffing turned off. Item ID: $1, Reservation Date: $2');
uis.lang_en('hrm:007:message:robot turnover fte kind not found','Rate change type not found');
uis.lang_en('hrm:008:message:cannot change/save wage register. wage register $1{register_id} already posted','Failed to save tariff group approval. Tariff group approval with <b>ID $1</b> already posted');
uis.lang_en('hrm:008:solution:post wage register with changes','Post the tariff group approval along with the changes');
uis.lang_en('hrm:008:solution:unpost wage register then save changes','Cancel tariff group approval and try saving again');
uis.lang_en('hrm:009:message:wage register round model must be given','You must specify rounding!');
uis.lang_en('hrm:010:message:wage register base wage model must be given','Base tariff group must be specified');
uis.lang_en('hrm:011:message:cannot save register without ranks','Cannot save register without ranks');
uis.lang_en('hrm:012:message:wage register coefficient must be given','You must specify the coefficient!');
uis.lang_en('hrm:013:message:cannot disable positions, robot $1{robot_name} was used by multiple staffs','Failed to turn off staffing. Position <b>$1</b> used by several employees');
uis.lang_en('hrm:013:solution:remove robot from all but one journals $1{journal_numbers}','Remove the position from all but one of the following journal: <b>$1</b>');
uis.lang_en('hrm:014:message:cannot disable positions, robot $1{robot_name} has booked fte','Failed to turn off staffing. Found position <b>$1</b> with booked rate');
uis.lang_en('hrm:014:solution:remove all bookings for robot $1{robot_name}','Delete all bookings for position <b>$1</b>');
uis.lang_en('hrm:015:message:cannot post wage register. wage register $1{register_id} already posted','Failed to post the tariff group approval. Approval already posted');
uis.lang_en('hrm:016:message:to unpost register $1{register_id} it should be initially posted','To cancel tariff group approval (<b>ID $1</b>), It must be posted');
uis.lang_en('hrm:017:message:cannot save robot $1{robot_name}, division change is not allowed','Failed to save position <b>$1</b>, changing department is not allowed');
uis.lang_en('hrm:017:solution:restore old division ($1{old_division}) and try again','Restore the old position department ($1) and try to save again');
uis.lang_en('hrm:017:title:cannot change division','Cannot change department');
uis.lang_en('hrm:018:message:cannot save robot $1{robot_name}, job change is not allowed','Failed to save position <b>$1</b>, changing job is not allowed');
uis.lang_en('hrm:018:solution:restore old job ($1{old_job}) and try again','Restore the old position job($1) and try to save again');
uis.lang_en('hrm:018:title:cannot change job','Cannot change job');
uis.lang_en('hrm:019:message:restrict view hidden salaries value must be in (y, n), value: $1{value}','"Restrict remuneration view" setting value must be "Y" or "N", current value = $1');
uis.lang_en('hrm:019:message:restrict view hidden salaries value must be in (y, n), value: 1{value}','"Restrict remuneration view" setting value must be "Y" or "N", current value = $1');
uis.lang_en('hrm:020:message:planned fte should be between 0 and 1, value: $1{planned_fte}','Full time equivalent of Position should be between 0 and 1, current value: $1');
uis.lang_en('hrm:021:message:division $1{division_name} could not become $1{division_kind_name} because staff $3{staff_name} will change its department as result','Failed to convert department <b>$1</b> to <b>$2</b> as this would cause employee <b>$3</b> to change department');
uis.lang_en('hrm:021:solution:manually change department for staff $1{staff_name}','Manually change the department of employee <b>$1</b>');
uis.lang_en('hrm:021:title:org structure','Organizational structure');
uis.lang_en('hrm:022:message:division $1{division_name} could not become $1{division_kind_name} because robot $3{robot_name} will change its department as result','Failed to turn department <b>$1</b> into <b>$2</b> , because as a result position <b>$3</b> will change its department');
uis.lang_en('hrm:022:solution:manually change department for robot $1{robot_name}','Manually change the item department <b>$1</b>');
uis.lang_en('hrm:022:title:org structure','Organizational structure');
uis.lang_en('hrm:023:message:division $1{division_name} could not change its parent because staff $2{staff_name} will change its department as result','Failed to change parent department for <b>$1</b> as this would cause employee <b>$2</b> to change department');
uis.lang_en('hrm:023:solution:manually change department for staff $1{staff_name}','Manually change the department of employee <b>$1</b>');
uis.lang_en('hrm:023:title:org structure','Organizational structure');
uis.lang_en('hrm:024:message:division $1{division_name} could not change its parent because robot $2{robot_name} will change its department as result','Failed to change the parent department for <b>$1</b> because as a result the position <b>$2</b> will change its department');
uis.lang_en('hrm:024:solution:manually change department for robot $1{robot_name}','Manually change the item department <b>$1</b>');
uis.lang_en('hrm:024:title:org structure','Organization structure');
uis.lang_en('hrm:025:message:could not change org structure settings because division $1{division_name} uses advanced settings','Failed to disable advanced organizational structure settings because OU <b>$1</b> is using these settings');
uis.lang_en('hrm:025:solution:remove or change all divisions that are not departments','Delete or change all divisions so that only departments remain');
uis.lang_en('hrm:025:title:org structure','Organization structure');
uis.lang_en('hrm:026:message:org unit $1{org_unit_name} is not a child of division $2{division_name}','Team');
uis.lang_en('hrm:026:solution:choose a child of division $1{division_name}','Select department from <b>$1</b>');
uis.lang_en('hrm:026:title:org structure','Organization structure');
uis.lang_en('hrm:027:message:$1{division_kind} division should have parent department','<b>$1</b> must specify the parent department');
uis.lang_en('hrm:027:solution:set parent division from departments','The department must specify the parent department');
uis.lang_en('hrm:027:title:org structure','Organization structure');
uis.lang_en('hrm:028:message:robot must be assigned to department','Personnel transactions can only be carried out with departments');
uis.lang_en('hrm:028:solution:change division $1{division_name} to department','Make division <b>$1</b> a department');
uis.lang_en('hrm:028:solution:choose another division','Choose another division');
uis.lang_en('hrm:028:title:org structure','Organization structure');
uis.lang_en('hrm:029:message:restrict all salaries value must be in (y, n), value: $1{value}','Restrict all salaries value must be in (y, n), value: $1{value}');
uis.lang_en('hrm:030:message:you cannot set closed date for $1{robot_name}','You cannot close a <b>$1</b> position with employees');
uis.lang_en('hrm:030:title:find robot persons','The position has employees');
uis.lang_en('hrm:031:message:for save wage scale register, wage must be set, $1{register_number}','To save the salary scale register, the salary must be set, register number: $1');
uis.lang_en('hrm:031:title:wage not found','Salary not found');
uis.lang_en('hrm:032:message:indicator must be system indicator, register number: $1{register_number}, indicator name : $2{indicator_name}','Indicator must be system, register number: $1, indicator name: $2');
uis.lang_en('hrm:032:title:indicator is not system indicator','Indicator is not system indicator');
uis.lang_en('hrm:033:message:robot not found with this name, name: $1{robot name}','Position with not found, name: $1');
uis.lang_en('hrm:033:title:robot not found','Position not found');
uis.lang_en('hrm:034:message:wage scale not found with this name, name: $1{wage scale name}','Tariff group not found, name: $1');
uis.lang_en('hrm:034:title:wage scale not found','Tariff group not found');
uis.lang_en('hrm:bonus_type: department sales','Department Sales');
uis.lang_en('hrm:bonus_type: personal sales','Personal Sales');
uis.lang_en('hrm:bonus_type: successful delivery','Successful delivery');
uis.lang_en('hrm:cannot change posted staf staffing, staffing_id=$1','You cannot change posted job index. ID = $1');
uis.lang_en('hrm:cannot delete staffing, it is posted, staffing_id=$1','You cannot delete posted job index. ID = $1');
uis.lang_en('hrm:division_access_type:manual','Manual');
uis.lang_en('hrm:division_access_type:structural','Structural');
uis.lang_en('hrm:division_kind:department','Department');
uis.lang_en('hrm:division_kind:team','Division');
uis.lang_en('hrm:fte kind not found','Full-time equivalent not found');
uis.lang_en('hrm:hrm_core.check_turnover: booked_fte robot not between range, robot_id=$1, robot_name=$2, period=$3, booked_fte=$4','Full-time equivalent limit exceeded. Position ID = $1, Position = $2, Date = $3, Pre-scheduled fte = $4');
uis.lang_en('hrm:hrm_core.check_turnover: fte robot not between range, robot_id=$1, robot_name=$2, period=$3, fte=$4, occupied_fte=$5, booked_fte=$6','Full-time equivalent limit exceeded. Position ID = $1, Position = $2, Date = $3, fte = $4, Taken fte = $5, Pre-scheduled fte = $6');
uis.lang_en('hrm:hrm_core.check_turnover: occupied_fte robot not between range, robot_id=$1, robot_name=$2, period=$3, occupied_fte=$4','Full-time equivalent limit exceeded. Position ID = $1, Position = $2, Date = $3, Taken fte = $4');
uis.lang_en('hrm:hrm_core.check_turnover: planed_fte robot not between range, robot_id=$1, robot_name=$2, period=$3, planed_fte=$4','Full-time equivalent limit exceeded. Position ID = $1, Position = $2, Date = $3, Planned fte = $4');
uis.lang_en('hrm:hrm_watcher.on_robot_save: cannot change division, robot_id=$1, old_division_id=$2, new_division_id=$3','You cannot change department. Position ID = $1, Previous Department ID = $2, New Department ID = $3');
uis.lang_en('hrm:hrm_watcher.on_robot_save: cannot change job, robot_id=$1, old_job_id=$2, new_job_id=$3','You cannot change job . Position ID = $1, Previous Job ID = $2, New Job ID = $3');
uis.lang_en('hrm:initially, to do disabling position history','Firstly, disable job index audit log');
uis.lang_en('hrm:initially, to do enabling position','Firstly, enable job index');
uis.lang_en('hrm:initially, to do enabling position history','Firstly, enable job index audit log');
uis.lang_en('hrm:position_employment:contractor','Contractor');
uis.lang_en('hrm:position_employment:staff','Employee');
uis.lang_en('hrm:revise_robot_dates: implicitly created robot cannot have booked transaction, robot_id=$1, trans_date=$2','Position fte booking was found, although job index is off. Position ID = $1, Booking Date = $2');
uis.lang_en('hrm:robot_save: cannot change division, robot_id=$1, old_division_id=$2, new_division_id=$3','You cannot change department. Position ID = $1, Previous Department ID = $2, New Department ID = $3');
uis.lang_en('hrm:robot_save: cannot change job, robot_id=$1, old_job_id=$2, new_job_id=$3','You cannot change job . Position ID = $1, Previous Job ID = $2, New Job ID = $3');
uis.lang_en('hrm:setting_save: cannot disable positions, robot with booked fte found, robot_id=$1','Cannot disable positions, there is a position with booked fte. Position ID = $1');
uis.lang_en('hrm:setting_save: cannot disable positions, robot with multiple staffs found, robot_id=$1','Cannot disable positions, there are some employees attached to current position. Position ID = $1');
uis.lang_en('hrm:wage_scale_register_post: cannot post posted register, register_id=$1','You cannot post posted approval. Approval ID = $1');
uis.lang_en('hrm:wage_scale_register_save: base wage model must be given','Base tariff must be provided');
uis.lang_en('hrm:wage_scale_register_save: cannot save register without ranks','You cannot save approval without ranks');
uis.lang_en('hrm:wage_scale_register_save: coefficient must be given','Coefficient must be provided');
uis.lang_en('hrm:wage_scale_register_save: register is posted, register_id=$1','Approval is posted, Approval ID = $1');
uis.lang_en('hrm:wage_scale_register_save: round model must be given','Rounding must be provided');
uis.lang_en('hrm:wage_scale_register_unpost: cannot unpost unposted register, register_id=$1','You cannot cancel cancelled approval, Approval ID = $1');
uis.lang_en('hsc:$1{error message} with fact date $2{fact_date}','$1 with fact date $2');
uis.lang_en('hsc:$1{error message} with fact value $2{fact_value} in the column $3{column number}','$1 with fact value $2 in the column $3');
uis.lang_en('hsc:$1{error message} with object code $2{object_code}','$1 with object code $2');
uis.lang_en('hsc:001:message:ftp server url is not provided','FTP server URL not specified');
uis.lang_en('hsc:001:solution:provide ftp server url, username and password','Provide the FTP server URL, username, and password');
uis.lang_en('hsc:action_type:constant','Constant');
uis.lang_en('hsc:action_type:variable','Variable');
uis.lang_en('hsc:couldnt predict for $1{area_name}:$2{driver_name}','Failed to predict for $1:$2');
uis.lang_en('hsc:driver_fact_type:actual','Fact');
uis.lang_en('hsc:driver_fact_type:mothly_predict','Monthly forecast');
uis.lang_en('hsc:driver_fact_type:quarterly_predict','quarterly forecast');
uis.lang_en('hsc:driver_fact_type:weekly_predict','Weekly Forecast');
uis.lang_en('hsc:driver_fact_type:yearly_predict','Annual forecast');
uis.lang_en('hsc:hsc_api.driver_delete: cannot delete system driver, driver_id=$1','Unable to uninstall system driver, driver id=$1');
uis.lang_en('hsc:hsc_api.driver_save: cannot change system driver, driver_id=$1','Cannot change system driver, driver id=$1');
uis.lang_en('hsc:hsc_api.objec_norm_save: at least one day frequency must be specified, norm_id=$1','Unable to save sample, at least one action frequency must be set, sample ID=$1');
uis.lang_en('hsc:hsc_api:object_norm_save: unique constraint, $1','Uniqueness limit, $1');
uis.lang_en('htm:001:message:nearest day must be less than total period day, from rank name: $1{from_rank_name}','Number of "Nearest" days must be less than "Total days", From digit = <b>$1</b>');
uis.lang_en('htm:001:message:nearest day must be less than total period day, from rank name: $1{from_rank_name} on attempt_no $2{attempt_no}','The nearest day must be less than the total day of the period, in an attempt to $2 from a rank of $1');
uis.lang_en('htm:001:solution:reduce number of nearest days','Reduce the number of days ahead');
uis.lang_en('htm:001:title:nearest day is more than total period','Number of "Next" days is more than "Total days"');
uis.lang_en('htm:002:message:this job $1{job_name} is attached to $2{experience_name}','Job <b>$1</b> attached to another experience <b>$2</b>');
uis.lang_en('htm:002:solution:detach job from attached experience $1{experience_name} and try again','Unpin the Job from the attached experience <b>$1</b> and try again');
uis.lang_en('htm:002:solution:remove this job from the list and try again','Remove this Job from the list and try again');
uis.lang_en('htm:002:title:job found in another experience','Job relates to different experience');
uis.lang_en('htm:003:message:cannot change/save document. document $1{document_number} is not in status new','Unable to edit/save document. Document <b>$1</b> does not have the "New" status');
uis.lang_en('htm:003:solution:set the document status into new and try again','Set document status to "New" and try again');
uis.lang_en('htm:004:message:cannot delete document. document $1{document_number} is not in status new','The document cannot be deleted. Document <b>$1</b> does not have the "New" status');
uis.lang_en('htm:004:solution:set the document status into new and try again','Set document status to "New" and try again');
uis.lang_en('htm:005:message:cannot set document status into $1{document_status}. document $2{document_number} status must be in $3{allowed_statuses}, but current status is $4{current_status}','Unable to set document status to $1. Document $2 should be in statuses $3, current status: $4');
uis.lang_en('htm:005:message:cannot set document status into new. document $1{document_number} status is already in new','Document <b>$1</b> already has the status "New"');
uis.lang_en('htm:005:solution:remove this document from the list and try again','Remove a document from the list of all documents and try again');
uis.lang_en('htm:005:solution:set document to allowed status and try again','Set document to allowed status and try again');
uis.lang_en('htm:006:message:cannot set document status into waiting. document $1{document_number} status is already in waiting','Document <b>$1</b> already has the status "Pending"');
uis.lang_en('htm:006:message:to change training and exam settings for staff document must be in status $1{document_status}, but current status is $2{current_status}','To change training and exam settings for employee, document must be in status $1, but current status: $2');
uis.lang_en('htm:006:solution:remove this document from the list and try again','Remove a document from the list of all documents and try again');
uis.lang_en('htm:006:solution:set document to correct status and try again','Set document to correct status and try again');
uis.lang_en('htm:007:message:cannot set document status into approved. document $1{document_number} status is already in approved','Document <b>$1</b> already has status "Completed"');
uis.lang_en('htm:007:message:to change staff increment status and set indicator values document must be in status $1{document_status}, but current status is $2{current_status}','To change staff increment status and set indicator values, document must be in status $1, but current status is $2');
uis.lang_en('htm:007:solution:remove this document from the list and try again','Remove a document from the list of all documents and try again');
uis.lang_en('htm:007:solution:set document to correct status and try again','Set document to correct status and try again');
uis.lang_en('htm:008:message:ignore score $1{ignore_score} must be less than success score $2{success_score}, from rank name $3{from_rank_name} on attempt $4{attempt_no}','Ignore score $1 must be less than success score $2, from rank name $3 on attempt $4');
uis.lang_en('htm:009:message:ignore score $1{ignore_score} must be less than 100 percent, from rank name $2{from_rank_name} on attempt $3{attempt_no}','Ignore score $1 must be less than 100 percent, from rank name $2 on attempt $3');
uis.lang_en('htm:010:message:success score $1{ignore_score} must be less than or equal 100 percent, from rank name $2{from_rank_name} on attempt $3{attempt_no}','Success score $1 must be less than or equal 100 percent, from rank name $2 on attempt $3');
uis.lang_en('htm:011:message:attempt period must be bigger than 0, from rank name $1{from_rank_name} on attempt $2{attempt_no}','Attempt period must be bigger than 0, from rank name $1 on attempt $2');
uis.lang_en('htm:012:message:attempt nearest period must be bigger than 0, from rank name $1{from_rank_name} on attempt $2{attempt_no}','Attempt nearest period must be bigger than 0, from rank name $1 on attempt $2');
uis.lang_en('htm:document_status:approved','Completed');
uis.lang_en('htm:document_status:new','New');
uis.lang_en('htm:document_status:set training','Set Training');
uis.lang_en('htm:document_status:training','Training');
uis.lang_en('htm:document_status:waiting','Pending');
uis.lang_en('htm:increment_status:failure','Failed');
uis.lang_en('htm:increment_status:ignored','Ignored');
uis.lang_en('htm:increment_status:success','Success');
uis.lang_en('htt:# $1{person_name} by $2{created_on}','$1 with date of $2');
uis.lang_en('htt:# $1{staff_name} by $2{created_on}','$1 with date of $2');
uis.lang_en('htt:$1{request_begin_date} - $2{request_end_date} ($3 days)','$1 - $2 ($3 day)');
uis.lang_en('htt:$1{request_date}','$1');
uis.lang_en('htt:$1{request_date} (full day)','$1 (Full day)');
uis.lang_en('htt:$1{request_date}, $2{request_begin_time}-$3{request_end_time}','$1, $2-$3');
uis.lang_en('htt:001:message:timesheet plan changes for staff $1{staff_name} on date $2{timesheet_date} are blocked by timebook on $3{timebook_month}','Changing the work schedule of employee <b>$1</b> from <b>$2</b> is blocked by the timesheet for <b>$3</b>');
uis.lang_en('htt:001:solution:unpost timebook $1{timebook_number} and try again','Cancel timesheet number <b>$1</b> to unlock the range');
uis.lang_en('htt:001:title:timesheet locked','Time range locked');
uis.lang_en('htt:002:message:timesheet plan changes for staff $1{staff_name} on date $2{timesheet_date} are blocked by timebook on $3{timebook_month}','Changing the work schedule of employee <b>$1</b> from <b>$2</b> is blocked by the timesheet for <b>$3</b>');
uis.lang_en('htt:002:solution:unpost timebook $1{timebook_number} and try again','Cancel timesheet number <b>$1</b> to unlock the range');
uis.lang_en('htt:002:title:timesheet locked','Time range locked');
uis.lang_en('htt:003:message:overtime for staff $1{staff_name} exceeded free time on day $2{timesheet_date}','Employee <b>$1</b> overtime exceeded off-schedule time by <b>$2</b>');
uis.lang_en('htt:003:solution:increase free time on $1{timesheet_date} by adding missing tracks','Enter unaccounted marks for <b>$1</b> to increase your off-schedule time');
uis.lang_en('htt:003:solution:reduce overtime by $1{overtime_exceed} and try again','Reduce overtime for this day by <b>$1</b>');
uis.lang_en('htt:004:message:fact value for $1{time_kind_name} exceeded 24 hours on timesheet $2{timesheet_date} for $3{staff_name}','Time type value <b>$1</b> exceeded <b>24</b> for employee <b>$3</b> for <b>$2</b>');
uis.lang_en('htt:005:message:overtime for staff $1{staff_name} exceeded free time on day $2{timesheet_date}','Employee <b>$1</b> overtime exceeded off-schedule time by <b>$2</b>');
uis.lang_en('htt:005:solution:increase free time on $1{timesheet_date} by adding missing tracks','Enter unaccounted marks for <b>$1</b> to increase your off-schedule time');
uis.lang_en('htt:005:solution:increase free time on $1{timesheet_date} by changing plan hours in schedule $2{schedule_name}','Reduce the number of working hours in the <b>$1</b> schedule to increase the time outside the schedule for <b>$1</b>');
uis.lang_en('htt:005:solution:reduce overtime by $1{overtime_exceed} and try again','Reduce overtime for this day by <b>$1</b>');
uis.lang_en('htt:006:message:request insertion for staff $1{staff_name} on date $2{timesheet_date} is blocked by timebook on $3{timebook_month}','Adding absence requests for <b>$2</b> for employee <b>$1</b> is blocked by time sheet for <b>$3</b>');
uis.lang_en('htt:006:solution:unpost timebook $1{timebook_number} and try again','Cancel timesheet number <b>$1</b> to unlock the range');
uis.lang_en('htt:006:title:timesheet locked','Time range locked');
uis.lang_en('htt:007:message:track deletion for staff $1{staff_name} on date $2{timesheet_date} is blocked by timebook on $3{timebook_month}','Removal of tracks for <b>$2</b> from employee <b>$1</b> blocked by timesheet for <b>$3</b>');
uis.lang_en('htt:007:solution:unpost timebook $1{timebook_number} and try again','Cancel timesheet number <b>$1</b> to unlock the range');
uis.lang_en('htt:007:title:timesheet locked','Time range locked');
uis.lang_en('htt:008:message:{inserting overtime days} company id must be unique in dirty timesheet','Prohibited to generate facts for two companies');
uis.lang_en('htt:009:message:cannot find location with $1{location_code}','Failed to find location with code <b>$1</b>');
uis.lang_en('htt:009:solution:check code for correctness and try again','Check the correctness of the code');
uis.lang_en('htt:009:title:no data found','Location not found');
uis.lang_en('htt:010:message:cannot find location with $1{location_name}','Failed to find location with name <b>$1</b>');
uis.lang_en('htt:010:solution:check name for correctness and try again','Check the correctness of the name');
uis.lang_en('htt:010:title:no data found','Location not found');
uis.lang_en('htt:011:message:cannot find schedule with $1{schedule_code}','Could not find work schedule with code <b>$1</b>');
uis.lang_en('htt:011:solution:check code for correctness and try again','Check the correctness of the code');
uis.lang_en('htt:011:title:no data found','Work schedule not found');
uis.lang_en('htt:012:message:cannot find schedule with $1{schedule_name}','Could not find work schedule with name <b>$1</b>');
uis.lang_en('htt:012:solution:check name for correctness and try again','Check the correctness of the name');
uis.lang_en('htt:012:title:no data found','Work schedule not found');
uis.lang_en('htt:013:message:marks for schedule $1{schedule_name} intersect on day $2{schedule_date}','Found the intersection in the schedule of marks <b>$1</b> for <b>$2</b>');
uis.lang_en('htt:013:solution:resolve intersection on $1{schedule_date} and try again','Resolve intersection at marks for <b>$1</b>');
uis.lang_en('htt:014:message:marks for template $1{template_name} intersect on day $2{day_no}','Found the intersection in the schedule of marks of the template <b>$1</b> for the day <b>№$2</b>');
uis.lang_en('htt:014:solution:resolve intersection on $1{day_no} and try again','Resolve intersection in day markers <b>#$1</b>');
uis.lang_en('htt:015:message:timesheet plan changes for staff $1{staff_name} on date $2{timesheet_date} are blocked by timebook on $3{timebook_month}','Changing the work schedule of employee <b>$1</b> from <b>$2</b> is blocked by the timesheet for <b>$3</b>');
uis.lang_en('htt:015:solution:unpost timebook $1{timebook_number} and try again','Cancel timesheet number <b>$1</b> to unlock the range');
uis.lang_en('htt:015:title:timesheet locked','Time range locked');
uis.lang_en('htt:016:message:staff $1{staff_name} request $2{request_kind_name} exceed annual limit $3{annual_limit} by $4{exceed_amount}, used_amount:$5','Employee <b>$1</b> exceeded the annual absence limit of <b>$2</b> by <b>$4</b> days. Annual limit: <b>$3</b>, used: <b>$5</b> days');
uis.lang_en('htt:016:message:staff $1{staff_name} request $2{request_kind_name} exceed annual limit $3{annual_limit} for year $4{exceed_year} by $5{exceed_amount}, used_amount:$6','Employee <b>$1</b> request $2 exceed annual limit $3 for $4 year by $5, used_amount: $6');
uis.lang_en('htt:016:solution:add annual limit for $1{request_kind_name}','Increase annual absence limit for <b>$1</b>');
uis.lang_en('htt:016:solution:decrease request days count by $1{exceed_amount}','Reduce the number of added days by <b>$1</b>');
uis.lang_en('htt:016:title:request annual limit exceeded','Absence limit exceeded');
uis.lang_en('htt:017:message:staff $1{staff_name} already has completed request during $2{request_time}','Employee <b>$1</b> already has a confirmed request for <b>$2</b>');
uis.lang_en('htt:017:solution:move request begin time after $1{intersect_end}','Move request start time after <b>$1</b>');
uis.lang_en('htt:017:solution:move request end time before $1{intersect_start}','Move end time of request to <b>$1/b>');
uis.lang_en('htt:017:solution:move request out of $1{intersect_start} and $2{intersect_end}','Move the start and end time of the request so that it does not overlap with the period from <b>$1</b> to <b>$2</b>');
uis.lang_en('htt:017:solution:reset request with id $1{request_id} and try again','Cancel the request with ID <b>$1</b> to confirm the current request');
uis.lang_en('htt:017:title:requests intersection','Intersection of absence requests');
uis.lang_en('htt:018:message:chosen year ($1{chosen_year}) and calendar date year ($2{calendar_date}) are different','The selected year <b>$1</b> and the calendar day year <b>$2</b> do not match');
uis.lang_en('htt:018:solution:change chosen year and try again','Change the selected year to the year of the calendar day');
uis.lang_en('htt:018:solution:remove $1{calendar_date} from calendar and try again','Remove the day <b>$1</b> from the list of calendar days');
uis.lang_en('htt:019:message:date $1{calendar_date} was already used by another day','Day <b>$1</b> is already used in another calendar day');
uis.lang_en('htt:019:solution:leave only one day with date $1{calendar_date}','Leave only one day in the list of calendar days with the date <b>$1</b>');
uis.lang_en('htt:020:message:date $1{calendar_date} was already used by another day','Day <b>$1</b> is already used in another calendar day');
uis.lang_en('htt:020:solution:leave only one day with date $1{calendar_date}','Leave only one day in the list of calendar days with the date <b>$1</b>');
uis.lang_en('htt:021:message:cannot delete system calendar $1{calendar_id}','The calendar with ID <b>$1</b> is a system calendar. System calendars cannot be deleted');
uis.lang_en('htt:021:solution:remove this calendar from deletion list and try again','Remove the system calendar from the list for deletion and repeat the operation');
uis.lang_en('htt:022:message:cannot change shift when schedule is attached to any staff','Cannot change shift value when work schedule is attached to employees');
uis.lang_en('htt:022:solution:remove schedule from all staffs and try again','Detach the work schedule from all employees to change the shift');
uis.lang_en('htt:022:title:used schedule','Schedule used by employees');
uis.lang_en('htt:023:message:cannot change track acceptance borders when schedule is attached to any staff','You cannot change the limits for advance check in and check out when the work schedule is attached to employees');
uis.lang_en('htt:023:solution:remove schedule from all staffs and try again','Detach the work schedule from all employees to change the limits for advance check in and check out');
uis.lang_en('htt:023:title:used schedule','Schedule used by employees');
uis.lang_en('htt:024:message:cannot change track duration when schedule is attached to any staff','You can''t change the track period value (<b>Check in</b>, <b>Check out</b>) when a work schedule is attached to employees');
uis.lang_en('htt:024:solution:remove schedule from all staffs and try again','Detach work schedule from all employees to change track period value');
uis.lang_en('htt:024:title:used schedule','Schedule used by employees');
uis.lang_en('htt:025:message:cannot change fact settings when schedule is attached to any staff','You cannot change the accounting of time types (<b>Late</b>, <b>Early departure</b> and <b>Absent</b>) when a work schedule is attached to employees');
uis.lang_en('htt:025:solution:remove schedule from all staffs and try again','Detach the work schedule from all employees to change the accounting of time types');
uis.lang_en('htt:025:title:used schedule','Schedule used by employees');
uis.lang_en('htt:026:message:chosen year ($1{chosen_year}) and schedule date year ($2{schedule_date}) are different','Selected year <b>$1</b> and working day year <b>$2</b> do not match');
uis.lang_en('htt:026:solution:change chosen year and try again','Change the selected year to the year of the working day');
uis.lang_en('htt:027:message:marks begin time and end time is same on day $1{day_no}','Marking schedules start at the same time on the day <b>#$1</b>');
uis.lang_en('htt:027:solution:fix begin and end time and try again','Correct the schedule of marks in the work schedule settings');
uis.lang_en('htt:028:message:pattern mark outside of shift on day $1{day_no}','Marking schedule goes beyond shift on day <b>#$1</b>');
uis.lang_en('htt:028:message:pattern mark outside of worktime on day $1{day_no}','Track is out of work schedule of $1 day');
uis.lang_en('htt:028:solution:set mark begin time after $1{shift_value}','Move the start time of marks after <b>$1</b> in work schedule settings');
uis.lang_en('htt:028:solution:set mark begin time after work begin time $1{begin_time_value}','Set up the beginning time of track schedule after $1');
uis.lang_en('htt:028:solution:set mark end time before $1{shift_value}','Move the end time of marks to <b>$1</b> in work schedule settings');
uis.lang_en('htt:028:solution:set mark end time before work end time $1{end_time_value}','Set up the end time of track schedule before $1');
uis.lang_en('htt:029:message:found pattern mark available only on rest day on day $1{day_no}','Found the schedule of marks entered on the day off <b>#$1</b>');
uis.lang_en('htt:030:message:marks begin time and end time is same on day $1{schedule_date}','Marking schedules start at the same time on the day <b>$1</b>');
uis.lang_en('htt:030:solution:fix begin and end time and try again','Correct the schedule of marks in the working day settings');
uis.lang_en('htt:031:message:pattern mark outside of shift on day $1{schedule_date}','Marking schedule goes beyond shift on day <b>$1</b>');
uis.lang_en('htt:031:message:pattern mark outside of worktime on day $1{schedule_date}','Track is out of work schedule of $1 date');
uis.lang_en('htt:031:solution:set mark begin time after $1{shift_value}','Move the start time of marks after <b>$1</b> in work schedule settings');
uis.lang_en('htt:031:solution:set mark begin time after work begin time $1{begin_time_value}','Set up the beginning time of track schedule after $1');
uis.lang_en('htt:031:solution:set mark end time before $1{shift_value}','Move the end time of marks to <b>$1</b> in work schedule settings');
uis.lang_en('htt:031:solution:set mark end time before work end time $1{end_time_value}','Set up the end time of track schedule before $1');
uis.lang_en('htt:032:message:marks begin time and end time is same on day $1{day_no}','Marking schedules start at the same time on the day <b>#$1</b>');
uis.lang_en('htt:032:solution:fix begin and end time and try again','Correct the schedule of marks in the settings of the work schedule template');
uis.lang_en('htt:033:message:pattern mark outside of shift on day $1{day_no}','Marking schedule goes beyond shift on day <b>#$1</b>');
uis.lang_en('htt:033:solution:set mark begin time after $1{shift_value}','Move the start time of marks after <b>$1</b> in the work schedule template settings');
uis.lang_en('htt:033:solution:set mark end time before $1{shift_value}','Move the end time of marks to <b>$1</b> in the work schedule template settings');
uis.lang_en('htt:034:message:found pattern mark available only on rest day on day $1{day_no}','Found the schedule of marks entered on the day off <b>#$1</b>');
uis.lang_en('htt:035:message:cannot change time kind parent','You can''t change the parent working time type');
uis.lang_en('htt:035:solution:restore old parent ($1{old_parent_name}) and try again','Restore parent working time type <b>$1</b>');
uis.lang_en('htt:036:message:cannot set parent for system time kind','Cannot set parent for system working time type');
uis.lang_en('htt:036:solution:remove parent and try again','Remove parent working time type');
uis.lang_en('htt:037:message:cannot change plan load of system time kind','You cannot change the planned load for the system working time type');
uis.lang_en('htt:037:solution:restore old plan load ($1{old_plan_load}) and try again','Restore load on plan <b>$1</b>');
uis.lang_en('htt:038:message:cannot change requestable type of system time kind','You cannot change the settings for using the working time type in absence types');
uis.lang_en('htt:039:message:cannot create non system time kind without parent','You can''t create a working time type without a parent');
uis.lang_en('htt:039:solution:set parent and try again','Set parent working time type');
uis.lang_en('htt:040:message:cannot create non requestable time kind','You cannot create a working time type that is not used in absence types');
uis.lang_en('htt:041:message:cannot set non system parent','You cannot set a non-system working time type parent');
uis.lang_en('htt:041:solution:choose another parent and try again','Set the system parent working time type');
uis.lang_en('htt:042:message:cannot set second level parent','You can''t set parent working time type with parent');
uis.lang_en('htt:042:solution:choose another parent and try again','Set parent to working time type without parent');
uis.lang_en('htt:043:message:time kind and its parent have different plan loads','Working time type and its parent have different plan overloads');
uis.lang_en('htt:043:solution:set plan load to $1{parent_plan_load} and try again','Set plan overload <b>$1</b>');
uis.lang_en('htt:044:message:cannot delete system time kind $1{time_kind_id}','The working time type with ID <b>$1</b> is a system working time type. Cannot delete system working time type');
uis.lang_en('htt:044:solution:remove this time kind from deletion list and try again','Remove this working time type from the list for deletion and repeat the operation');
uis.lang_en('htt:045:message:found $1{main_photo_cnt} photos marked as main, only one photo can be main, person_name:$2','Employee <b>$2</b> found <b>$1</b> main photos');
uis.lang_en('htt:045:solution:unmark all photos and leave only one main photo','Leave only one main photo');
uis.lang_en('htt:045:title:multiple main photos','Multiple main photos');
uis.lang_en('htt:046:message:cannot change terminal model pcode','You cannot change the system code of the terminal model');
uis.lang_en('htt:046:solution:restore old pcode ($1{old_pcode}) for terminal model with id $2{model_id}','Set system code <b>$1</b> for model ID <b>$2</b>');
uis.lang_en('htt:047:message:terminal must have model selected','The device <b>Terminal</b> must have a model selected');
uis.lang_en('htt:047:solution:set device{terminal} model and try again','Select a model and try to save the device');
uis.lang_en('htt:047:title:null model value','Model not specified');
uis.lang_en('htt:048:message:location cannot be null','The device must have a location selected');
uis.lang_en('htt:048:solution:set device location and try again','Choose a location and try saving your device');
uis.lang_en('htt:048:title:null location value','Location not specified');
uis.lang_en('htt:049:message:hikvision must have host, login and password','The <b>Hikvision</b> device must have a login, password or device address');
uis.lang_en('htt:049:solution:set device{hikvision} host, login and password and try again','Set login, password and device address');
uis.lang_en('htt:049:title:null login, password or host value','Login, password or device address not specified');
uis.lang_en('htt:050:message:timepad must have language selected','The <b>Terminal</b> device must have a language selected');
uis.lang_en('htt:050:solution:set device{timepad} language and try again','Set device language');
uis.lang_en('htt:050:title:null language value','Language not specified');
uis.lang_en('htt:051:message:terminal must have model selected','The device <b>Terminal</b> must have a model selected');
uis.lang_en('htt:051:solution:set device{terminal} model and try again','Select a model and try to save the device');
uis.lang_en('htt:051:title:null model value','Model not specified');
uis.lang_en('htt:052:message:location cannot be null','The device must have a location selected');
uis.lang_en('htt:052:solution:set device location and try again','Choose a location and try saving your device');
uis.lang_en('htt:052:title:null location value','Location not specified');
uis.lang_en('htt:053:message:hikvision must have host, login and password','The <b>Hikvision</b> device must have a login, password or device address');
uis.lang_en('htt:053:solution:set device{hikvision} host, login and password and try again','Set login, password and device address');
uis.lang_en('htt:053:title:null login, password or host value','Login, password or device address not specified');
uis.lang_en('htt:054:message:timepad must have language selected','The <b>Terminal</b> device must have a language selected');
uis.lang_en('htt:054:solution:set device{timepad} language and try again','Set device language');
uis.lang_en('htt:054:title:null language value','Language not specified');
uis.lang_en('htt:055:message:track $1{track_id} is already valid','Failed to validate track with ID <b>$1</b>. it is already valid');
uis.lang_en('htt:055:solution:remove track $1{track_id} from validation list and try again','Exclude the mark with ID <b>$1</b> from the list for conversion to valid tracks and repeat the operation');
uis.lang_en('htt:056:message:track $1{track_id} is already invalid','Failed to invalidate track with ID <b>$1</b>. it is already invalid');
uis.lang_en('htt:056:solution:remove track $1{track_id} from invalidation list and try again','Exclude the track with ID <b>$1</b> from the list for conversion to invalid marks and repeat the operation');
uis.lang_en('htt:057:message:cant change time kind for system defined request kind','You cannot change the working time type of the absence type created by the system');
uis.lang_en('htt:057:solution:restore old time kind ($1{time_kind_name}) and try again','Restore working time type <b>$1</b>');
uis.lang_en('htt:058:message:time kind $1{time_kind_name} is not requestable, it cannot be used for request kind','Working time type <b>$1</b> cannot be used in absence types');
uis.lang_en('htt:058:solution:choose requestable time kind and try again','Choose a different working time type');
uis.lang_en('htt:059:message:cant delete system defined request kind','You cannot delete a system absence type');
uis.lang_en('htt:059:solution:remove request kind $1{request_kind_name} from deletion list and try again','Remove the absence type <b>$1</b> from the list for deletion and repeat the operation');
uis.lang_en('htt:060:message:to change/save request it shouldnt be approved, completed or denied {its status should be $1{request_status_new}}','To change an absence request, it must not be confirmed or denied');
uis.lang_en('htt:060:solution:reset request and try again','Restore the absence request and retry the operation');
uis.lang_en('htt:061:message:request staff cannot be changed','You can not change the employee attached to the request for absence');
uis.lang_en('htt:061:solution:restore old staff ($1{staff_name}) and try again','Set employee <b>$1</b> and repeat the operation');
uis.lang_en('htt:062:message:request type and time kind plan load dont match','Time of absence request and working time type plan overload do not match');
uis.lang_en('htt:062:solution:change requets type to one of $1{request_types} and try again','Set the absence request time as one of <b>$1</b> and retry the operation');
uis.lang_en('htt:063:message:when request type is $1{request_type_name} request time should take $2{request_time_msg}','When the working time type is <b>$1</b> then the request should take <b>$2</b>');
uis.lang_en('htt:063:request_time_msg:at least two days','at least two days');
uis.lang_en('htt:063:request_time_msg:only one full day','just one day');
uis.lang_en('htt:063:request_time_msg:only part of day','only part of the day');
uis.lang_en('htt:063:title:request time is wrong','Wrong request time');
uis.lang_en('htt:064:message:exceeded request restriction days, $1{restriction_reason}','$1');
uis.lang_en('htt:064:restriction_reason:request cannot be created $1{restriction_days} days after requst begin date $2{request_begin_date}','Request cannot be created after <b>$1</b> days from start date of request <b>$2</b>');
uis.lang_en('htt:064:restriction_reason:request should be created $1{restriction_days} days in advance of request begin date $2{request_begin_date}','The request must be created <b>$1</b> days before the start date of the request <b>$2</b>');
uis.lang_en('htt:064:solution:move request begin time after $1{restriction_border}','Move request start time after <b>$1</b>');
uis.lang_en('htt:064:title:request restriction days','Request time limit');
uis.lang_en('htt:065:message:to reset request it must be approved, completed or denied {its status should be $1{request_statuses}}','To restore the request, it must be approved or denied');
uis.lang_en('htt:065:solution:remove request (id $1{request_id}) from reset list and try again','Remove request with ID <b>$1</b> from the restore list and retry the operation');
uis.lang_en('htt:066:message:to approve request it shouldnt be approved, completed or denied {its status should be $1{request_statuses}}','To approve a request, it must be $1');
uis.lang_en('htt:066:solution:remove request (id $1{request_id}) from approval list and try again','Remove request with ID <b>$1</b> from the list for confirmation and repeat the operation');
uis.lang_en('htt:067:message:to complete request it shouldnt be completed or denied {its status should be $1{request_statuses}}','To validate a request, it must be one of $1');
uis.lang_en('htt:067:solution:remove request (id $1{request_id}) from completion list and try again','Remove request with ID <b>$1</b> from the list for confirmation and repeat the operation');
uis.lang_en('htt:068:message:to deny request it shouldnt be completed or denied {its status should be $1{request_statuses}}','To deny a request, it must be one of $1');
uis.lang_en('htt:068:solution:remove request (id $1{request_id}) from denial list and try again','Remove the request with ID <b>$1</b> from the denial list and retry the operation');
uis.lang_en('htt:069:message:to delete request it shouldnt be approved, completed or denied {its status should be $1{request_statuses}}','To delete a request, it must be $1');
uis.lang_en('htt:069:solution:remove request (id $1{request_id}) from deletion list and try again','Remove request with ID <b>$1</b> from the list for deletion and repeat the operation');
uis.lang_en('htt:070:message:change must have at least one change day','Request must contain at least one day');
uis.lang_en('htt:070:solution:add change days and try again','Add request days and repeat the operation');
uis.lang_en('htt:070:title:no change days','Request date not specified');
uis.lang_en('htt:071:message:to change/save plan change it shouldnt be completed, approved or denied {its status should be $1{change_statuses}}','To change a request, it must be $1');
uis.lang_en('htt:071:solution:reset plan change and try again','Reset the request and retry the operation');
uis.lang_en('htt:072:message:plan change staff cannot be changed','You can not change the employee attached to the request to change the schedule');
uis.lang_en('htt:072:solution:restore old staff ($1{staff_name}) and try again','Set employee <b>$1</b> and repeat the operation');
uis.lang_en('htt:073:message:one date has not changed date','No date for swapping dates');
uis.lang_en('htt:073:message:swap must have only 2 days','A request for an swap of days must contain only two days');
uis.lang_en('htt:073:title:add changed date for date which has not change date','Add one more date for swapping dates');
uis.lang_en('htt:073:title:remove all but two days','More than two request dates');
uis.lang_en('htt:074:message:to delete plan change it shouldnt be completed, approved or denied {its status should be $1{change_statuses}}','To delete a request, it must be $1');
uis.lang_en('htt:074:solution:remove plan change (id $1{change_id}) from deletion list and try again','Remove request with ID <b>$1</b> from the list for deletion and repeat the operation');
uis.lang_en('htt:075:message:to reset plan change it shouldnt be approved, completed or denied {its status should be $1{change_statuses}}','To reset the request, it must be one of $1');
uis.lang_en('htt:075:solution:remove plan change (id $1{change_id}) from reset list and try again','Remove request with ID <b>$1</b> from the recovery list and retry the operation');
uis.lang_en('htt:076:message:to approve plan change it shouldnt be approved, completed or denied {its status should be $1{change_statuses}}','To approve a request, it must be new');
uis.lang_en('htt:076:solution:remove plan change (id $1{change_id}) from approval list and try again','Remove request with ID <b>$1</b> from the approval list and repeat the operation');
uis.lang_en('htt:077:message:to complete plan change it shouldnt be completed or denied {its status should be $1{change_statuses}}','To complete a request, it must be one of $1');
uis.lang_en('htt:077:solution:remove plan change (id $1{change_id}) from completion list and try again','Remove request with ID <b>$1</b> from the completion list and repeat the operation');
uis.lang_en('htt:078:message:to deny plan change it shouldnt be completed or denied {its status should be $1{change_statuses}}','To deny a request, it must be one of $1');
uis.lang_en('htt:078:solution:remove plan change (id $1{change_id}) from denial list and try again','Remove the request with ID <b>$1</b> from the denial list and retry the operation');
uis.lang_en('htt:079:message:pin autogenerate value must be in (y, n)','PIN auto-generation value must be <b>Y</b> or <b>N</b>');
uis.lang_en('htt:080:message:photo as face rec value must be in (y, n)','The value of using a photo for face recognition must be <b>Y</b> or <b>N</b>');
uis.lang_en('htt:081:message:plan load cannot be extra','Cannot create request using <b>unscheduled</b> working time type');
uis.lang_en('htt:081:solution:set another time kind and try again','Select an absence type that does not use the <b>unscheduled</b> working time type');
uis.lang_en('htt:082:message:qr code already deactivated, location_id:$1, location_name:$2, created_on:$3','<b>QR</b> code from <b>$2</b> for location <b>$2</b> with ID <b>$1</b> is already deactivated');
uis.lang_en('htt:083:message:cannot change posted, unpost first','Cannot change posted schedule, unpost first');
uis.lang_en('htt:084:message:cannot change registry kind, registry kinds must be same','Cannot change individual schedule type');
uis.lang_en('htt:085:message:chosen month for staff ($1{staff_name}) ($2{chosen_month}) and schedule date month ($3{schedule_date}) are different','Chosen month ($2) of individual schedule for <b>$1</b> and schedule date month <b>$3</b> are different');
uis.lang_en('htt:085:solution:change chosen month and try again','Change month and try again');
uis.lang_en('htt:086:message:cannot have robot unit in staff individual staff schedule','Cannot select position in individual schedule for employee');
uis.lang_en('htt:087:message:cannot have staff unit in robot individual robot schedule','Cannot select employee in individual schedule for position');
uis.lang_en('htt:088:message:cannot delete posted schedule registry','Cannot delete posted individual schedule');
uis.lang_en('htt:089:message:date ($1{i_date}) is missing in staff individual schedule for staff ($2{i_staff_name})','There are no date <b>$1</b> for <b>$2</b> in individual schedule for employee');
uis.lang_en('htt:090:message:date ($1{i_date}) is missing in robot individual schedule for position: ($2{i_robot_name})','There are no date <b>$1</b> for <b>$2</b> in individual schedule for position');
uis.lang_en('htt:091:message:at the date of ($1{i_date}) marks of staff ($2{i_staff_name}) intersect','There is intersection in track schedule for employee <b>$2</b> for <b>$1</b>');
uis.lang_en('htt:092:message:at the date of ($1{i_date}) marks of robot ($2{i_robot_name}) intersect','There is intersection in track schedule for position <b>$2</b> for <b>$1</b>');
uis.lang_en('htt:093:message:cannot post posted documnent','Cannot post already posted document');
uis.lang_en('htt:094:message:at the date of ($1{i_date}) there are no robot marks and no staff marks','Date ($1) has no position or employee marks.');
uis.lang_en('htt:095:message:at the date of ($1{i_date}) marks of staff ($2{i_staff_name}) and of robot ($3{i_robot_name}) are present','Date ($1) has employee ($2) and position ($3) marks.');
uis.lang_en('htt:096:delete/unpost other registries then try again','Delete/unpost other individual work schedules and try again');
uis.lang_en('htt:096:message:staff ($1{i_staff_name}) has at least two registries for individual schedule with intersecting dates.','<b>$1</b> has two individual schedules with intersecting dates');
uis.lang_en('htt:097:delete/unpost other registries then try again','Delete/unpost other individual work schedules and try again');
uis.lang_en('htt:097:message:robot ($1{i_robot_name}) has at least two registries for individual schedule with intersecting date.','<b>$1</b> has two individual schedules with intersecting dates');
uis.lang_en('htt:099:message:chosen month for robot ($1{robot_name}) ($2{chosen_month}) and schedule date month ($3{schedule_date}) are different','Chosen month ($2) of individual schedule for <b>$1</b> and schedule date month <b>$3</b> are different');
uis.lang_en('htt:099:solution:change chosen month and try again','Change selected month and try again');
uis.lang_en('htt:100:message:staff $1{staff_name} already has approved plan change on $2{change_date}','<b>$1</b> already has approved plan change on $2');
uis.lang_en('htt:100:solution:choose another change date','Choose another date');
uis.lang_en('htt:100:solution:reset change with id $1{change_id} and try again','Reset plan change with ID = $1 and tray again');
uis.lang_en('htt:100:title:plan change intersection','Plan changes intersection');
uis.lang_en('htt:101:message:$1{schedule_name} is system schedule, system schedule cannot be edited','<b>$1</b> is system schedule and cannot be changed');
uis.lang_en('htt:102:message:$1{schedule_name} is system schedule, system schedule cannot be deleted','<b>$1</b> is system schedule and cannot be deleted');
uis.lang_en('htt:102:solution:exclude $1{schedule_name} from delete list','Exclude <b>$1</b> from delete list');
uis.lang_en('htt:103:message:found undefined days in schedule $1{schedule_name} on $2{undefined_month}','Found not generated days in <b>$1</b> on <b>$2</b>');
uis.lang_en('htt:103:solution:define all days in $1{undefined_month}','Generate all days in <b>$1</b>');
uis.lang_en('htt:103:title:undefined month','Incompleted month');
uis.lang_en('htt:104:message:found undefined days in individual schedule for $1{staff_name} on $2{undefined_month}','Found not generated days in individual work schedule for <b>$1</b> on <b>$2</b>');
uis.lang_en('htt:104:solution:define all days in $1{undefined_month}','Generate all days in <b>$1</b>');
uis.lang_en('htt:104:title:undefined month','Incompleted month');
uis.lang_en('htt:105:message:the person is not attached to the location where the device is installed, filial=$2, location=$1, person=$3','Employee not attached to location where device is installed. Orgnisation = $2, Location = $1, Employee = $3');
uis.lang_en('htt:106:message:found undefined days in individual schedule for $1{robot_name} on $2{undefined_month}','Found not generated days in individual schedule for <b>$1</b> on <b>$2</b>');
uis.lang_en('htt:106:solution:define all days in $1{undefined_month}','Generate all days in <b>$1</b>');
uis.lang_en('htt:106:title:undefined month','Incompleted month');
uis.lang_en('htt:107:message:employee $1{staff_name} has worktime intersection on $2{intersection_date}, end time for previous date $3{end_time} comes after begin time for current date $4{begin_time}','An employee $1 for $2 has a work schedule intersection, the end of the work schedule ($3) of the previous day cannot end later than the start ($4) of the current day');
uis.lang_en('htt:107:solution:move begin time for $1{work_day_date} after $2{end_time} to remove intersection','Move the work schedule start time of $1 after $2');
uis.lang_en('htt:107:solution:move end time for $1{work_day_date} before $2{begin_time} to remove intersection','Move the end time of the work schedule of $1 to $2');
uis.lang_en('htt:107:solution:move schedule change date after closest rest day, so worktime will not intersect','Move the date of the work schedule change after the rest day');
uis.lang_en('htt:107:title:work time intersection','Intersection of work schedules');
uis.lang_en('htt:108:message:max length of work day cannot exceed $1{max_length_limit} hours','The maximum working day duration cannot exceed $1 hours');
uis.lang_en('htt:108:solution:reduce max length of work day {defined by track_duration} to be less than $1{max_length_limit} hours','Reduce your maximum working hours');
uis.lang_en('htt:108:title:worktime limit','Duration of the day');
uis.lang_en('htt:109:message:length of note is not enough, min length must be $1{min_length}','Note character count is not enough, minimum value must be $1');
uis.lang_en('htt:109:solution:enlarge note','Write more longer note');
uis.lang_en('htt:109:title:length of note is not enough','Not enough note characters');
uis.lang_en('htt:110:message:length of note is not enough, min length must be $1{min_length}','Note character count is not enough, minimum value must be $1');
uis.lang_en('htt:110:solution:enlarge note','Write more longer note');
uis.lang_en('htt:110:title:length of note is not enough','Not enough note characters');
uis.lang_en('htt:111:message:you do not have access $1{schedule_kind} kind of schedule','You do not have access <b>$1</b> type of Work Schedule');
uis.lang_en('htt:112:message:restriction_reason:change cannot be created $1{restriction_days} days after change day $2{change_day}','Request cannot be created after <b>$1</b> days from change date of request <b>$2</b>');
uis.lang_en('htt:112:message:restriction_reason:change should be created $1{restriction_days} days in advance of change day $2{change_day}','The request must be created <b>$1</b> days before the change date of the request <b>$2</b>');
uis.lang_en('htt:112:solution:move change begin time after $1{restriction_border}','Move request change begin time after <b>$1</b>');
uis.lang_en('htt:112:title:change restriction days','Request time limit');
uis.lang_en('htt:113:message:cannot change allowed late time when schedule is attached to any staff','It is not possible to change the time allowed for lateness when the schedule is assigned to an employee.');
uis.lang_en('htt:113:solution:remove schedule from all staffs and try again','Remove schedule from all employees and try again.');
uis.lang_en('htt:113:title:used schedule','Used schedule');
uis.lang_en('htt:114:message:cannot change allowed early time when schedule is attached to any staff','It is not possible to change the time allowed for early departure when the schedule is assigned to an employee.');
uis.lang_en('htt:114:solution:remove schedule from all staffs and try again','Remove schedule from all employees and try again.');
uis.lang_en('htt:114:title:used schedule','Used schedule');
uis.lang_en('htt:115:message:cannot change begin late time when schedule is attached to any staff','It is not possible to change the beginning time for being late when the schedule is tied to an employee.');
uis.lang_en('htt:115:solution:remove schedule from all staffs and try again','Remove schedule from all employees and try again.');
uis.lang_en('htt:115:title:used schedule','Used schedule');
uis.lang_en('htt:116:message:cannot change end early time when schedule is attached to any staff','It is not possible to change the end early time when the schedule is assigned to an employee.');
uis.lang_en('htt:116:solution:remove schedule from all staffs and try again','Remove schedule from all employees and try again.');
uis.lang_en('htt:116:title:used schedule','Used schedule');
uis.lang_en('htt:117:message:cannot use advansed setting for $1{schedule_kind_name} schedule','You cannot use advanced settings for schedule type $1');
uis.lang_en('htt:117:solution:turn of advansed setting and try again','Disable advanced settings and try again.');
uis.lang_en('htt:117:title:used schedule','Used schedule');
uis.lang_en('htt:118:message:location sync person global must be in (y, n)','Global attachment setting should be in (y, n)');
uis.lang_en('htt:119:solution:make the same month of swapped dates','Make the same month of swapped dates');
uis.lang_en('htt:119:solution:remove $1{calendar_name} from $2{schedule_name}','Remove $1 from $2');
uis.lang_en('htt:119:solution:turn off monthly limit from $1{calendar_name}','Turn off monthly limit from $1');
uis.lang_en('htt:119:title:swapped dates are in different months','Swapped dates are in different months');
uis.lang_en('htt:120:message:plan time for $1{change_date} has exceeded the daily limit of calendar','The scheduled time for $1 has exceeded the daily limit of the calendar');
uis.lang_en('htt:120:solution:reduce plan time','Reduce plan time');
uis.lang_en('htt:120:solution:remove $1{calendar_name} from $2{schedule_name}','Remove $1 from $2');
uis.lang_en('htt:120:solution:turn off daily limit from $1{calendar_name}','Turn off the daily limit for $1');
uis.lang_en('htt:120:title:daily plan exceeded','Daily plan exceeded');
uis.lang_en('htt:121:message:because of monthly limit of calendar is on you cannot change day kind of $1{change_date}','Because of the monthly calendar limit, you cannot change the day type of $1');
uis.lang_en('htt:121:solution:do not change the day kind','Do not change the day kind');
uis.lang_en('htt:121:solution:remove $1{calendar_name} from $2{schedule_name}','Remove $1 from $2');
uis.lang_en('htt:121:solution:turn off monthly limit from $1{calendar_name}','Turn off monthly limit from $1');
uis.lang_en('htt:121:title:day kind changed','Day kind changed');
uis.lang_en('htt:122:message:for $1{schedule_date}, plan time has exceeded the limit of the calendar, plan_time = $2{plan_time}, limit_time = $3{limit_time}','For $1, Plan time has exceeded the limit of the calendar, Plan Time = $2, Limit Time = $3');
uis.lang_en('htt:122:message:in $1{robot_name) schedule plan time has exceeded the limit of the calendar for $2{schedule_date}, plan_time = $3{plan_time}, limit_time = $4{limit_time}','Position <b>$1</b>''s turnout time ($3) has exceeded the limit of the Production Calendar ($4).');
uis.lang_en('htt:122:message:in $1{staff_name) schedule plan time has exceeded the limit of the calendar for $2{schedule_date}, plan_time = $3{plan_time}, limit_time = $4{limit_time}','Employee <b>$1</b>''s turnout time ($3) has exceeded the limit of the Production Calendar ($4).');
uis.lang_en('htt:122:solution:reduse daily plan time','Reduce daily plan time');
uis.lang_en('htt:122:solution:remove calendar','Remove calendar');
uis.lang_en('htt:122:solution:turn of daily limit from calendar','Turn off daily limit from calendar');
uis.lang_en('htt:122:title:daily plan time exceeded from calendar plan time','Turnout time has exceeded the limit of calendar');
uis.lang_en('htt:123:message:in $1{robot_name} schedule, plan days count must be the same with plan day limit in calendar for $2{month}, plan days = $3{plan_day}, limit day = $4{limit_day}','The number of monthly working days ($3) for <b>$2</b> in the schedule for position <b>$1</b> does not match the number of working days on the calendar ($4).');
uis.lang_en('htt:123:message:in $1{staff_name} schedule, plan days count must be the same with plan day limit in calendar for $2{month}, plan days = $3{plan_day}, limit day = $4{limit_day}','The number of monthly working days ($3) for <b>$2</b> in Employee <b>$1</b''s schedule does not match the number of working days on the calendar ($4).');
uis.lang_en('htt:123:message:plan days count must be the same with plan day limit in calendar for $1{month}, plan days = $2{plan_day}, limit day = $3{limit_day}','The number of monthly working days ($2) for <b>$1</b> does not match the number of working days on the calendar ($3).');
uis.lang_en('htt:123:solution:make the same working day count with working day limit of calendar','Make the same number of monthly working days as the number of monthly calendar working days for that month.');
uis.lang_en('htt:123:solution:remove calendar','Remove calendar');
uis.lang_en('htt:123:solution:turn of monthly limit from calendar','Turn off monthly limit from calendar');
uis.lang_en('htt:123:title:monthly working day count is not the same with calendar day limit','Monthly working day count is not matching with calendar day limit');
uis.lang_en('htt:124:message:pattern weighted time part begin time and end time is same on day $1{day_no}','The start and end times of the weighted time part are the same for a $1 day');
uis.lang_en('htt:124:solution:fix begin and end time and try again','Fix the start and end times and try again.');
uis.lang_en('htt:125:message:pattern weighted time part outside of worktime on day $1{day_no}','Start and end times of the weighted time portion of the $1-day out-of-hours working period time');
uis.lang_en('htt:125:solution:set weighted time part begin time after work begin time $1{begin_time_value}','Set the start time of the weighted time part after the <b>$1</b> start time');
uis.lang_en('htt:125:solution:set weighted time part end time before work end time $1{end_time_value}','Set the end time of the weighted time part to the <b>$1</b> work end time');
uis.lang_en('htt:126:message:weighted time part begin time and end time is same on day $1{schedule_date}','The start and end times of the weighted time part are the same for <b>$1</b>');
uis.lang_en('htt:126:solution:fix begin and end time and try again','Fix the start and end times and try again.');
uis.lang_en('htt:127:message:weighted time part outside of worktime on day $1{schedule_date}','Start and end times of the weighted time portion of the off-duty time for <b>$1</b>');
uis.lang_en('htt:127:solution:set weighted time part begin time after work begin time $1{begin_time_value}','Set the start time of the weighted time part after work start time  <b>$1</b>');
uis.lang_en('htt:127:solution:set weighted time part end time before work end time $1{end_time_value}','Set the end time of the weighted time part to work end time <b>$1</b>');
uis.lang_en('htt:128:message:weighted time part for schedule $1{schedule_name} intersect on day $2{schedule_date}','The weighted time part for the <b>$1</b> schedule crosses on day <b>$2</b>');
uis.lang_en('htt:128:solution:resolve intersection on $1{schedule_date} and try again','Resolve the intersection at <b>$1</b> and try again.');
uis.lang_en('htt:129:message:change day weighted time part begin time and end time is same on part $1{part_no}','The start and end times of the weighted time part are the same for part No.1$1');
uis.lang_en('htt:129:solution:fix begin and end time and try again','Fix the start and end times and try again.');
uis.lang_en('htt:130:message:change day weighted time part outside of worktime on part $1{part_no}','Change day weighted time part outside of work time on part $1');
uis.lang_en('htt:130:solution:set weighted time part begin time after work begin time $1{begin_time_value}','Set the start time of the weighted time part after the <b>$1</b> start time');
uis.lang_en('htt:130:solution:set weighted time part end time before work end time $1{end_time_value}','Set the end time of the weighted time part to work end time <b>$1</b>');
uis.lang_en('htt:131:message:weighted time part intersect on day $1{change_date}','The weighted time part intersects at <b>$1</b>');
uis.lang_en('htt:131:solution:resolve intersection on $1{change_date} and try again','Resolve the intersection at <b>$1</b> and try again.');
uis.lang_en('htt:132:message:you cannot change weighted part if change status is $1{status_name}. change_id = $2{change_id}','Unable to change the weighted time part when the query state is <b>$1</b>. Request ID = $2.');
uis.lang_en('htt:133:message:the employee $1{employee_name} has exceeded the maximum allowed schedule changes limit by $2{exceeded_count}, allowed $3{monthly_limit}, for $4{month_year}','Employee $1 exceeded the maximum allowable schedule change limit by $2, allowable $3, for $4');
uis.lang_en('htt:133:solution:try to cancel one of the change requests','Try canceling one of the change requests');
uis.lang_en('htt:133:solution:try to exceed the maximum allowed limit from settings','Try increasing the limit in the settings');
uis.lang_en('htt:134:message:you can change track type only if currenct track type input, output or check, currenct track type: $1(current_track_type)','You can change track type only if current track type input, output or check, current track type: $1');
uis.lang_en('htt:135:message:you can change track type to only input, output or check, new track type: $1(new_track_type)','You can change track type to only input, output or check, new track type: $1');
uis.lang_en('htt:136:message:since tracking is blocked for $1{employee_name}, it is forbidden to add a track to him','Blocked the tracking for $1, it is not possible to add a track.');
uis.lang_en('htt:136:solution:unblock $1{employee_name} from tracking via employee_list and type again','Unblock the tracking for $1 from employee list and try again.');
uis.lang_en('htt:accrual_kind:carryover','Carryover');
uis.lang_en('htt:accrual_kind:plan','Planned');
uis.lang_en('htt:acms track was already integrate, track_id=$1','ACMS tracks are already integrated. Track ID = $1');
uis.lang_en('htt:acms_mark_type:face','Face');
uis.lang_en('htt:acms_mark_type:touch','Fingerprint');
uis.lang_en('htt:acms_track_status: completed','Completed');
uis.lang_en('htt:acms_track_status: failed','Failed');
uis.lang_en('htt:acms_track_status: new','New');
uis.lang_en('htt:assert_has_intersection_request: staff has intersection request, staff_id=$1, begin_time=$2, end_time=$3','Time intersection in request for absence. Employee ID = $1, Start Time = $2, End Time = $3');
uis.lang_en('htt:assert_request_has_available_days: staff annual limit exceeded, already used $1 days, trying to add $2 days, staff id=$3, annual limit=$4','Exceeded time limit for absence requests, Employee ID=$3, Days per year=$4, Used=$1, Requested=$2');
uis.lang_en('htt:assert_schedule_marks: marks intersection found, schedule_id=$1, schedule_date=$2','Some intersections were found. Work Schedule ID = $1, Intersection Date = $2');
uis.lang_en('htt:assert_timesheet_locks: timesheet locked, staff_id=$1, timesheet_date=$2','Work schedule is locked. Employee ID = $1, Date = $2');
uis.lang_en('htt:attach_type:auto','Auto');
uis.lang_en('htt:attach_type:global','Global');
uis.lang_en('htt:attach_type:manual','Manual');
uis.lang_en('htt:calendar_delete: cannot delete system calendar, calendar_id=$1','You cannot delete system production calendar, Production Calendar ID = $1');
uis.lang_en('htt:calendar_save: cannot save date which is used for another day, calendar_id=$1, calendar_date=$2','You cannot save a day with a date used by another day of the production day, Calendar ID=$1, Date=$2');
uis.lang_en('htt:calendar_save: cannot save date which is used for another day, calendar_id=$1, calendar_date=$2, swapped_date=$3','You cannot save a day with a date used by another day of the production day, Calendar ID=$1, Date=$2, Replacing Date = $3');
uis.lang_en('htt:calendar_save: chosen year and calendar date year are different, calendar_id=$1, year=$2, calendar date=$3','You cannot save a day with a year different from the selected year of the production calendar, Calendar ID=$1, Year=$2, Date=$3');
uis.lang_en('htt:carryover_policy: all','Unlimited carryover');
uis.lang_en('htt:carryover_policy: cap','Limited carryover');
uis.lang_en('htt:carryover_policy: zero','Use-or-lose rule');
uis.lang_en('htt:change_approve: change status must be $1, change_id=$2','Request status must be $1, Request ID = $2');
uis.lang_en('htt:change_complete: change status must be $1, change_id=$2','Request status must be $1, Request ID = $2');
uis.lang_en('htt:change_delete: change status must be $1, change_id=$2','Request status must be $1, Request ID = $2');
uis.lang_en('htt:change_deny: change status must be in $1, change_id=$2','Request status must be $1, Request ID = $2');
uis.lang_en('htt:change_kind:change_plan','Work Schedule Change');
uis.lang_en('htt:change_kind:swap','Day Swap');
uis.lang_en('htt:change_reset: change status must be $1, change_id=$2','Request status must be $1, Request ID = $2');
uis.lang_en('htt:change_save: change must have at least one change day, change_id=$1','Request must have at least one day. Request ID = $1');
uis.lang_en('htt:change_save: change status must be $1, change_id=$2','Request status must be $1, Request ID = $2');
uis.lang_en('htt:change_save: plan change can change only 1 days, change_id=$1','Work schedule can be changed only with one day. Request ID = $1');
uis.lang_en('htt:change_save: staff cannot be changed, change_id=$1','Employee cannot be changed. Request ID = $1');
uis.lang_en('htt:change_save: swap can change only 2 days, change_id=$1','Day swap works only with 2 days. Request ID = $1');
uis.lang_en('htt:change_status:approved','Approved by manager');
uis.lang_en('htt:change_status:completed','Approved');
uis.lang_en('htt:change_status:denied','Disapproved');
uis.lang_en('htt:change_status:new','Pending');
uis.lang_en('htt:command_kind: remove device','Delete device');
uis.lang_en('htt:command_kind: remove person','Delete employee');
uis.lang_en('htt:command_kind: sync tracks','Sync tracks');
uis.lang_en('htt:command_kind: update all device persons','Sync employees');
uis.lang_en('htt:command_kind: update device','Sync device');
uis.lang_en('htt:command_kind: update person','Sync employee');
uis.lang_en('htt:command_status: complited','Completed');
uis.lang_en('htt:command_status: failed','Failed');
uis.lang_en('htt:command_status: new','New');
uis.lang_en('htt:command_status: sent','Sent');
uis.lang_en('htt:dashboard: not licensed day','No subscription');
uis.lang_en('htt:dashboard:additional rest day','Additional Rest day');
uis.lang_en('htt:dashboard:holiday','Holiday');
uis.lang_en('htt:dashboard:intime','On Time');
uis.lang_en('htt:dashboard:late','Lateness');
uis.lang_en('htt:dashboard:leave','Absent by reason');
uis.lang_en('htt:dashboard:no timesheet','Work schedule is not set yet');
uis.lang_en('htt:dashboard:nonworking day','Non-working Day');
uis.lang_en('htt:dashboard:not come','Absence');
uis.lang_en('htt:dashboard:rest day','Rest Day');
uis.lang_en('htt:dashboard:working time not begin','Working day has not begun yet');
uis.lang_en('htt:day_count_type:calendar days','Calendar Days');
uis.lang_en('htt:day_count_type:production days','Production Days');
uis.lang_en('htt:day_count_type:work days','Working Days');
uis.lang_en('htt:day_kind:additional rest','Additional Rest Day');
uis.lang_en('htt:day_kind:holiday','Holiday');
uis.lang_en('htt:day_kind:nonworking','Non-working Day');
uis.lang_en('htt:day_kind:rest','Non-working Day');
uis.lang_en('htt:day_kind:swapped','Replacing Day');
uis.lang_en('htt:day_kind:work','Working Day');
uis.lang_en('htt:device_add: hikvision must have host, login and password','You cannot create Hikivision, device address, login and password must be specified.');
uis.lang_en('htt:device_add: language cannot be null, device_id=$1','Language must be chosen. Device  ID = $1');
uis.lang_en('htt:device_add: location cannot be null, device_id=$1','You cannot create device, location must be specified. Device ID = $1');
uis.lang_en('htt:device_add: model cannot be null, device_id=$1','"Model" field cannot be null. Device ID = $1');
uis.lang_en('htt:device_status:offline','Offline');
uis.lang_en('htt:device_status:online','Online');
uis.lang_en('htt:device_status:unknown','Unknown');
uis.lang_en('htt:device_update: hikvision must have host, login and password','You cannot update Hikivision, device address, login and password must be specified.');
uis.lang_en('htt:device_update: language cannot be null, device_id=$1','Language must be chosen. Device  ID = $1');
uis.lang_en('htt:device_update: location cannot be null, device_id=$1','You cannot update Hikivision, location must be specified. Device ID = $1');
uis.lang_en('htt:device_update: model cannot be null, device_id=$1','"Model" field cannot be null. Device ID = $1');
uis.lang_en('htt:for $1{person_name} $2{change_kind} approved','$2 request was approved for $1');
uis.lang_en('htt:for $1{person_name} $2{change_kind} saved','$2 request was saved for $1');
uis.lang_en('htt:for $1{person_name} $2{change_kind} status changed','$2 request was changed for $1');
uis.lang_en('htt:for $1{person_name} $2{request_kind_name} approved','$2 request was approved for $1');
uis.lang_en('htt:for $1{person_name} $2{request_kind_name} saved','$2 request was saved for $1');
uis.lang_en('htt:for $1{person_name} $2{request_kind_name} status change','$2 request was changed for $1');
uis.lang_en('htt:gen_timesheet_fact: fact value more than 24 hours, timesheet_id=$1, time_kind_id=$2, fact_value=$3','You cannot create fact, fact more than 24 hours, ID=$1, Working Time Period ID = $2, Fact = $3');
uis.lang_en('htt:gen_timesheet_facts.insert_overtime_days: company id must be unique in dirty timesheet','Facts generation is locked for 2 companies');
uis.lang_en('htt:gen_timesheet_facts: overtime must be small of free time, staff_id=$1, timesheet_date=$2','Overtime hours are greater than the time out of work schedule. Employee ID = $1, Date = $2');
uis.lang_en('htt:gen_timesheet_plan: timesheet locked, staff_id=$1, timesheet_date=$2','Work Schedule cannot be created. Employee ID = $1, Date = $2');
uis.lang_en('htt:gen_timesheet_requests: timesheet locked, staff_id=$1, timesheet_date=$2','You cannot finish request, day is blocked, Employee ID = $1, Date = $2');
uis.lang_en('htt:hh','h');
uis.lang_en('htt:hikvision track was already integrate, track_id=$1','Track is already synchronized, ID = $1');
uis.lang_en('htt:hikvision_mark_type:face','Face Recognition');
uis.lang_en('htt:hikvision_mark_type:touch','Fingerprint');
uis.lang_en('htt:hikvision_track_status:complete','Completed');
uis.lang_en('htt:hikvision_track_status:error','Error');
uis.lang_en('htt:hikvision_track_status:new','New');
uis.lang_en('htt:htt_api.request_kind_save: cant change time kind for system defined request kind, request_kind_id=$1','You cannot change time type for system absence type, ID = $1');
uis.lang_en('htt:htt_api.request_kind_save: cant delete system defined request kind, request_kind_id=$1','You cannot delete system absence type, ID = $1');
uis.lang_en('htt:insert_one_overtime_facts: overtime should less or equal to free time, timesheet_id=$1','Overtime hours does not have to exceed the time out of work schedule, ID = $1');
uis.lang_en('htt:location_defined_by:bssid','BSSID');
uis.lang_en('htt:location_defined_by:gps','Geolocation');
uis.lang_en('htt:location_id_by_code: no data found, location_code=$1','Location not found. Code = $1');
uis.lang_en('htt:location_id_by_name: {error message}$1, location_name=$2','Location not found. Name = $1');
uis.lang_en('htt:mark_type:auto','Auto');
uis.lang_en('htt:mark_type:face','Face Recognition');
uis.lang_en('htt:mark_type:manual','Manual');
uis.lang_en('htt:mark_type:password','Password');
uis.lang_en('htt:mark_type:qr_code','QR Code');
uis.lang_en('htt:mark_type:rfid_card','RFID Card');
uis.lang_en('htt:mark_type:touch','Fingerprint');
uis.lang_en('htt:min','min');
uis.lang_en('htt:person_role:admin','Administrator');
uis.lang_en('htt:person_role:normal','User');
uis.lang_en('htt:person_save: only one photo can be main, person_id=$1, main_photo_count=$2','Cannot save multiple main photos, employee ID=$1, number of main photos=$2');
uis.lang_en('htt:plan_load:extra','Unplanned');
uis.lang_en('htt:plan_load:full','Full');
uis.lang_en('htt:plan_load:part','Partial');
uis.lang_en('htt:protocol:http','HTTP');
uis.lang_en('htt:protocol:https','HTTPS');
uis.lang_en('htt:provider:gps','GPS');
uis.lang_en('htt:provider:network','Network');
uis.lang_en('htt:request_approve: request status must be $1, request_id=$2','You cannot approve request for absence, status must be $1, Request ID = $2');
uis.lang_en('htt:request_complete: request status must be in $1, request_id=$2','You cannot complete request for absence, status must be $1, Request ID = $2');
uis.lang_en('htt:request_delete: request status must be $1, request_id=$2','You cannot delete request for absence, status must be $1, Request ID = $2');
uis.lang_en('htt:request_deny: request status must be in $1, request_id=$2','You cannot disapprove request for absence, status must be $1, Request ID = $2');
uis.lang_en('htt:request_kind_save: time kind is not requestable, request_kind_id=$1, time_kind_id=$2','You cannot save absence type, time type is not requested. ID = $1, Time Type ID = $2');
uis.lang_en('htt:request_reset: request status must be in $1, request_id=$2','You cannot restore request for absence, status must be $1, Request ID = $2');
uis.lang_en('htt:request_save: exceeded request restriction days, request_id=$1, request date=$2, request begin date=$3, request restriction days=$4','You cannot save absence request, days limit exceeded, ID=$1, Request Date = $2, Start = $3, Number of days = $4');
uis.lang_en('htt:request_save: plan load cannot be extra, request_id=$1','Overtime request cannot be created. ID = $1');
uis.lang_en('htt:request_save: request status must be $1, request_id=$2','You cannot save request for absence, status must be $1, Request ID = $2');
uis.lang_en('htt:request_save: request time is wrong, request_id=$1, request_type=$2, begin_time=$3, end_time=$4','You cannot save request for absence, request time is incorrect, ID=$1, Request Type = $2, Start Time = $3, End Time = $4');
uis.lang_en('htt:request_save: request type is $1 while plan load is $2, request_id=$3','You cannot save absence request, request type is $1 and plan overload is $2, ID of absence request = $3');
uis.lang_en('htt:request_save: staff cannot be changed, request_id=$1','You cannot save absence request, employee cannot be changed, ID=$1');
uis.lang_en('htt:request_status:approved','Approved by manager');
uis.lang_en('htt:request_status:completed','Approved');
uis.lang_en('htt:request_status:denied','Disapproved');
uis.lang_en('htt:request_status:new','New');
uis.lang_en('htt:request_type:full_day','Whole Day');
uis.lang_en('htt:request_type:multiple_days','Several Days');
uis.lang_en('htt:request_type:part_of_day','Part of Day');
uis.lang_en('htt:schedule_id_by_code: no data found, schedule_code=$1','Work Schedule not found. Code = $1');
uis.lang_en('htt:schedule_id_by_name: no data found, schedule_name=$1','Work Schedule not found. Name = $1');
uis.lang_en('htt:schedule_kind:custom','Advanced');
uis.lang_en('htt:schedule_kind:flexible','Ordinary');
uis.lang_en('htt:schedule_kind:hourly','Hourly');
uis.lang_en('htt:schedule_kind:periodic','By week day');
uis.lang_en('htt:schedule_kind:weekly','By cycles of random length');
uis.lang_en('htt:schedule_save: begin time and end time should be different, schedule_id=$1, day_no=$2','Start time and end time must be different/ Work Schedule ID = $1, Day No. = $2');
uis.lang_en('htt:schedule_save: cannot change fact settings when schedule is attached to any staff','You cannot change fact settings when work schedule is attached to employees');
uis.lang_en('htt:schedule_save: cannot change shift when schedule is attached to any staff','You cannot change schedule settings when work schedule is attached to employees');
uis.lang_en('htt:schedule_save: cannot change track acceptance borders when schedule is attached to any staff','You cannot change track limit settings when work schedule is attached to employees');
uis.lang_en('htt:schedule_save: cannot change track duration when schedule is attached to any staff','You cannot change track duration settings when work schedule is attached to employees');
uis.lang_en('htt:schedule_save: chosen year and schedule date year are different, year=$1, schedule date=$2','You cannot save day of the year that differs from the year set in work schedule. Year = $1, Date = $2');
uis.lang_en('htt:schedule_save: mark outside of shift, schedule_id=$1, schedule_date=$2','Track is out of working day. Work Schedule ID = $1, Track Date = $2');
uis.lang_en('htt:schedule_save: pattern mark outside of shift, schedule_id=$1, day_no=$2','Track is out of working day. Work Schedule ID = $1, Track Day = $2');
uis.lang_en('htt:schedule_save: pattern marks available only on work days, schedule_id=$1, day_no=$2','Tracks are only available on working days. Work Schedule ID = $1, Day No. = $2');
uis.lang_en('htt:sec','sec');
uis.lang_en('htt:some companies attached this server, initially you must detach companies. cnt: $1','<b>$1</b> companies are already attached to this server. Detach them to attach selected company');
uis.lang_en('htt:terminal_model_save: cannot change terminal model pcode, terminal_model_id=$1','You cannot change terminal system code. Terminal Model ID = $1');
uis.lang_en('htt:the person is not attached to the location where the device is installed, filial_id=$2, location_id=$1, person_id=$3','Employee not attached to location where device is installed. Orgnisation = $2, Location = $1, Employee = $3');
uis.lang_en('htt:time_kind_delete: cannot delete system time kind, time_kind_id=$1','You cannot delete system time type.Working Time Period ID = $1');
uis.lang_en('htt:time_kind_save: cannot change parent_id, time_kind_id=$1','You cannot change the parent of time type. Working Time Period ID = $1');
uis.lang_en('htt:time_kind_save: cannot change plan load of system time kind, time_kind_id=$1','You cannot change plan overload on system time type. Working Time Period ID = $1');
uis.lang_en('htt:time_kind_save: cannot change requestable type of system time kind, time_kind_id=$1','You cannot change requested system time type. Working Time Period ID = $1');
uis.lang_en('htt:time_kind_save: cannot create non requestable time kind, time_kind_id=$1','You cannot create not requested time type. Working Time Period ID = $1');
uis.lang_en('htt:time_kind_save: cannot create non system time kind without parent, time_kind_id=$1','You cannot create non-system time type without parent of it. Working Time Period ID = $1');
uis.lang_en('htt:time_kind_save: cannot set non system parent, time_kind_id=$1','You cannot set non-system time type as a parent of it. Working Time Period ID = $1');
uis.lang_en('htt:time_kind_save: cannot set parent for system time kind, time_kind_id=$1','You cannot set parent for system time type. Working Time Period ID = $1');
uis.lang_en('htt:time_kind_save: cannot set second level parent, time_kind_id=$1','Banned parent, Working Type ID = $1');
uis.lang_en('htt:time_kind_save: time kind and its parent have different plan loads, time_kind_id=$1, parent_id=$2','Time type and its parent have different plan overloads. Working Time Period ID = $1, Parent ID = $2');
uis.lang_en('htt:timesheet_plan: timesheet locked, staff_id=$1, timesheet_date=$2','You cannot change plan of a day, day is blocked. Employee ID = $1, Date = $2');
uis.lang_en('htt:title:request_status:approved','Request approved');
uis.lang_en('htt:title:request_status:completed','Request completed');
uis.lang_en('htt:title:request_status:denied','Request denied');
uis.lang_en('htt:title:request_status:new','Request new');
uis.lang_en('htt:track_delete: timesheet locked, staff_id=$1, timesheet_date=$2','You cannot delete track, day is blocked. Employee ID = $1, Date = $2');
uis.lang_en('htt:track_set_invalid: track is already invalid, track_id=$1','Track already invalid. ID = $1');
uis.lang_en('htt:track_set_valid: track is already valid, track_id=$1','Track already valid . ID = $1');
uis.lang_en('htt:track_status:draft','Draft');
uis.lang_en('htt:track_status:not_used','Not Used');
uis.lang_en('htt:track_status:partially_used','Used Partially');
uis.lang_en('htt:track_status:used','Used');
uis.lang_en('htt:track_type:check','Track');
uis.lang_en('htt:track_type:input','Check In');
uis.lang_en('htt:track_type:merger','Day Fixation');
uis.lang_en('htt:track_type:output','Check Out');
uis.lang_en('htt:track_type:potential','Potential Check Out');
uis.lang_en('htt:track_type:potential gps output','Potential GPS Check Out');
uis.lang_en('htt:work_status:in','At work');
uis.lang_en('htt:work_status:out','Left');
uis.lang_en('htt:work_status:returned','Returned');
uis.lang_en('hzk:001:message: for $1{device_name} model must be selected, device_id: $2','The device <b>Terminal</b> must have a model selected');
uis.lang_en('hzk:001:solution: select model','Select a model and try to save the device');
uis.lang_en('hzk:001:title: model must be selected','Model not specified');
uis.lang_en('hzk:002:message: for $1{device_name} location must be selected, device_id: $2','Device <b>$1</b> must have a location selected');
uis.lang_en('hzk:002:solution: select location','Choose a location and try saving the device');
uis.lang_en('hzk:002:title: location must be selected','Location not specified');
uis.lang_en('hzk:003:message: finger number must be between 0 and 9, person_name: $1, person_id: $2, finger_no: $3','Natural person''s finger number <b>$1</b> is out of range from 0 to 9');
uis.lang_en('hzk:003:solution: change finger number to any number between 0 and 9','Change the finger number to any number between 0 and 9');
uis.lang_en('hzk:004:message: the status of the eval attlog must be $1{status_name}, error_id: $2','Device error must be <b>$1</b>, error id:$2 to handle');
uis.lang_en('hzk:004:solution: do not eval attlog that already evaluated','Skip this error');
uis.lang_en('hzk:004:title: the attlog is already evaluated','Device error already handled');
uis.lang_en('hzk:005:message: mark_type is wrong, error_id: $1, mark_type: $2','Unregistered identity type passed (error id:$1, passed identity type:$2)');
uis.lang_en('hzk:005:solution: 4th item must be one of $1{mark_types}','Set the identification type to one of $1');
uis.lang_en('hzk:005:title: mark_type is not found','Identification type not found');
uis.lang_en('hzk:006:message: $1{person_name} is not attached to $2{location_name}, person_id: $3, location_id: $4, error_id: $5','$1 is not attached to location $2');
uis.lang_en('hzk:006:solution: attach $1{person_name} to $2{location_name} in any filial','Attach employee <b>$1</b> to location $2');
uis.lang_en('hzk:006:title: person is not attached to the location','Not attached location');
uis.lang_en('hzk:007:message: operlog type is wrong, operlog_type: $1','Unregistered operation type passed (passed operation type: $1)');
uis.lang_en('hzk:007:solution: operlog type(2nd item in a row) must be one of $1{operlog_types}','Perform one of the registered operation types $1');
uis.lang_en('hzk:007:title: operlog type is not found','Operation type not found');
uis.lang_en('hzk:008:message: mark_type is wrong, mark_type: $1','Unregistered identity type passed (passed identity type: $1)');
uis.lang_en('hzk:008:solution: 4th item must be one of $1{mark_types}','Set the identification type to one of $1');
uis.lang_en('hzk:008:title: mark_type is not found','Identification type not found');
uis.lang_en('hzk:009:message: sn(serial number) not found','Serial number not found');
uis.lang_en('hzk:009:solution: give serial number to sn','Set serial number');
uis.lang_en('hzk:attlog_error_status: done','Fixed');
uis.lang_en('hzk:attlog_error_status: new','New');
uis.lang_en('hzk:command_state:complete','Completed');
uis.lang_en('hzk:command_state:new','New');
uis.lang_en('hzk:command_state:sent','Sent');
uis.lang_en('hzk:eval_attlog_error: error status must be $1, error_id=$2','Error status must be $1, Error ID = $2');
uis.lang_en('hzk:eval_attlog_error: mark_type not found, error_id=$1, mark_type=$2','Identification type not found, Error ID = $1, Identification Type = $2');
uis.lang_en('hzk:eval_attlog_error: person is not attached to the location, error_id=$1, person_id=$2, location_id=$3','Employee is not attached to location, Error ID = $1, Employee ID = $2, Location ID = $3');
uis.lang_en('hzk:finger: index finger','Index finger');
uis.lang_en('hzk:finger: little finger','Little finger');
uis.lang_en('hzk:finger: middle finger','Middle finger');
uis.lang_en('hzk:finger: ring finger','Ring finger');
uis.lang_en('hzk:finger: thumb','Thumb finger');
uis.lang_en('hzk:hand_side: left','Left hand');
uis.lang_en('hzk:hand_side: right','Right hand');
uis.lang_en('hzk:person_fprint_save: finger nomber must be between 1 and 10, person_id=$1, finger_no=$2','Fingers Qty must be in the rate of 1 to 10. Employee ID = $1, Fingerprint Number = $2');
uis.lang_en('hzk:person_fprint_save: finger number must be between 0 and 9, person_id=$1, finger_no=$2','Finger number must be in 0 and 9 interval. Natural Person ID = $1, Finger Number = $2');
commit;
end;
/
