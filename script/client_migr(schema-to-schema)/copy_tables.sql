whenever sqlerror exit sql.sqlcode;
set define on;
set serveroutput on;
undefine company_id
define company_id=&company_id

prompt copying table data from old schema to a new one for company_id: &company_id
prompt ==== ** BIRUNI_FILES ** ====
insert into BIRUNI_FILES (SHA, CREATED_ON, FILE_SIZE, FILE_NAME, CONTENT_TYPE) select SHA, CREATED_ON, FILE_SIZE, FILE_NAME, CONTENT_TYPE from OLD_BIRUNI_FILES t where exists (select 1 from OLD_MD_COMPANY_FILES k where k.Company_Id = &company_id and k.Sha = t.Sha);
commit;
prompt ==== ** HPD_JOURNAL_TYPES ** ====
insert into HPD_JOURNAL_TYPES (COMPANY_ID, JOURNAL_TYPE_ID, NAME, ORDER_NO, PCODE) select COMPANY_ID, JOURNAL_TYPE_ID, NAME, ORDER_NO, PCODE from OLD_HPD_JOURNAL_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_PLAN_GROUPS ** ====
insert into HPER_PLAN_GROUPS (COMPANY_ID, FILIAL_ID, PLAN_GROUP_ID, NAME, STATE, ORDER_NO) select COMPANY_ID, FILIAL_ID, PLAN_GROUP_ID, NAME, STATE, ORDER_NO from OLD_HPER_PLAN_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_BOOK_TYPES ** ====
insert into HPR_BOOK_TYPES (COMPANY_ID, BOOK_TYPE_ID, NAME, ORDER_NO, PCODE) select COMPANY_ID, BOOK_TYPE_ID, NAME, ORDER_NO, PCODE from OLD_HPR_BOOK_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_OPER_GROUPS ** ====
insert into HPR_OPER_GROUPS (COMPANY_ID, OPER_GROUP_ID, OPERATION_KIND, NAME, ESTIMATION_TYPE, ESTIMATION_FORMULA, PCODE, MODIFIED_ID) select COMPANY_ID, OPER_GROUP_ID, OPERATION_KIND, NAME, ESTIMATION_TYPE, ESTIMATION_FORMULA, PCODE, MODIFIED_ID from OLD_HPR_OPER_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_CACHED_CONTRACT_ITEM_NAMES ** ====
insert into HREF_CACHED_CONTRACT_ITEM_NAMES (COMPANY_ID, NAME) select COMPANY_ID, NAME from OLD_HREF_CACHED_CONTRACT_ITEM_NAMES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_CANDIDATE_REF_SETTINGS ** ====
insert into HREF_CANDIDATE_REF_SETTINGS (COMPANY_ID, FILIAL_ID, REGION, ADDRESS, EXPERIENCE, SOURCE, RECOMMENDATION, CV) select COMPANY_ID, FILIAL_ID, REGION, ADDRESS, EXPERIENCE, SOURCE, RECOMMENDATION, CV from OLD_HREF_CANDIDATE_REF_SETTINGS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_ROBOT_TURNOVER ** ====
insert into HRM_ROBOT_TURNOVER (COMPANY_ID, FILIAL_ID, ROBOT_ID, PERIOD, PLANED_FTE, BOOKED_FTE, OCCUPIED_FTE) select COMPANY_ID, FILIAL_ID, ROBOT_ID, PERIOD, PLANED_FTE, BOOKED_FTE, OCCUPIED_FTE from OLD_HRM_ROBOT_TURNOVER t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_SETTINGS ** ====
insert into HRM_SETTINGS (COMPANY_ID, FILIAL_ID, POSITION_ENABLE, POSITION_CHECK, POSITION_BOOKING, POSITION_HISTORY, PARTTIME_ENABLE, RANK_ENABLE, WAGE_SCALE_ENABLE, AUTOGEN_STAFF_NUMBER) select COMPANY_ID, FILIAL_ID, POSITION_ENABLE, POSITION_CHECK, POSITION_BOOKING, POSITION_HISTORY, PARTTIME_ENABLE, RANK_ENABLE, WAGE_SCALE_ENABLE, AUTOGEN_STAFF_NUMBER from OLD_HRM_SETTINGS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_ACMS_SERVERS ** ====
insert into HTT_ACMS_SERVERS (SERVER_ID, SECRET_CODE, NAME, URL, ORDER_NO) select SERVER_ID, SECRET_CODE, NAME, URL, ORDER_NO from OLD_HTT_ACMS_SERVERS t;
commit;
prompt ==== ** HTT_PIN_LOCKS ** ====
insert into HTT_PIN_LOCKS (COMPANY_ID) select COMPANY_ID from OLD_HTT_PIN_LOCKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_TEMPLATES ** ====
insert into HTT_SCHEDULE_TEMPLATES (TEMPLATE_ID, NAME, DESCRIPTION, SCHEDULE_KIND, ALL_DAYS_EQUAL, COUNT_DAYS, SHIFT, INPUT_ACCEPTANCE, OUTPUT_ACCEPTANCE, TRACK_DURATION, COUNT_LATE, COUNT_EARLY, COUNT_LACK, TAKE_HOLIDAYS, TAKE_NONWORKING, ORDER_NO, STATE, CODE) select TEMPLATE_ID, NAME, DESCRIPTION, SCHEDULE_KIND, ALL_DAYS_EQUAL, COUNT_DAYS, SHIFT, INPUT_ACCEPTANCE, OUTPUT_ACCEPTANCE, TRACK_DURATION, COUNT_LATE, COUNT_EARLY, COUNT_LACK, TAKE_HOLIDAYS, TAKE_NONWORKING, ORDER_NO, STATE, CODE from OLD_HTT_SCHEDULE_TEMPLATES t;
commit;
prompt ==== ** HZK_ERRORS ** ====
insert into HZK_ERRORS (ERROR, CREATED_ON) select ERROR, CREATED_ON from OLD_HZK_ERRORS t;
commit;
prompt ==== ** HZK_MIGR_FPRINTS ** ====
insert into HZK_MIGR_FPRINTS (COMPANY_ID, DEVICE_ID, PIN, FINGER_NO, TMP) select COMPANY_ID, DEVICE_ID, PIN, FINGER_NO, TMP from OLD_HZK_MIGR_FPRINTS t where t.company_id = &company_id;
commit;
prompt ==== ** KAUTH_API_CLIENT_CREDENTIALS ** ====
insert into KAUTH_API_CLIENT_CREDENTIALS (CODE, URL, CLIENT_ID, CLIENT_SECRET) select CODE, URL, CLIENT_ID, CLIENT_SECRET from OLD_KAUTH_API_CLIENT_CREDENTIALS t;
commit;
prompt ==== ** KAUTH_CLIENT_GROUPS ** ====
insert into KAUTH_CLIENT_GROUPS (GROUP_CODE, MEMBERSHIP_INFO_PROCEDURE) select GROUP_CODE, MEMBERSHIP_INFO_PROCEDURE from OLD_KAUTH_CLIENT_GROUPS t;
commit;
prompt ==== ** KAUTH_SESSIONS ** ====
insert into KAUTH_SESSIONS (COMPANY_ID, SESSION_ID, USER_ID, LOGIN, IP_ADDRESS, CREATED_ON, CLOSED_ON, HOST_NAME, HOST_USER) select COMPANY_ID, SESSION_ID, USER_ID, LOGIN, IP_ADDRESS, CREATED_ON, CLOSED_ON, HOST_NAME, HOST_USER from OLD_KAUTH_SESSIONS t where t.company_id = &company_id;
commit;
prompt ==== ** KER_GEN_USER_TEMPLATES ** ====
insert into KER_GEN_USER_TEMPLATES (COMPANY_ID, USER_ID, FILIAL_ID, TEMPLATE_ID) select COMPANY_ID, USER_ID, FILIAL_ID, TEMPLATE_ID from OLD_KER_GEN_USER_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** KL_LICENSE_BALANCES ** ====
insert into KL_LICENSE_BALANCES (COMPANY_ID, LICENSE_CODE, BALANCE_DATE, AVAILABLE_AMOUNT, USED_AMOUNT, REQUIRED_AMOUNT) select COMPANY_ID, LICENSE_CODE, BALANCE_DATE, AVAILABLE_AMOUNT, USED_AMOUNT, REQUIRED_AMOUNT from OLD_KL_LICENSE_BALANCES t where t.company_id = &company_id;
commit;
prompt ==== ** KL_LICENSE_LOCK_HOLDERS ** ====
insert into KL_LICENSE_LOCK_HOLDERS (COMPANY_ID, HOLDER_ID) select COMPANY_ID, HOLDER_ID from OLD_KL_LICENSE_LOCK_HOLDERS t where t.company_id = &company_id;
commit;
prompt ==== ** KL_SUBSCRIPTIONS ** ====
insert into KL_SUBSCRIPTIONS (COMPANY_ID, PROJECT_CODE, END_DATE) select COMPANY_ID, PROJECT_CODE, END_DATE from OLD_KL_SUBSCRIPTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANIES ** ====
insert into MD_COMPANIES (COMPANY_ID, NAME, STATE, CODE, LANG_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, NAME, STATE, CODE, LANG_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_COMPANIES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_ACTUAL_AUDITS ** ====
insert into MD_COMPANY_ACTUAL_AUDITS (COMPANY_ID, TABLE_NAME) select COMPANY_ID, TABLE_NAME from OLD_MD_COMPANY_ACTUAL_AUDITS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_PRIVATE_FORMS ** ====
insert into MD_COMPANY_PRIVATE_FORMS (COMPANY_ID, FORM) select COMPANY_ID, FORM from OLD_MD_COMPANY_PRIVATE_FORMS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_SMTP_SERVERS ** ====
insert into MD_COMPANY_SMTP_SERVERS (COMPANY_ID, HOST, PORT, USERNAME, PASSWORD, TRANSPORT_STRATEGY) select COMPANY_ID, HOST, PORT, USERNAME, PASSWORD, TRANSPORT_STRATEGY from OLD_MD_COMPANY_SMTP_SERVERS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_TEMPLATE_GROUPS ** ====
insert into MD_COMPANY_TEMPLATE_GROUPS (TEMPLATE_GROUP_ID, NAME, SELECT_KIND, STATE, PCODE) select TEMPLATE_GROUP_ID, NAME, SELECT_KIND, STATE, PCODE from OLD_MD_COMPANY_TEMPLATE_GROUPS t;
commit;
prompt ==== ** MD_CUSTOM_FORM_KINDS ** ====
insert into MD_CUSTOM_FORM_KINDS (COMPANY_ID, FORM, KIND) select COMPANY_ID, FORM, KIND from OLD_MD_CUSTOM_FORM_KINDS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_CUSTOM_HTML_TRANSLATIONS ** ====
insert into MD_CUSTOM_HTML_TRANSLATIONS (CODE, MESSAGE, PATH_CODE) select CODE, MESSAGE, PATH_CODE from OLD_MD_CUSTOM_HTML_TRANSLATIONS t;
commit;
prompt ==== ** MDEAL_DW_DEBTORS ** ====
insert into MDEAL_DW_DEBTORS (COMPANY_ID, FILIAL_ID, PERSON_ID, DEAL_ID, CURRENCY_ID, PAYMENT_TYPE_ID, CONTRACT_ID, SUBFILIAL_ID, EXPIRY_DATE_ID, AMOUNT, AMOUNT_BASE) select COMPANY_ID, FILIAL_ID, PERSON_ID, DEAL_ID, CURRENCY_ID, PAYMENT_TYPE_ID, CONTRACT_ID, SUBFILIAL_ID, EXPIRY_DATE_ID, AMOUNT, AMOUNT_BASE from OLD_MDEAL_DW_DEBTORS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_DW_ORDER_CHARGED_PRODUCTS ** ====
insert into MDEAL_DW_ORDER_CHARGED_PRODUCTS (COMPANY_ID, FILIAL_ID, PRODUCT_UNIT_ID, DEAL_ID, CARD_ID, EXPIRY_DATE_ID, BATCH_NUMBER, PRICE, QUANTITY, AMOUNT, AMOUNT_BASE) select COMPANY_ID, FILIAL_ID, PRODUCT_UNIT_ID, DEAL_ID, CARD_ID, EXPIRY_DATE_ID, BATCH_NUMBER, PRICE, QUANTITY, AMOUNT, AMOUNT_BASE from OLD_MDEAL_DW_ORDER_CHARGED_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_DW_PERSON_PRODUCT_RECOMS ** ====
insert into MDEAL_DW_PERSON_PRODUCT_RECOMS (COMPANY_ID, FILIAL_ID, PERSON_ID, PRODUCT_ID, INVENTORY_KIND, CREATED_DATE) select COMPANY_ID, FILIAL_ID, PERSON_ID, PRODUCT_ID, INVENTORY_KIND, CREATED_DATE from OLD_MDEAL_DW_PERSON_PRODUCT_RECOMS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_DW_PERSON_PRODUCT_TYPE_RECOMS ** ====
insert into MDEAL_DW_PERSON_PRODUCT_TYPE_RECOMS (COMPANY_ID, FILIAL_ID, PERSON_ID, PRODUCT_GROUP_ID, PRODUCT_TYPE_ID, CREATED_DATE) select COMPANY_ID, FILIAL_ID, PERSON_ID, PRODUCT_GROUP_ID, PRODUCT_TYPE_ID, CREATED_DATE from OLD_MDEAL_DW_PERSON_PRODUCT_TYPE_RECOMS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_GARBAGE_FORMS ** ====
insert into MD_GARBAGE_FORMS (PROJECT_CODE, FORM) select PROJECT_CODE, FORM from OLD_MD_GARBAGE_FORMS t;
commit;
prompt ==== ** MD_GEN_COMPANY_FORMS ** ====
insert into MD_GEN_COMPANY_FORMS (COMPANY_ID, PROJECT_CODE, FILIAL_ID, FORM) select COMPANY_ID, PROJECT_CODE, FILIAL_ID, FORM from OLD_MD_GEN_COMPANY_FORMS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_GEN_USER_FORM_ACTIONS ** ====
insert into MD_GEN_USER_FORM_ACTIONS (COMPANY_ID, USER_ID, FILIAL_ID, FORM, ACTION_KEY, TOUCHED) select COMPANY_ID, USER_ID, FILIAL_ID, FORM, ACTION_KEY, TOUCHED from OLD_MD_GEN_USER_FORM_ACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_GEN_USER_PROJECTS ** ====
insert into MD_GEN_USER_PROJECTS (COMPANY_ID, USER_ID, PROJECT_CODE, FILIAL_ID, TOUCHED) select COMPANY_ID, USER_ID, PROJECT_CODE, FILIAL_ID, TOUCHED from OLD_MD_GEN_USER_PROJECTS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_GEN_USER_REVOKED_COLUMNS ** ====
insert into MD_GEN_USER_REVOKED_COLUMNS (COMPANY_ID, USER_ID, FILIAL_ID, FORM, GRID, GRID_COLUMN, TOUCHED) select COMPANY_ID, USER_ID, FILIAL_ID, FORM, GRID, GRID_COLUMN, TOUCHED from OLD_MD_GEN_USER_REVOKED_COLUMNS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_MESSENGER_ACTIONS ** ====
insert into MD_MESSENGER_ACTIONS (PROJECT_CODE, MENU_ID, FORM, ACTION_KEY, PARAM_PROCEDURE, ORDER_NO) select PROJECT_CODE, MENU_ID, FORM, ACTION_KEY, PARAM_PROCEDURE, ORDER_NO from OLD_MD_MESSENGER_ACTIONS t;
commit;
prompt ==== ** MD_MESSENGER_MENUS ** ====
insert into MD_MESSENGER_MENUS (PROJECT_CODE, MENU_ID, NAME, PARENT_ID, ORDER_NO) select PROJECT_CODE, MENU_ID, NAME, PARENT_ID, ORDER_NO from OLD_MD_MESSENGER_MENUS t;
commit;
prompt ==== ** MD_MESSENGERS ** ====
insert into MD_MESSENGERS (MESSENGER_CODE, NAME) select MESSENGER_CODE, NAME from OLD_MD_MESSENGERS t;
commit;
prompt ==== ** MD_ONEID_SESSION_ORGANIZATIONS ** ====
insert into MD_ONEID_SESSION_ORGANIZATIONS (SESSION_CODE, ORGANIZATION_TIN, SESSION_KIND) select SESSION_CODE, ORGANIZATION_TIN, SESSION_KIND from OLD_MD_ONEID_SESSION_ORGANIZATIONS t;
commit;
prompt ==== ** MD_ONEID_USERS ** ====
insert into MD_ONEID_USERS (PIN, VALID, TIN, PASSPORT_NUMBER, FIRST_NAME, LAST_NAME, MIDDLE_NAME, LOGIN_ONEID, EMAIL, MOBILE_PHONE, BIRTHDAY, PERMANENT_ADDRESS, TEMPORARY_ADDRESS, GENDER, BIRTH_PLACE, BIRTH_COUNTRY, NATIONALITY, CITIZENSHIP, PASSPORT_ISSUED_BY, PASSPORT_ISSUED_DATE, PASSPORT_EXPIRED_DATE) select PIN, VALID, TIN, PASSPORT_NUMBER, FIRST_NAME, LAST_NAME, MIDDLE_NAME, LOGIN_ONEID, EMAIL, MOBILE_PHONE, BIRTHDAY, PERMANENT_ADDRESS, TEMPORARY_ADDRESS, GENDER, BIRTH_PLACE, BIRTH_COUNTRY, NATIONALITY, CITIZENSHIP, PASSPORT_ISSUED_BY, PASSPORT_ISSUED_DATE, PASSPORT_EXPIRED_DATE from OLD_MD_ONEID_USERS t;
commit;
prompt ==== ** MD_OVERVIEW_AUDITS ** ====
insert into MD_OVERVIEW_AUDITS (COMPANY_ID, AUDIT_ID, FILIAL_ID, EVENT, AUDIT_DATE, SOURCE_PROJECT_CODE, TABLE_NAME, SOURCE_KEY, CONTEXT_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, AUDIT_ID, FILIAL_ID, EVENT, AUDIT_DATE, SOURCE_PROJECT_CODE, TABLE_NAME, SOURCE_KEY, CONTEXT_ID, CREATED_BY, CREATED_ON from OLD_MD_OVERVIEW_AUDITS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_RECOVER_PASSWORD_CODES ** ====
insert into MD_RECOVER_PASSWORD_CODES (COMPANY_ID, USER_ID, TOKEN, CODE, USED, CODE_EXPIRED_ON) select COMPANY_ID, USER_ID, TOKEN, CODE, USED, CODE_EXPIRED_ON from OLD_MD_RECOVER_PASSWORD_CODES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_SEQUENCES ** ====
insert into MD_SEQUENCES (COMPANY_ID, FILIAL_ID, CODE, VALUE) select COMPANY_ID, FILIAL_ID, CODE, VALUE from OLD_MD_SEQUENCES t where t.company_id = &company_id;
commit;
prompt ==== ** MF_GEN_SHARED_FOLDERS ** ====
insert into MF_GEN_SHARED_FOLDERS (COMPANY_ID, FILE_ID, USER_ID, ACCESS_KIND, IS_MAIN) select COMPANY_ID, FILE_ID, USER_ID, ACCESS_KIND, IS_MAIN from OLD_MF_GEN_SHARED_FOLDERS t where t.company_id = &company_id;
commit;
prompt ==== ** MFK_DOCUMENTS ** ====
insert into MFK_DOCUMENTS (COMPANY_ID, FILIAL_ID, DOCUMENT_TABLE, DOCUMENT_ID, EXTERNAL_ID, EXTERNAL_NAME, ERROR_MESSAGE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, FILIAL_ID, DOCUMENT_TABLE, DOCUMENT_ID, EXTERNAL_ID, EXTERNAL_NAME, ERROR_MESSAGE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MFK_DOCUMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MFK_DOCUMENT_STATUSES ** ====
insert into MFK_DOCUMENT_STATUSES (COMPANY_ID, EXTERNAL_ID, DESCRIPTION, STATUS, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, EXTERNAL_ID, DESCRIPTION, STATUS, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MFK_DOCUMENT_STATUSES t where t.company_id = &company_id;
commit;
prompt ==== ** MFK_LOGS ** ====
insert into MFK_LOGS (COMPANY_ID, FILIAL_ID, LOG_ID, LOG_TYPE, DATA_FORMAT, LOG_DATA, CREATED_ON) select COMPANY_ID, FILIAL_ID, LOG_ID, LOG_TYPE, DATA_FORMAT, LOG_DATA, CREATED_ON from OLD_MFK_LOGS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_ACCOUNTS ** ====
insert into MK_ACCOUNTS (COMPANY_ID, FILIAL_ID, COA_ID, REF_SET, CURRENCY_ID, PERSON_ID, CONTRACT_ID, PAYMENT_TYPE_ID, WAREHOUSE_ID, PRODUCT_ID, PRODUCT_CONDITION_ID, PRICE, BATCH_NUMBER, CARD_ID, REF_DATE_ID, CASHBOX_ID, BANK_ACCOUNT_ID, INCOME_ARTICLE_ID, EXPENSE_ARTICLE_ID, VAN_ID, EXTRA_COST_ID, PURCHASE_ID, INPUT_ID, RETURN_SUPPLIER_ID, WRITEOFF_ID, STOCKTAKING_ID, DEAL_ID, SUBFILIAL_ID, SERIAL_ID, INVENTORY_PAYABLE_ID, INIT_CLIENT_INVENTORY_BALANCE_ID) select COMPANY_ID, FILIAL_ID, COA_ID, REF_SET, CURRENCY_ID, PERSON_ID, CONTRACT_ID, PAYMENT_TYPE_ID, WAREHOUSE_ID, PRODUCT_ID, PRODUCT_CONDITION_ID, PRICE, BATCH_NUMBER, CARD_ID, REF_DATE_ID, CASHBOX_ID, BANK_ACCOUNT_ID, INCOME_ARTICLE_ID, EXPENSE_ARTICLE_ID, VAN_ID, EXTRA_COST_ID, PURCHASE_ID, INPUT_ID, RETURN_SUPPLIER_ID, WRITEOFF_ID, STOCKTAKING_ID, DEAL_ID, SUBFILIAL_ID, SERIAL_ID, INVENTORY_PAYABLE_ID, INIT_CLIENT_INVENTORY_BALANCE_ID from OLD_MK_ACCOUNTS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_BAN_PERIODS ** ====
insert into MK_BAN_PERIODS (COMPANY_ID, FILIAL_ID, PERIOD, LAST_CLOSE_PERIOD) select COMPANY_ID, FILIAL_ID, PERIOD, LAST_CLOSE_PERIOD from OLD_MK_BAN_PERIODS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_JOURNALS ** ====
insert into MK_JOURNALS (COMPANY_ID, JOURNAL_ID, FILIAL_ID, JOURNAL_CODE, SOURCE_TABLE, SOURCE_ID, CHECK_OVERDRAFT, LAST_MODIFIED, TRACE_SESSION, TRACE_URI) select COMPANY_ID, JOURNAL_ID, FILIAL_ID, JOURNAL_CODE, SOURCE_TABLE, SOURCE_ID, CHECK_OVERDRAFT, LAST_MODIFIED, TRACE_SESSION, TRACE_URI from OLD_MK_JOURNALS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_LEDGER ** ====
insert into MK_LEDGER (COMPANY_ID, FILIAL_ID, JOURNAL_ID, TRANS_NO, PAGE_CODE, TRANS_DATE, DC_SIGN, COA_ID, REF_SET, CURRENCY_ID, LINK_REF_SET, OPPOSITE_COA_ID, OPPOSITE_REF_SET, OPPOSITE_CURRENCY_ID, OPPOSITE_LINK_REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, CREATED_ON, TAG, NOTE) select COMPANY_ID, FILIAL_ID, JOURNAL_ID, TRANS_NO, PAGE_CODE, TRANS_DATE, DC_SIGN, COA_ID, REF_SET, CURRENCY_ID, LINK_REF_SET, OPPOSITE_COA_ID, OPPOSITE_REF_SET, OPPOSITE_CURRENCY_ID, OPPOSITE_LINK_REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, CREATED_ON, TAG, NOTE from OLD_MK_LEDGER t where t.company_id = &company_id;
commit;
prompt ==== ** MK_PRICES ** ====
insert into MK_PRICES (COMPANY_ID, PRICE_ID, NAME) select COMPANY_ID, PRICE_ID, NAME from OLD_MK_PRICES t where t.company_id = &company_id;
commit;
prompt ==== ** MKR_DW_PERSON_BALANCES ** ====
insert into MKR_DW_PERSON_BALANCES (COMPANY_ID, FILIAL_ID, COA_ID, PERSON_ID, CURRENCY_ID, PAYMENT_TYPE_ID, CONTRACT_ID, SUBFILIAL_ID, AMOUNT) select COMPANY_ID, FILIAL_ID, COA_ID, PERSON_ID, CURRENCY_ID, PAYMENT_TYPE_ID, CONTRACT_ID, SUBFILIAL_ID, AMOUNT from OLD_MKR_DW_PERSON_BALANCES t where t.company_id = &company_id;
commit;
prompt ==== ** MK_TURNOVER ** ====
insert into MK_TURNOVER (COMPANY_ID, FILIAL_ID, COA_ID, REF_SET, CURRENCY_ID, PERIOD, DEBIT_QUANTITY, DEBIT_AMOUNT, DEBIT_AMOUNT_BASE, CREDIT_QUANTITY, CREDIT_AMOUNT, CREDIT_AMOUNT_BASE) select COMPANY_ID, FILIAL_ID, COA_ID, REF_SET, CURRENCY_ID, PERIOD, DEBIT_QUANTITY, DEBIT_AMOUNT, DEBIT_AMOUNT_BASE, CREDIT_QUANTITY, CREDIT_AMOUNT, CREDIT_AMOUNT_BASE from OLD_MK_TURNOVER t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_CARDS ** ====
insert into MKW_CARDS (COMPANY_ID, CARD_ID, CARD_CODE) select COMPANY_ID, CARD_ID, CARD_CODE from OLD_MKW_CARDS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_DW_INVENTORY_BALANCES ** ====
insert into MKW_DW_INVENTORY_BALANCES (COMPANY_ID, FILIAL_ID, CURRENCY_ID, INVENTORY_KIND, WAREHOUSE_ID, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, BATCH_NUMBER, QUANT_FREE, QUANT_BOOKED, QUANT, AMOUNT_FREE, AMOUNT_BOOKED, AMOUNT) select COMPANY_ID, FILIAL_ID, CURRENCY_ID, INVENTORY_KIND, WAREHOUSE_ID, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, BATCH_NUMBER, QUANT_FREE, QUANT_BOOKED, QUANT, AMOUNT_FREE, AMOUNT_BOOKED, AMOUNT from OLD_MKW_DW_INVENTORY_BALANCES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_DW_SERIALS ** ====
insert into MKW_DW_SERIALS (COMPANY_ID, FILIAL_ID, SERIAL_ID, PRODUCT_ID, COA_ID, PERSON_ID, WAREHOUSE_ID, CARD_ID, EXPIRY_DATE_ID, BATCH_NUMBER, QUANTITY, QUANTITY_FREE, QUANTITY_BOOKED, DEAL_ID, INIT_CLIENT_INVENTORY_BALANCE_ID) select COMPANY_ID, FILIAL_ID, SERIAL_ID, PRODUCT_ID, COA_ID, PERSON_ID, WAREHOUSE_ID, CARD_ID, EXPIRY_DATE_ID, BATCH_NUMBER, QUANTITY, QUANTITY_FREE, QUANTITY_BOOKED, DEAL_ID, INIT_CLIENT_INVENTORY_BALANCE_ID from OLD_MKW_DW_SERIALS t where t.company_id = &company_id;
commit;
prompt ==== ** MPR_SETTINGS ** ====
insert into MPR_SETTINGS (COMPANY_ID, FILIAL_ID, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE) select COMPANY_ID, FILIAL_ID, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE from OLD_MPR_SETTINGS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_FUNCTIONS ** ====
insert into MR_FUNCTIONS (FUNCTION_ID, PROJECT_CODE, ITEM_ORDER_CHANGEABLE) select FUNCTION_ID, PROJECT_CODE, ITEM_ORDER_CHANGEABLE from OLD_MR_FUNCTIONS t;
commit;
prompt ==== ** MT_DEVICES ** ====
insert into MT_DEVICES (COMPANY_ID, DEVICE_ID, NAME, DEVICE_CODE, DEVICE_VERSION, DEVICE_SDK, VERSION_CODE, VERSION_NAME, DEVICE_KIND, STATE, PUSH_TOKEN) select COMPANY_ID, DEVICE_ID, NAME, DEVICE_CODE, DEVICE_VERSION, DEVICE_SDK, VERSION_CODE, VERSION_NAME, DEVICE_KIND, STATE, PUSH_TOKEN from OLD_MT_DEVICES t where t.company_id = &company_id;
commit;
prompt ==== ** MX_JOURNALS ** ====
insert into MX_JOURNALS (COMPANY_ID, FILIAL_ID, SOURCE_TABLE, SOURCE_ID, EXTERNAL_ID) select COMPANY_ID, FILIAL_ID, SOURCE_TABLE, SOURCE_ID, EXTERNAL_ID from OLD_MX_JOURNALS t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_PLAN_TYPES ** ====
insert into HPER_PLAN_TYPES (COMPANY_ID, FILIAL_ID, PLAN_TYPE_ID, NAME, PLAN_GROUP_ID, CALC_KIND, WITH_PART, STATE, CODE, ORDER_NO, C_DIVISIONS_EXIST) select COMPANY_ID, FILIAL_ID, PLAN_TYPE_ID, NAME, PLAN_GROUP_ID, CALC_KIND, WITH_PART, STATE, CODE, ORDER_NO, C_DIVISIONS_EXIST from OLD_HPER_PLAN_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_BOOK_TYPE_BINDS ** ====
insert into HPR_BOOK_TYPE_BINDS (COMPANY_ID, BOOK_TYPE_ID, OPER_GROUP_ID) select COMPANY_ID, BOOK_TYPE_ID, OPER_GROUP_ID from OLD_HPR_BOOK_TYPE_BINDS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_COMPANY_ACMS_SERVERS ** ====
insert into HTT_COMPANY_ACMS_SERVERS (COMPANY_ID, SERVER_ID) select COMPANY_ID, SERVER_ID from OLD_HTT_COMPANY_ACMS_SERVERS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_TEMPLATE_DAYS ** ====
insert into HTT_SCHEDULE_TEMPLATE_DAYS (TEMPLATE_ID, DAY_NO, DAY_KIND, PLAN_TIME, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME) select TEMPLATE_ID, DAY_NO, DAY_KIND, PLAN_TIME, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME from OLD_HTT_SCHEDULE_TEMPLATE_DAYS t;
commit;
prompt ==== ** KAUTH_API_CLIENT_TOKENS ** ====
insert into KAUTH_API_CLIENT_TOKENS (COMPANY_ID, CODE, ACCESS_TOKEN, REFRESH_TOKEN) select COMPANY_ID, CODE, ACCESS_TOKEN, REFRESH_TOKEN from OLD_KAUTH_API_CLIENT_TOKENS t where t.company_id = &company_id;
commit;
prompt ==== ** KAUTH_CLIENT_DEFAULT_ROLES ** ====
insert into KAUTH_CLIENT_DEFAULT_ROLES (GROUP_CODE, ROLE_PCODE) select GROUP_CODE, ROLE_PCODE from OLD_KAUTH_CLIENT_DEFAULT_ROLES t;
commit;
prompt ==== ** KAUTH_CLIENTS ** ====
insert into KAUTH_CLIENTS (CLIENT_ID, CLIENT_SECRET, NAME, KIND, GROUP_CODE, CREATED_ON) select CLIENT_ID, CLIENT_SECRET, NAME, KIND, GROUP_CODE, CREATED_ON from OLD_KAUTH_CLIENTS t;
commit;
prompt ==== ** MD_COMPANY_TEMPLATES ** ====
insert into MD_COMPANY_TEMPLATES (TEMPLATE_ID, TEMPLATE_GROUP_ID, NAME, STATE, PCODE) select TEMPLATE_ID, TEMPLATE_GROUP_ID, NAME, STATE, PCODE from OLD_MD_COMPANY_TEMPLATES t;
commit;
prompt ==== ** MD_LICENSE_FORMS ** ====
insert into MD_LICENSE_FORMS (LICENSE_CODE, FORM) select LICENSE_CODE, FORM from OLD_MD_LICENSE_FORMS t;
commit;
prompt ==== ** MD_ONEID_USER_ORGANIZATIONS ** ====
insert into MD_ONEID_USER_ORGANIZATIONS (ORGANIZATION_TIN, USER_PIN, ORGANIZATION_NAME) select ORGANIZATION_TIN, USER_PIN, ORGANIZATION_NAME from OLD_MD_ONEID_USER_ORGANIZATIONS t;
commit;
prompt ==== ** MD_PERSONS ** ====
insert into MD_PERSONS (COMPANY_ID, PERSON_ID, NAME, PERSON_KIND, EMAIL, PHONE, PHOTO_SHA, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, PERSON_ID, NAME, PERSON_KIND, EMAIL, PHONE, PHOTO_SHA, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_MD_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_REGIONS ** ====
insert into MD_REGIONS (COMPANY_ID, REGION_ID, NAME, REGION_KIND, STATE, PARENT_ID, LATLNG, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, REGION_ID, NAME, REGION_KIND, STATE, PARENT_ID, LATLNG, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_MD_REGIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_TRANSACTIONS ** ====
insert into MK_TRANSACTIONS (COMPANY_ID, FILIAL_ID, JOURNAL_ID, TRANS_NO, PAGE_CODE, TRANS_DATE, DEBIT_COA_ID, DEBIT_REF_SET, DEBIT_CURRENCY_ID, DEBIT_LINK_REF_SET, CREDIT_COA_ID, CREDIT_REF_SET, CREDIT_CURRENCY_ID, CREDIT_LINK_REF_SET, CURRENCY_ID, QUANTITY, AMOUNT, AMOUNT_BASE, CREATED_ON, TAG, NOTE) select COMPANY_ID, FILIAL_ID, JOURNAL_ID, TRANS_NO, PAGE_CODE, TRANS_DATE, DEBIT_COA_ID, DEBIT_REF_SET, DEBIT_CURRENCY_ID, DEBIT_LINK_REF_SET, CREDIT_COA_ID, CREDIT_REF_SET, CREDIT_CURRENCY_ID, CREDIT_LINK_REF_SET, CURRENCY_ID, QUANTITY, AMOUNT, AMOUNT_BASE, CREATED_ON, TAG, NOTE from OLD_MK_TRANSACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_FUNCTION_ITEMS ** ====
insert into MR_FUNCTION_ITEMS (FUNCTION_ID, PROJECT_CODE, ITEM_ID, ORDER_NO, PARENT_ID, REQUIRED_ONCE_MONTH) select FUNCTION_ID, PROJECT_CODE, ITEM_ID, ORDER_NO, PARENT_ID, REQUIRED_ONCE_MONTH from OLD_MR_FUNCTION_ITEMS t;
commit;
prompt ==== ** HTT_SCHEDULE_TEMPLATE_MARKS ** ====
insert into HTT_SCHEDULE_TEMPLATE_MARKS (TEMPLATE_ID, DAY_NO, BEGIN_TIME, END_TIME) select TEMPLATE_ID, DAY_NO, BEGIN_TIME, END_TIME from OLD_HTT_SCHEDULE_TEMPLATE_MARKS t;
commit;
prompt ==== ** KL_LICENSE_HOLDERS ** ====
insert into KL_LICENSE_HOLDERS (COMPANY_ID, LICENSE_CODE, HOLD_DATE, HOLDER_ID, LICENSED) select COMPANY_ID, LICENSE_CODE, HOLD_DATE, HOLDER_ID, LICENSED from OLD_KL_LICENSE_HOLDERS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_TEMPLATE_BINDS ** ====
insert into MD_COMPANY_TEMPLATE_BINDS (COMPANY_ID, TEMPLATE_ID) select COMPANY_ID, TEMPLATE_ID from OLD_MD_COMPANY_TEMPLATE_BINDS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_OAUTH2_SERVERS ** ====
insert into MD_OAUTH2_SERVERS (COMPANY_ID, SERVER_CODE, CREATE_USER) select COMPANY_ID, SERVER_CODE, CREATE_USER from OLD_MD_OAUTH2_SERVERS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USERS ** ====
insert into MD_USERS (COMPANY_ID, USER_ID, NAME, LOGIN, PASSWORD, STATE, USER_KIND, GENDER, MANAGER_ID, TIMEZONE_CODE, PASSWORD_CHANGED_ON, PASSWORD_CHANGE_REQUIRED, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, USER_ID, NAME, LOGIN, PASSWORD, STATE, USER_KIND, GENDER, MANAGER_ID, TIMEZONE_CODE, PASSWORD_CHANGED_ON, PASSWORD_CHANGE_REQUIRED, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_USERS t where t.company_id = &company_id;
commit;
prompt ==== ** MT_TAPE_FOLLOWERS ** ====
insert into MT_TAPE_FOLLOWERS (TAPE_CODE, FOLLOWER_TAPE) select TAPE_CODE, FOLLOWER_TAPE from OLD_MT_TAPE_FOLLOWERS t;
commit;
prompt ==== ** MT_USER_DEVICES ** ====
insert into MT_USER_DEVICES (COMPANY_ID, USER_ID, DEVICE_ID, ACCOUNT_CODE) select COMPANY_ID, USER_ID, DEVICE_ID, ACCOUNT_CODE from OLD_MT_USER_DEVICES t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_EXAMS ** ====
insert into HLN_EXAMS (COMPANY_ID, FILIAL_ID, EXAM_ID, NAME, PICK_KIND, DURATION, PASSING_SCORE, QUESTION_COUNT, RANDOMIZE_QUESTIONS, RANDOMIZE_OPTIONS, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, EXAM_ID, NAME, PICK_KIND, DURATION, PASSING_SCORE, QUESTION_COUNT, RANDOMIZE_QUESTIONS, RANDOMIZE_OPTIONS, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HLN_EXAMS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_QUESTION_GROUPS ** ====
insert into HLN_QUESTION_GROUPS (COMPANY_ID, FILIAL_ID, QUESTION_GROUP_ID, NAME, CODE, IS_REQUIRED, ORDER_NO, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, QUESTION_GROUP_ID, NAME, CODE, IS_REQUIRED, ORDER_NO, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HLN_QUESTION_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_QUESTIONS ** ====
insert into HLN_QUESTIONS (COMPANY_ID, FILIAL_ID, QUESTION_ID, NAME, ANSWER_TYPE, CODE, STATE, WRITING_HINT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, QUESTION_ID, NAME, ANSWER_TYPE, CODE, STATE, WRITING_HINT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HLN_QUESTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_TRAINING_SUBJECTS ** ====
insert into HLN_TRAINING_SUBJECTS (COMPANY_ID, FILIAL_ID, SUBJECT_ID, NAME, CODE, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, SUBJECT_ID, NAME, CODE, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HLN_TRAINING_SUBJECTS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_AWARDS ** ====
insert into HREF_AWARDS (COMPANY_ID, AWARD_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, AWARD_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_AWARDS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_BUSINESS_TRIP_REASONS ** ====
insert into HREF_BUSINESS_TRIP_REASONS (COMPANY_ID, FILIAL_ID, REASON_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, FILIAL_ID, REASON_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HREF_BUSINESS_TRIP_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_DISMISSAL_REASONS ** ====
insert into HREF_DISMISSAL_REASONS (COMPANY_ID, DISMISSAL_REASON_ID, NAME, DESCRIPTION, REASON_TYPE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, DISMISSAL_REASON_ID, NAME, DESCRIPTION, REASON_TYPE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HREF_DISMISSAL_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_DOCUMENT_TYPES ** ====
insert into HREF_DOCUMENT_TYPES (COMPANY_ID, DOC_TYPE_ID, NAME, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DOC_TYPE_ID, NAME, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_DOCUMENT_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_EDU_STAGES ** ====
insert into HREF_EDU_STAGES (COMPANY_ID, EDU_STAGE_ID, NAME, STATE, CODE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, EDU_STAGE_ID, NAME, STATE, CODE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_EDU_STAGES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_EMPLOYMENT_SOURCES ** ====
insert into HREF_EMPLOYMENT_SOURCES (COMPANY_ID, SOURCE_ID, NAME, KIND, ORDER_NO, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, SOURCE_ID, NAME, KIND, ORDER_NO, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HREF_EMPLOYMENT_SOURCES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_EXPERIENCE_TYPES ** ====
insert into HREF_EXPERIENCE_TYPES (COMPANY_ID, EXPERIENCE_TYPE_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, EXPERIENCE_TYPE_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_EXPERIENCE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_FIXED_TERM_BASES ** ====
insert into HREF_FIXED_TERM_BASES (COMPANY_ID, FIXED_TERM_BASE_ID, NAME, TEXT, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, FIXED_TERM_BASE_ID, NAME, TEXT, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HREF_FIXED_TERM_BASES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_FTES ** ====
insert into HREF_FTES (COMPANY_ID, FTE_ID, NAME, FTE_VALUE, ORDER_NO, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, FTE_ID, NAME, FTE_VALUE, ORDER_NO, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HREF_FTES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_INDICATORS ** ====
insert into HREF_INDICATORS (COMPANY_ID, INDICATOR_ID, NAME, SHORT_NAME, IDENTIFIER, USED, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, INDICATOR_ID, NAME, SHORT_NAME, IDENTIFIER, USED, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HREF_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_INSTITUTIONS ** ====
insert into HREF_INSTITUTIONS (COMPANY_ID, INSTITUTION_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INSTITUTION_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_INSTITUTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_INVENTORY_TYPES ** ====
insert into HREF_INVENTORY_TYPES (COMPANY_ID, INVENTORY_TYPE_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INVENTORY_TYPE_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_INVENTORY_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_LABOR_FUNCTIONS ** ====
insert into HREF_LABOR_FUNCTIONS (COMPANY_ID, LABOR_FUNCTION_ID, NAME, DESCRIPTION, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, LABOR_FUNCTION_ID, NAME, DESCRIPTION, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_LABOR_FUNCTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_LANG_LEVELS ** ====
insert into HREF_LANG_LEVELS (COMPANY_ID, LANG_LEVEL_ID, NAME, STATE, CODE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, LANG_LEVEL_ID, NAME, STATE, CODE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_LANG_LEVELS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_LANGS ** ====
insert into HREF_LANGS (COMPANY_ID, LANG_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, LANG_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_LANGS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_MARITAL_STATUSES ** ====
insert into HREF_MARITAL_STATUSES (COMPANY_ID, MARITAL_STATUS_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MARITAL_STATUS_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_MARITAL_STATUSES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_NATIONALITIES ** ====
insert into HREF_NATIONALITIES (COMPANY_ID, NATIONALITY_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, NATIONALITY_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HREF_NATIONALITIES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_REFERENCE_TYPES ** ====
insert into HREF_REFERENCE_TYPES (COMPANY_ID, REFERENCE_TYPE_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REFERENCE_TYPE_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_REFERENCE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_RELATION_DEGREES ** ====
insert into HREF_RELATION_DEGREES (COMPANY_ID, RELATION_DEGREE_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, RELATION_DEGREE_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_RELATION_DEGREES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_SCIENCE_BRANCHES ** ====
insert into HREF_SCIENCE_BRANCHES (COMPANY_ID, SCIENCE_BRANCH_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, SCIENCE_BRANCH_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_SCIENCE_BRANCHES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_SICK_LEAVE_REASONS ** ====
insert into HREF_SICK_LEAVE_REASONS (COMPANY_ID, FILIAL_ID, REASON_ID, NAME, COEFFICIENT, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, FILIAL_ID, REASON_ID, NAME, COEFFICIENT, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HREF_SICK_LEAVE_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_SPECIALTIES ** ====
insert into HREF_SPECIALTIES (COMPANY_ID, SPECIALTY_ID, NAME, KIND, PARENT_ID, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, SPECIALTY_ID, NAME, KIND, PARENT_ID, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_SPECIALTIES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_TIMEPAD_USERS ** ====
insert into HREF_TIMEPAD_USERS (COMPANY_ID, USER_ID) select COMPANY_ID, USER_ID from OLD_HREF_TIMEPAD_USERS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_WAGE_SCALES ** ====
insert into HRM_WAGE_SCALES (COMPANY_ID, FILIAL_ID, WAGE_SCALE_ID, NAME, FULL_NAME, STATE, LAST_CHANGED_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, WAGE_SCALE_ID, NAME, FULL_NAME, STATE, LAST_CHANGED_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HRM_WAGE_SCALES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_CALENDARS ** ====
insert into HTT_CALENDARS (COMPANY_ID, FILIAL_ID, CALENDAR_ID, NAME, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, FILIAL_ID, CALENDAR_ID, NAME, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HTT_CALENDARS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_LOCATION_TYPES ** ====
insert into HTT_LOCATION_TYPES (COMPANY_ID, LOCATION_TYPE_ID, NAME, COLOR, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, LOCATION_TYPE_ID, NAME, COLOR, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HTT_LOCATION_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TIME_KINDS ** ====
insert into HTT_TIME_KINDS (COMPANY_ID, TIME_KIND_ID, NAME, LETTER_CODE, DIGITAL_CODE, PARENT_ID, PLAN_LOAD, REQUESTABLE, BG_COLOR, COLOR, TIMESHEET_COEF, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, TIME_KIND_ID, NAME, LETTER_CODE, DIGITAL_CODE, PARENT_ID, PLAN_LOAD, REQUESTABLE, BG_COLOR, COLOR, TIMESHEET_COEF, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HTT_TIME_KINDS t where t.company_id = &company_id;
commit;
prompt ==== ** KAUTH_AUTH_CODES ** ====
insert into KAUTH_AUTH_CODES (COMPANY_ID, AUTH_CODE_ID, AUTH_CODE, CLIENT_ID, USER_ID, REDIRECT_URL, CREATED_ON) select COMPANY_ID, AUTH_CODE_ID, AUTH_CODE, CLIENT_ID, USER_ID, REDIRECT_URL, CREATED_ON from OLD_KAUTH_AUTH_CODES t where t.company_id = &company_id;
commit;
prompt ==== ** KAUTH_CLIENT_USERS ** ====
insert into KAUTH_CLIENT_USERS (COMPANY_ID, NAME, USER_ID) select COMPANY_ID, NAME, USER_ID from OLD_KAUTH_CLIENT_USERS t where t.company_id = &company_id;
commit;
prompt ==== ** KAUTH_ONETIME_PASSWORDS ** ====
insert into KAUTH_ONETIME_PASSWORDS (COMPANY_ID, OTP_ID, USER_ID, TOKEN, PASSWORD, LOGON_ATTEMPTS, VALID, EXPIRES_ON, CREATED_ON) select COMPANY_ID, OTP_ID, USER_ID, TOKEN, PASSWORD, LOGON_ATTEMPTS, VALID, EXPIRES_ON, CREATED_ON from OLD_KAUTH_ONETIME_PASSWORDS t where t.company_id = &company_id;
commit;
prompt ==== ** KAUTH_TOKENS ** ====
insert into KAUTH_TOKENS (COMPANY_ID, TOKEN_ID, USER_ID, TOKEN, LAST_SEEN, CREATED_ON) select COMPANY_ID, TOKEN_ID, USER_ID, TOKEN, LAST_SEEN, CREATED_ON from OLD_KAUTH_TOKENS t where t.company_id = &company_id;
commit;
prompt ==== ** KER_TEMPLATES ** ====
insert into KER_TEMPLATES (COMPANY_ID, TEMPLATE_ID, FORM, NAME, STATE, FILE_SHA, ORDER_NO, PCODE, FILE_NAME, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TEMPLATE_ID, FORM, NAME, STATE, FILE_SHA, ORDER_NO, PCODE, FILE_NAME, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_KER_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** KL_LICENSE_ACTIVATIONS ** ====
insert into KL_LICENSE_ACTIVATIONS (COMPANY_ID, INSTANCE_CODE, KEY, SALT, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INSTANCE_CODE, KEY, SALT, MODIFIED_BY, MODIFIED_ON from OLD_KL_LICENSE_ACTIVATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** KL_LICENSES ** ====
insert into KL_LICENSES (COMPANY_ID, LICENSE_ID, LICENSE_CODE, BEGIN_DATE, END_DATE, STATUS, QUANT, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, LICENSE_ID, LICENSE_CODE, BEGIN_DATE, END_DATE, STATUS, QUANT, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_KL_LICENSES t where t.company_id = &company_id;
commit;
prompt ==== ** KL_LICENSING_PLANS ** ====
insert into KL_LICENSING_PLANS (COMPANY_ID, USER_ID, LICENSE_CODE) select COMPANY_ID, USER_ID, LICENSE_CODE from OLD_KL_LICENSING_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** KTB_USERS ** ====
insert into KTB_USERS (COMPANY_ID, USER_ID, CHAT_ID, CREATED_ON) select COMPANY_ID, USER_ID, CHAT_ID, CREATED_ON from OLD_KTB_USERS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ACTIONS ** ====
insert into MCG_ACTIONS (COMPANY_ID, ACTION_ID, FILIAL_ID, NAME, START_DATE, END_DATE, STATE, CALC_KIND, WEIGHT_KIND, CONDITION_OPERATOR, ORDER_LIMIT_KIND, ORDER_LIMIT_COUNT, ORDER_LIMIT_AMOUNT, WITH_PERIOD_LIMIT, PERIOD_LIMIT_KIND, PERIOD_LIMIT_CYCLE, PERIOD_LIMIT_CYCLE_COUNT, WITH_PERIOD_CALC, PERIOD_CALC_CYCLE_KIND, PERIOD_CALC_CYCLE_COUNT, FORCED, NOTE, HEAD_ACTION_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ACTION_ID, FILIAL_ID, NAME, START_DATE, END_DATE, STATE, CALC_KIND, WEIGHT_KIND, CONDITION_OPERATOR, ORDER_LIMIT_KIND, ORDER_LIMIT_COUNT, ORDER_LIMIT_AMOUNT, WITH_PERIOD_LIMIT, PERIOD_LIMIT_KIND, PERIOD_LIMIT_CYCLE, PERIOD_LIMIT_CYCLE_COUNT, WITH_PERIOD_CALC, PERIOD_CALC_CYCLE_KIND, PERIOD_CALC_CYCLE_COUNT, FORCED, NOTE, HEAD_ACTION_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_DISCOUNT_TYPES ** ====
insert into MCG_DISCOUNT_TYPES (COMPANY_ID, DISCOUNT_TYPE_ID, NAME, MIN_AMOUNT, EXPIRY_VALUE, USAGE_COUNT, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DISCOUNT_TYPE_ID, NAME, MIN_AMOUNT, EXPIRY_VALUE, USAGE_COUNT, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_DISCOUNT_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_AUDIT_INFOS ** ====
insert into MD_COMPANY_AUDIT_INFOS (COMPANY_ID, TABLE_NAME, STARTED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TABLE_NAME, STARTED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_COMPANY_AUDIT_INFOS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_FILES ** ====
insert into MD_COMPANY_FILES (COMPANY_ID, SHA, CREATED_BY, CREATED_ON) select COMPANY_ID, SHA, CREATED_BY, CREATED_ON from OLD_MD_COMPANY_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_ONEID_USERS ** ====
insert into MD_COMPANY_ONEID_USERS (COMPANY_ID, PIN, USER_ID) select COMPANY_ID, PIN, USER_ID from OLD_MD_COMPANY_ONEID_USERS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_PROJECTS ** ====
insert into MD_COMPANY_PROJECTS (COMPANY_ID, PROJECT_CODE, CREATED_BY, CREATED_ON) select COMPANY_ID, PROJECT_CODE, CREATED_BY, CREATED_ON from OLD_MD_COMPANY_PROJECTS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_DONE_QUICKSTART_STEPS ** ====
insert into MD_DONE_QUICKSTART_STEPS (COMPANY_ID, USER_ID, STEP_ID) select COMPANY_ID, USER_ID, STEP_ID from OLD_MD_DONE_QUICKSTART_STEPS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_RETURN_REASONS ** ====
insert into MDEAL_RETURN_REASONS (COMPANY_ID, REASON_ID, NAME, STATE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REASON_ID, NAME, STATE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDEAL_RETURN_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_FILIALS ** ====
insert into MD_FILIALS (COMPANY_ID, FILIAL_ID, NAME, STATE, TIMEZONE_CODE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, NAME, STATE, TIMEZONE_CODE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_FILIALS t where t.company_id = &company_id;
commit;
prompt ==== ** MDF_SIGN_PROCESSES ** ====
insert into MDF_SIGN_PROCESSES (COMPANY_ID, PROCESS_ID, PROJECT_CODE, SOURCE_TABLE, SOURCE_ACTION, NAME, ORDER_NO, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PROCESS_ID, PROJECT_CODE, SOURCE_TABLE, SOURCE_ACTION, NAME, ORDER_NO, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDF_SIGN_PROCESSES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_PROXY_TOKENS ** ====
insert into MD_PROXY_TOKENS (TOKEN, USER_ID, LAST_SEEN, CREATED_ON, DEADLINE, SECRET_KEY_HASH) select TOKEN, USER_ID, LAST_SEEN, CREATED_ON, DEADLINE, SECRET_KEY_HASH from OLD_MD_PROXY_TOKENS t;
commit;
prompt ==== ** MD_ROLES ** ====
insert into MD_ROLES (COMPANY_ID, ROLE_ID, NAME, STATE, ORDER_NO, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROLE_ID, NAME, STATE, ORDER_NO, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_ROLES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USER_MANAGERS ** ====
insert into MD_USER_MANAGERS (COMPANY_ID, USER_ID, MANAGER_ID, LVL) select COMPANY_ID, USER_ID, MANAGER_ID, LVL from OLD_MD_USER_MANAGERS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USER_MESSENGER_ACTIVATIONS ** ====
insert into MD_USER_MESSENGER_ACTIVATIONS (COMPANY_ID, USER_ID, MESSENGER_CODE, USER_CODE, ACTIVATION_CODE, EXPIRED_ON, CREATED_ON, CREATED_BY) select COMPANY_ID, USER_ID, MESSENGER_CODE, USER_CODE, ACTIVATION_CODE, EXPIRED_ON, CREATED_ON, CREATED_BY from OLD_MD_USER_MESSENGER_ACTIVATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USER_MESSENGERS ** ====
insert into MD_USER_MESSENGERS (COMPANY_ID, USER_ID, MESSENGER_CODE, USER_CODE, ACTIVATED_ON) select COMPANY_ID, USER_ID, MESSENGER_CODE, USER_CODE, ACTIVATED_ON from OLD_MD_USER_MESSENGERS t where t.company_id = &company_id;
commit;
prompt ==== ** MF_FILES ** ====
insert into MF_FILES (COMPANY_ID, FILE_ID, NAME, FOLDER_ID, SHA, OWNER_ID, DELETED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILE_ID, NAME, FOLDER_ID, SHA, OWNER_ID, DELETED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MF_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MFG_SPECIFICATIONS ** ====
insert into MFG_SPECIFICATIONS (COMPANY_ID, SPECIFICATION_ID, FILIAL_ID, NAME, STATE, CODE, SOURCE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, SPECIFICATION_ID, FILIAL_ID, NAME, STATE, CODE, SOURCE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MFG_SPECIFICATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MFK_USER_INFOS ** ====
insert into MFK_USER_INFOS (COMPANY_ID, FILIAL_ID, USER_ID, USERNAME, PASSWORD, ACCESS_TOKEN, EXPIRED_ON) select COMPANY_ID, FILIAL_ID, USER_ID, USERNAME, PASSWORD, ACCESS_TOKEN, EXPIRED_ON from OLD_MFK_USER_INFOS t where t.company_id = &company_id;
commit;
prompt ==== ** MFM_MOVEMENT_REASONS ** ====
insert into MFM_MOVEMENT_REASONS (COMPANY_ID, REASON_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REASON_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MFM_MOVEMENT_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MFM_MOVEMENT_REQUEST_REASONS ** ====
insert into MFM_MOVEMENT_REQUEST_REASONS (COMPANY_ID, REASON_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REASON_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MFM_MOVEMENT_REQUEST_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MHR_DIVISION_GROUPS ** ====
insert into MHR_DIVISION_GROUPS (COMPANY_ID, DIVISION_GROUP_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DIVISION_GROUP_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MHR_DIVISION_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MHR_JOB_GROUPS ** ====
insert into MHR_JOB_GROUPS (COMPANY_ID, JOB_GROUP_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, JOB_GROUP_ID, NAME, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MHR_JOB_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MHR_RANKS ** ====
insert into MHR_RANKS (COMPANY_ID, FILIAL_ID, RANK_ID, NAME, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, FILIAL_ID, RANK_ID, NAME, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_MHR_RANKS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_COA_GROUPS ** ====
insert into MK_COA_GROUPS (COMPANY_ID, COA_GROUP_ID, NAME, GEN_NAME, PARENT_GROUP_ID, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, COA_GROUP_ID, NAME, GEN_NAME, PARENT_GROUP_ID, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MK_COA_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_BANK_OPERATION_IMPORT_TEMPLATES ** ====
insert into MKCS_BANK_OPERATION_IMPORT_TEMPLATES (COMPANY_ID, TEMPLATE_ID, FILIAL_ID, NAME, IS_CHECK_DUPLICATE, DUPLICATE_ACTION, STARTING_ROW, ENDING_SKIP_COUNT, PURPOSE_LENGTH, INDEX_CORR_TIN, INDEX_CORR_BANK_CODE, INDEX_OPERATION_NUMBER, INDEX_OPERATION_DATE, INDEX_CORR_BANK_ACCOUNT_CODE, INDEX_CORR_PERSON_NAME, INDEX_INCOME_AMOUNT, INDEX_EXPENSE_AMOUNT, INDEX_PURPOSE, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TEMPLATE_ID, FILIAL_ID, NAME, IS_CHECK_DUPLICATE, DUPLICATE_ACTION, STARTING_ROW, ENDING_SKIP_COUNT, PURPOSE_LENGTH, INDEX_CORR_TIN, INDEX_CORR_BANK_CODE, INDEX_OPERATION_NUMBER, INDEX_OPERATION_DATE, INDEX_CORR_BANK_ACCOUNT_CODE, INDEX_CORR_PERSON_NAME, INDEX_INCOME_AMOUNT, INDEX_EXPENSE_AMOUNT, INDEX_PURPOSE, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_BANK_OPERATION_IMPORT_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_BANKS ** ====
insert into MKCS_BANKS (COMPANY_ID, BANK_ID, BANK_CODE, SWIFT_CODE, NAME, ADDRESS, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BANK_ID, BANK_CODE, SWIFT_CODE, NAME, ADDRESS, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_BANKS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_CURRENCIES ** ====
insert into MK_CURRENCIES (COMPANY_ID, CURRENCY_ID, NAME, ROUND_MODEL, PREFIX, SUFFIX, DECIMAL_NAME, FRACTION_NAME, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CURRENCY_ID, NAME, ROUND_MODEL, PREFIX, SUFFIX, DECIMAL_NAME, FRACTION_NAME, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MK_CURRENCIES t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CLIENT_PLANS ** ====
insert into MKPI_CLIENT_PLANS (COMPANY_ID, PLAN_ID, FILIAL_ID, CLIENT_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PLAN_ID, FILIAL_ID, CLIENT_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_CLIENT_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CLIENT_PLAN_SHARES ** ====
insert into MKPI_CLIENT_PLAN_SHARES (COMPANY_ID, FILIAL_ID, CLIENT_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, CLIENT_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_CLIENT_PLAN_SHARES t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_FILIAL_PLANS ** ====
insert into MKPI_FILIAL_PLANS (COMPANY_ID, PLAN_ID, FILIAL_ID, PLAN_DATE, PLAN_TYPE, VALUE, EXTRA_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PLAN_ID, FILIAL_ID, PLAN_DATE, PLAN_TYPE, VALUE, EXTRA_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_FILIAL_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_FILIAL_PLAN_SHARES ** ====
insert into MKPI_FILIAL_PLAN_SHARES (COMPANY_ID, FILIAL_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_FILIAL_PLAN_SHARES t where t.company_id = &company_id;
commit;
prompt ==== ** MKR_EXPENSE_ARTICLES ** ====
insert into MKR_EXPENSE_ARTICLES (COMPANY_ID, ARTICLE_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ARTICLE_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKR_EXPENSE_ARTICLES t where t.company_id = &company_id;
commit;
prompt ==== ** MKR_INCOME_ARTICLES ** ====
insert into MKR_INCOME_ARTICLES (COMPANY_ID, ARTICLE_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ARTICLE_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKR_INCOME_ARTICLES t where t.company_id = &company_id;
commit;
prompt ==== ** MKR_MARGINS ** ====
insert into MKR_MARGINS (COMPANY_ID, MARGIN_ID, NAME, PERCENT, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MARGIN_ID, NAME, PERCENT, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKR_MARGINS t where t.company_id = &company_id;
commit;
prompt ==== ** MKR_PAYMENT_TYPES ** ====
insert into MKR_PAYMENT_TYPES (COMPANY_ID, PAYMENT_TYPE_ID, NAME, PAYMENT_KIND, ORDER_NO, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PAYMENT_TYPE_ID, NAME, PAYMENT_KIND, ORDER_NO, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKR_PAYMENT_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_AUTHORIZED_CAPITALS ** ====
insert into MKU_AUTHORIZED_CAPITALS (COMPANY_ID, CAPITAL_ID, FILIAL_ID, POSTED, CAPITAL_DATE, CAPITAL_NUMBER, NOTE, C_AMOUNT, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CAPITAL_ID, FILIAL_ID, POSTED, CAPITAL_DATE, CAPITAL_NUMBER, NOTE, C_AMOUNT, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_AUTHORIZED_CAPITALS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_CLOSE_PERIODS ** ====
insert into MKU_CLOSE_PERIODS (COMPANY_ID, CLOSE_PERIOD_ID, FILIAL_ID, POSTED, CALC_RETAINED_EARNINGS, CLOSE_PERIOD_DATE, CLOSE_PERIOD_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CLOSE_PERIOD_ID, FILIAL_ID, POSTED, CALC_RETAINED_EARNINGS, CLOSE_PERIOD_DATE, CLOSE_PERIOD_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_CLOSE_PERIODS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_OFFSETS ** ====
insert into MKU_OFFSETS (COMPANY_ID, OFFSET_ID, FILIAL_ID, OFFSET_DATE, OFFSET_NUMBER, SOURCE_TABLE, NOTE, BARCODE, CREATED_BY, CREATED_ON) select COMPANY_ID, OFFSET_ID, FILIAL_ID, OFFSET_DATE, OFFSET_NUMBER, SOURCE_TABLE, NOTE, BARCODE, CREATED_BY, CREATED_ON from OLD_MKU_OFFSETS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_OPERATIONS ** ====
insert into MKU_OPERATIONS (COMPANY_ID, OPERATION_ID, FILIAL_ID, POSTED, OPERATION_DATE, OPERATION_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, OPERATION_ID, FILIAL_ID, POSTED, OPERATION_DATE, OPERATION_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_OPERATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_PROFIT_SHARES ** ====
insert into MKU_PROFIT_SHARES (COMPANY_ID, PROFIT_SHARE_ID, FILIAL_ID, POSTED, PROFIT_SHARE_DATE, PROFIT_SHARE_NUMBER, NOTE, C_AMOUNT, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PROFIT_SHARE_ID, FILIAL_ID, POSTED, PROFIT_SHARE_DATE, PROFIT_SHARE_NUMBER, NOTE, C_AMOUNT, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_PROFIT_SHARES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INIT_CLIENT_INVENTORY_BALANCES ** ====
insert into MKW_INIT_CLIENT_INVENTORY_BALANCES (COMPANY_ID, BALANCE_ID, FILIAL_ID, POSTED, BALANCE_DATE, BALANCE_NUMBER, BATCH_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BALANCE_ID, FILIAL_ID, POSTED, BALANCE_DATE, BALANCE_NUMBER, BATCH_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INIT_CLIENT_INVENTORY_BALANCES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INVENTORY_PAYABLES ** ====
insert into MKW_INVENTORY_PAYABLES (COMPANY_ID, INVENTORY_PAYABLE_ID, FILIAL_ID, INVENTORY_PAYABLE_NUMBER, INVENTORY_PAYABLE_DATE, NOTE, PERSON_ID, BARCODE, POSTED, CHARGE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INVENTORY_PAYABLE_ID, FILIAL_ID, INVENTORY_PAYABLE_NUMBER, INVENTORY_PAYABLE_DATE, NOTE, PERSON_ID, BARCODE, POSTED, CHARGE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INVENTORY_PAYABLES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_MOVEMENT_REASONS ** ====
insert into MKW_MOVEMENT_REASONS (COMPANY_ID, REASON_ID, NAME, CODE, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REASON_ID, NAME, CODE, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_MOVEMENT_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_MOVEMENT_REQUEST_REASONS ** ====
insert into MKW_MOVEMENT_REQUEST_REASONS (COMPANY_ID, REASON_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REASON_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_MOVEMENT_REQUEST_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_REQUEST_REASONS ** ====
insert into MKW_PURCHASE_REQUEST_REASONS (COMPANY_ID, REASON_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REASON_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASE_REQUEST_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_STATUSES ** ====
insert into MKW_PURCHASE_STATUSES (COMPANY_ID, STATUS_ID, NAME, STATE, ORDER_NO, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, STATUS_ID, NAME, STATE, ORDER_NO, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASE_STATUSES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_RETURN_REASONS ** ====
insert into MKW_RETURN_REASONS (COMPANY_ID, REASON_ID, NAME, CODE, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REASON_ID, NAME, CODE, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_RETURN_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_SERIALS ** ====
insert into MKW_SERIALS (COMPANY_ID, SERIAL_ID, SERIAL_NUMBER, CREATED_BY, CREATED_ON) select COMPANY_ID, SERIAL_ID, SERIAL_NUMBER, CREATED_BY, CREATED_ON from OLD_MKW_SERIALS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_STOCKTAKING_REASONS ** ====
insert into MKW_STOCKTAKING_REASONS (COMPANY_ID, REASON_ID, FILIAL_ID, NAME, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REASON_ID, FILIAL_ID, NAME, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_STOCKTAKING_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_WAREHOUSE_TYPES ** ====
insert into MKW_WAREHOUSE_TYPES (COMPANY_ID, WAREHOUSE_TYPE_ID, NAME, STATE, ORDER_NO, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, WAREHOUSE_TYPE_ID, NAME, STATE, ORDER_NO, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_WAREHOUSE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_WRITEOFF_REASONS ** ====
insert into MKW_WRITEOFF_REASONS (COMPANY_ID, REASON_ID, FILIAL_ID, NAME, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REASON_ID, FILIAL_ID, NAME, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_WRITEOFF_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MPH_CLIENT_MEMOS ** ====
insert into MPH_CLIENT_MEMOS (COMPANY_ID, MEMO_ID, CLIENT_ID, MEMO, CREATED_BY, CREATED_ON, MODIFIED_ON) select COMPANY_ID, MEMO_ID, CLIENT_ID, MEMO, CREATED_BY, CREATED_ON, MODIFIED_ON from OLD_MPH_CLIENT_MEMOS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_QUIZS ** ====
insert into MQZ_QUIZS (COMPANY_ID, QUIZ_ID, NAME, DATA_KIND, QUIZ_KIND, SELECT_MULTIPLE, SELECT_FORM, MIN_SCALE, MAX_SCALE, IS_REQUIRED, IS_PHOTO_REQUIRED, STATE, PROJECT_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, QUIZ_ID, NAME, DATA_KIND, QUIZ_KIND, SELECT_MULTIPLE, SELECT_FORM, MIN_SCALE, MAX_SCALE, IS_REQUIRED, IS_PHOTO_REQUIRED, STATE, PROJECT_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MQZ_QUIZS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_QUIZ_SETS ** ====
insert into MQZ_QUIZ_SETS (COMPANY_ID, QUIZ_SET_ID, NAME, PARENT_ID, DESCRIPTION, STATE, PROJECT_CODE, C_ROLES_EXIST, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, QUIZ_SET_ID, NAME, PARENT_ID, DESCRIPTION, STATE, PROJECT_CODE, C_ROLES_EXIST, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MQZ_QUIZ_SETS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_REPORT_TEMPLATES ** ====
insert into MQZ_REPORT_TEMPLATES (COMPANY_ID, TEMPLATE_ID, NAME, DESCRIPTION, TEMPLATE_KIND, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TEMPLATE_ID, NAME, DESCRIPTION, TEMPLATE_KIND, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MQZ_REPORT_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_ACTIVITIES ** ====
insert into MR_ACTIVITIES (COMPANY_ID, ACTIVITY_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ACTIVITY_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MR_ACTIVITIES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_BOX_TYPES ** ====
insert into MR_BOX_TYPES (COMPANY_ID, BOX_TYPE_ID, NAME, SHORT_NAME, CODE, STATE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, BOX_TYPE_ID, NAME, SHORT_NAME, CODE, STATE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_BOX_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_PRODUCT_SETS ** ====
insert into MRF_PRODUCT_SETS (COMPANY_ID, FILIAL_ID, PRODUCT_SET_ID, NAME, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, FILIAL_ID, PRODUCT_SET_ID, NAME, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MRF_PRODUCT_SETS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_HUMIDITY_TYPES ** ====
insert into MR_HUMIDITY_TYPES (COMPANY_ID, HUMIDITY_TYPE_ID, NAME, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, HUMIDITY_TYPE_ID, NAME, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MR_HUMIDITY_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_LEGAL_FORMS ** ====
insert into MR_LEGAL_FORMS (COMPANY_ID, LEGAL_FORM_ID, SHORT_NAME, NAME, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, LEGAL_FORM_ID, SHORT_NAME, NAME, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_LEGAL_FORMS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_LEGAL_PERSON_CONTACT_POSITIONS ** ====
insert into MR_LEGAL_PERSON_CONTACT_POSITIONS (COMPANY_ID, POSITION_ID, NAME, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, POSITION_ID, NAME, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_LEGAL_PERSON_CONTACT_POSITIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_MEASURES ** ====
insert into MR_MEASURES (COMPANY_ID, MEASURE_ID, NAME, SHORT_NAME, SCALE, PRODUCT_KIND, CODE, STATE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, MEASURE_ID, NAME, SHORT_NAME, SCALE, PRODUCT_KIND, CODE, STATE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_MEASURES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_NATURAL_PERSONS ** ====
insert into MR_NATURAL_PERSONS (COMPANY_ID, PERSON_ID, NAME, FIRST_NAME, LAST_NAME, MIDDLE_NAME, GENDER, BIRTHDAY, LEGAL_PERSON_ID, RESPONSIBLE_PERSON_ID, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_ID, NAME, FIRST_NAME, LAST_NAME, MIDDLE_NAME, GENDER, BIRTHDAY, LEGAL_PERSON_ID, RESPONSIBLE_PERSON_ID, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_NATURAL_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PERSON_FILES ** ====
insert into MR_PERSON_FILES (COMPANY_ID, PERSON_ID, FILE_SHA, TITLE, NOTE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_ID, FILE_SHA, TITLE, NOTE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PERSON_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PERSON_GROUPS ** ====
insert into MR_PERSON_GROUPS (COMPANY_ID, PERSON_GROUP_ID, NAME, PERSON_KIND, CODE, STATE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_GROUP_ID, NAME, PERSON_KIND, CODE, STATE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PERSON_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PRODUCERS ** ====
insert into MR_PRODUCERS (COMPANY_ID, PRODUCER_ID, ORDER_NO, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PRODUCER_ID, ORDER_NO, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PRODUCERS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PRODUCT_GROUPS ** ====
insert into MR_PRODUCT_GROUPS (COMPANY_ID, PRODUCT_GROUP_ID, NAME, PRODUCT_KIND, CODE, STATE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PRODUCT_GROUP_ID, NAME, PRODUCT_KIND, CODE, STATE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PRODUCT_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_ROBOT_GROUPS ** ====
insert into MR_ROBOT_GROUPS (COMPANY_ID, ROBOT_GROUP_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROBOT_GROUP_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MR_ROBOT_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_SECTORS ** ====
insert into MR_SECTORS (COMPANY_ID, SECTOR_ID, NAME, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, SECTOR_ID, NAME, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_SECTORS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_TEMPERATURE_TYPES ** ====
insert into MR_TEMPERATURE_TYPES (COMPANY_ID, TEMPERATURE_TYPE_ID, NAME, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TEMPERATURE_TYPE_ID, NAME, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MR_TEMPERATURE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MS_CHATS ** ====
insert into MS_CHATS (COMPANY_ID, CHAT_ID, KIND, STATE, NAME, SOURCE_TABLE, SOURCE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CHAT_ID, KIND, STATE, NAME, SOURCE_TABLE, SOURCE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_CHATS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_KANBAN_ITEMS ** ====
insert into MS_KANBAN_ITEMS (COMPANY_ID, UNIT_ID, USER_ID, NAME, COLOR, TEXT_COLOR, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, UNIT_ID, USER_ID, NAME, COLOR, TEXT_COLOR, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_KANBAN_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_MESSAGES ** ====
insert into MS_MESSAGES (COMPANY_ID, MESSAGE_ID, TITLE, MESSAGE, STATE, CHAIN_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MESSAGE_ID, TITLE, MESSAGE, STATE, CHAIN_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_MESSAGES t where t.company_id = &company_id;
commit;
prompt ==== ** MS_NOTIFICATIONS ** ====
insert into MS_NOTIFICATIONS (COMPANY_ID, NOTIFICATION_ID, PERSON_ID, FILIAL_ID, NOTIFICATION_KIND, VIEWED, PROJECT_CODE, TITLE, NOTE, URI, URI_PARAM, SOURCE_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, NOTIFICATION_ID, PERSON_ID, FILIAL_ID, NOTIFICATION_KIND, VIEWED, PROJECT_CODE, TITLE, NOTE, URI, URI_PARAM, SOURCE_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_NOTIFICATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_GROUPS ** ====
insert into MS_TASK_GROUPS (COMPANY_ID, TASK_GROUP_ID, NAME, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TASK_GROUP_ID, NAME, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_PROJECTS ** ====
insert into MS_TASK_PROJECTS (COMPANY_ID, PROJECT_ID, NAME, STATE, BEGIN_TIME, END_TIME, PHOTO_SHA, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PROJECT_ID, NAME, STATE, BEGIN_TIME, END_TIME, PHOTO_SHA, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_PROJECTS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_STATUSES ** ====
insert into MS_TASK_STATUSES (COMPANY_ID, STATUS_ID, NAME, STATE, COLOR, TEXT_COLOR, ORDER_NO, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, STATUS_ID, NAME, STATE, COLOR, TEXT_COLOR, ORDER_NO, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_STATUSES t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_COMMENTS ** ====
insert into MVT_COMMENTS (COMPANY_ID, COMMENT_ID, NAME, COMMENT_KIND, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, COMMENT_ID, NAME, COMMENT_KIND, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVT_COMMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_GPS_LOCATIONS ** ====
insert into MVT_GPS_LOCATIONS (COMPANY_ID, GPS_LOCATION_ID, LATLNG, ACCURACY, SPEED, PROVIDER_KIND, GPS_DATE, GPS_LOCATION_KIND, CREATED_BY, CREATED_ON) select COMPANY_ID, GPS_LOCATION_ID, LATLNG, ACCURACY, SPEED, PROVIDER_KIND, GPS_DATE, GPS_LOCATION_KIND, CREATED_BY, CREATED_ON from OLD_MVT_GPS_LOCATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MVTM_PERSON_VISIT_PLANS ** ====
insert into MVTM_PERSON_VISIT_PLANS (COMPANY_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, PERSON_ID, VISIT_DATE, PLAN_KIND, DONE, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, PERSON_ID, VISIT_DATE, PLAN_KIND, DONE, CREATED_BY, CREATED_ON from OLD_MVTM_PERSON_VISIT_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_PHOTO_TYPES ** ====
insert into MVT_PHOTO_TYPES (COMPANY_ID, PHOTO_TYPE_ID, NAME, IS_REQUIRED, STATE, PCODE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PHOTO_TYPE_ID, NAME, IS_REQUIRED, STATE, PCODE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVT_PHOTO_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_VIDEO_TYPES ** ====
insert into MVT_VIDEO_TYPES (COMPANY_ID, VIDEO_TYPE_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, VIDEO_TYPE_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVT_VIDEO_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_VISIT_HEADERS ** ====
insert into MVT_VISIT_HEADERS (COMPANY_ID, VISIT_ID, FILIAL_ID, PERSON_ID, VISIT_DATE, VISIT_TIME, BEGUN_ON, ENDED_ON, STATUS, REVIEW_STATUS, USER_ID, START_LOCATION, END_LOCATION, NOTE, SPENT_TIME, SOURCE_TABLE, SOURCE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, VISIT_ID, FILIAL_ID, PERSON_ID, VISIT_DATE, VISIT_TIME, BEGUN_ON, ENDED_ON, STATUS, REVIEW_STATUS, USER_ID, START_LOCATION, END_LOCATION, NOTE, SPENT_TIME, SOURCE_TABLE, SOURCE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVT_VISIT_HEADERS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_ATTESTATIONS ** ====
insert into HLN_ATTESTATIONS (COMPANY_ID, FILIAL_ID, ATTESTATION_ID, ATTESTATION_NUMBER, NAME, ATTESTATION_DATE, BEGIN_TIME, EXAMINER_ID, NOTE, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ATTESTATION_ID, ATTESTATION_NUMBER, NAME, ATTESTATION_DATE, BEGIN_TIME, EXAMINER_ID, NOTE, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HLN_ATTESTATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_EXAM_MANUAL_QUESTIONS ** ====
insert into HLN_EXAM_MANUAL_QUESTIONS (COMPANY_ID, FILIAL_ID, EXAM_ID, QUESTION_ID, ORDER_NO) select COMPANY_ID, FILIAL_ID, EXAM_ID, QUESTION_ID, ORDER_NO from OLD_HLN_EXAM_MANUAL_QUESTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_EXAM_PATTERNS ** ====
insert into HLN_EXAM_PATTERNS (COMPANY_ID, FILIAL_ID, PATTERN_ID, EXAM_ID, QUANTITY, HAS_WRITING_QUESTION, ORDER_NO) select COMPANY_ID, FILIAL_ID, PATTERN_ID, EXAM_ID, QUANTITY, HAS_WRITING_QUESTION, ORDER_NO from OLD_HLN_EXAM_PATTERNS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_QUESTION_FILES ** ====
insert into HLN_QUESTION_FILES (COMPANY_ID, FILIAL_ID, QUESTION_ID, FILE_SHA, ORDER_NO) select COMPANY_ID, FILIAL_ID, QUESTION_ID, FILE_SHA, ORDER_NO from OLD_HLN_QUESTION_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_QUESTION_OPTIONS ** ====
insert into HLN_QUESTION_OPTIONS (COMPANY_ID, FILIAL_ID, QUESTION_OPTION_ID, NAME, FILE_SHA, QUESTION_ID, IS_CORRECT, ORDER_NO) select COMPANY_ID, FILIAL_ID, QUESTION_OPTION_ID, NAME, FILE_SHA, QUESTION_ID, IS_CORRECT, ORDER_NO from OLD_HLN_QUESTION_OPTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_QUESTION_TYPES ** ====
insert into HLN_QUESTION_TYPES (COMPANY_ID, FILIAL_ID, QUESTION_TYPE_ID, QUESTION_GROUP_ID, NAME, CODE, ORDER_NO, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, QUESTION_TYPE_ID, QUESTION_GROUP_ID, NAME, CODE, ORDER_NO, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HLN_QUESTION_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_TESTINGS ** ====
insert into HLN_TESTINGS (COMPANY_ID, FILIAL_ID, TESTING_ID, EXAM_ID, PERSON_ID, EXAMINER_ID, TESTING_NUMBER, TESTING_DATE, BEGIN_TIME, END_TIME, FACT_BEGIN_TIME, FACT_END_TIME, PAUSE_TIME, PASSED, CURRENT_QUESTION_NO, CORRECT_QUESTIONS_COUNT, NOTE, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, TESTING_ID, EXAM_ID, PERSON_ID, EXAMINER_ID, TESTING_NUMBER, TESTING_DATE, BEGIN_TIME, END_TIME, FACT_BEGIN_TIME, FACT_END_TIME, PAUSE_TIME, PASSED, CURRENT_QUESTION_NO, CORRECT_QUESTIONS_COUNT, NOTE, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HLN_TESTINGS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_TRAININGS ** ====
insert into HLN_TRAININGS (COMPANY_ID, FILIAL_ID, TRAINING_ID, TRAINING_NUMBER, BEGIN_DATE, MENTOR_ID, SUBJECT_ID, ADDRESS, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, TRAINING_ID, TRAINING_NUMBER, BEGIN_DATE, MENTOR_ID, SUBJECT_ID, ADDRESS, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HLN_TRAININGS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_JOURNALS ** ====
insert into HPD_JOURNALS (COMPANY_ID, FILIAL_ID, JOURNAL_ID, JOURNAL_TYPE_ID, JOURNAL_NUMBER, JOURNAL_DATE, JOURNAL_NAME, POSTED, POSTED_ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, FILIAL_ID, JOURNAL_ID, JOURNAL_TYPE_ID, JOURNAL_NUMBER, JOURNAL_DATE, JOURNAL_NAME, POSTED, POSTED_ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HPD_JOURNALS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_CANDIDATE_EDU_STAGES ** ====
insert into HREF_CANDIDATE_EDU_STAGES (COMPANY_ID, FILIAL_ID, EDU_STAGE_ID, ORDER_NO) select COMPANY_ID, FILIAL_ID, EDU_STAGE_ID, ORDER_NO from OLD_HREF_CANDIDATE_EDU_STAGES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_CANDIDATE_LANGS ** ====
insert into HREF_CANDIDATE_LANGS (COMPANY_ID, FILIAL_ID, LANG_ID, ORDER_NO) select COMPANY_ID, FILIAL_ID, LANG_ID, ORDER_NO from OLD_HREF_CANDIDATE_LANGS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_CANDIDATES ** ====
insert into HREF_CANDIDATES (COMPANY_ID, FILIAL_ID, CANDIDATE_ID, CANDIDATE_KIND, SOURCE_ID, WAGE_EXPECTATION, CV_SHA, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, CANDIDATE_ID, CANDIDATE_KIND, SOURCE_ID, WAGE_EXPECTATION, CV_SHA, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_CANDIDATES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_AWARDS ** ====
insert into HREF_PERSON_AWARDS (COMPANY_ID, PERSON_AWARD_ID, PERSON_ID, AWARD_ID, DOC_TITLE, DOC_NUMBER, DOC_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_AWARD_ID, PERSON_ID, AWARD_ID, DOC_TITLE, DOC_NUMBER, DOC_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_AWARDS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_DETAILS ** ====
insert into HREF_PERSON_DETAILS (COMPANY_ID, PERSON_ID, IAPA, NPIN, NATIONALITY_ID, KEY_PERSON, ACCESS_ALL_EMPLOYEES) select COMPANY_ID, PERSON_ID, IAPA, NPIN, NATIONALITY_ID, KEY_PERSON, ACCESS_ALL_EMPLOYEES from OLD_HREF_PERSON_DETAILS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_DOCUMENTS ** ====
insert into HREF_PERSON_DOCUMENTS (COMPANY_ID, DOCUMENT_ID, PERSON_ID, DOC_TYPE_ID, DOC_SERIES, DOC_NUMBER, ISSUED_BY, ISSUED_DATE, BEGIN_DATE, EXPIRY_DATE, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DOCUMENT_ID, PERSON_ID, DOC_TYPE_ID, DOC_SERIES, DOC_NUMBER, ISSUED_BY, ISSUED_DATE, BEGIN_DATE, EXPIRY_DATE, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_DOCUMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_EDU_STAGES ** ====
insert into HREF_PERSON_EDU_STAGES (COMPANY_ID, PERSON_EDU_STAGE_ID, PERSON_ID, EDU_STAGE_ID, INSTITUTION_ID, BEGIN_DATE, END_DATE, SPECIALTY_ID, QUALIFICATION, COURSE, HOUR_AMOUNT, BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_EDU_STAGE_ID, PERSON_ID, EDU_STAGE_ID, INSTITUTION_ID, BEGIN_DATE, END_DATE, SPECIALTY_ID, QUALIFICATION, COURSE, HOUR_AMOUNT, BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_EDU_STAGES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_EXPERIENCES ** ====
insert into HREF_PERSON_EXPERIENCES (COMPANY_ID, PERSON_EXPERIENCE_ID, PERSON_ID, EXPERIENCE_TYPE_ID, IS_WORKING, START_DATE, NUM_YEAR, NUM_MONTH, NUM_DAY, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_EXPERIENCE_ID, PERSON_ID, EXPERIENCE_TYPE_ID, IS_WORKING, START_DATE, NUM_YEAR, NUM_MONTH, NUM_DAY, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_EXPERIENCES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_FAMILY_MEMBERS ** ====
insert into HREF_PERSON_FAMILY_MEMBERS (COMPANY_ID, PERSON_FAMILY_MEMBER_ID, PERSON_ID, NAME, RELATION_DEGREE_ID, BIRTHDAY, WORKPLACE, IS_DEPENDENT, IS_PRIVATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_FAMILY_MEMBER_ID, PERSON_ID, NAME, RELATION_DEGREE_ID, BIRTHDAY, WORKPLACE, IS_DEPENDENT, IS_PRIVATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_FAMILY_MEMBERS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_INVENTORIES ** ====
insert into HREF_PERSON_INVENTORIES (COMPANY_ID, PERSON_INVENTORY_ID, PERSON_ID, INVENTORY_TYPE_ID, DATE_ASSIGNED, DATE_RETURNED, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_INVENTORY_ID, PERSON_ID, INVENTORY_TYPE_ID, DATE_ASSIGNED, DATE_RETURNED, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_INVENTORIES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_LANGS ** ====
insert into HREF_PERSON_LANGS (COMPANY_ID, PERSON_ID, LANG_ID, LANG_LEVEL_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_ID, LANG_ID, LANG_LEVEL_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_LANGS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_MARITAL_STATUSES ** ====
insert into HREF_PERSON_MARITAL_STATUSES (COMPANY_ID, PERSON_MARITAL_STATUS_ID, PERSON_ID, MARITAL_STATUS_ID, START_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_MARITAL_STATUS_ID, PERSON_ID, MARITAL_STATUS_ID, START_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_MARITAL_STATUSES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_REFERENCES ** ====
insert into HREF_PERSON_REFERENCES (COMPANY_ID, PERSON_REFERENCE_ID, PERSON_ID, REFERENCE_TYPE_ID, REF_NUMBER, REF_DATE, START_DATE, END_DATE, NAME, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_REFERENCE_ID, PERSON_ID, REFERENCE_TYPE_ID, REF_NUMBER, REF_DATE, START_DATE, END_DATE, NAME, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_REFERENCES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_WORK_PLACES ** ====
insert into HREF_PERSON_WORK_PLACES (COMPANY_ID, PERSON_WORK_PLACE_ID, PERSON_ID, START_DATE, END_DATE, ORGANIZATION_NAME, JOB_TITLE, ORGANIZATION_ADDRESS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_WORK_PLACE_ID, PERSON_ID, START_DATE, END_DATE, ORGANIZATION_NAME, JOB_TITLE, ORGANIZATION_ADDRESS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_PERSON_WORK_PLACES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_RESTRICTED_DISMISSAL_REASONS ** ====
insert into HREF_RESTRICTED_DISMISSAL_REASONS (COMPANY_ID, DISMISSAL_REASON_ID) select COMPANY_ID, DISMISSAL_REASON_ID from OLD_HREF_RESTRICTED_DISMISSAL_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_WAGE_SCALE_REGISTERS ** ====
insert into HRM_WAGE_SCALE_REGISTERS (COMPANY_ID, FILIAL_ID, REGISTER_ID, REGISTER_DATE, REGISTER_NUMBER, WAGE_SCALE_ID, ROUND_MODEL, BASE_WAGE, VALID_FROM, POSTED, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, REGISTER_ID, REGISTER_DATE, REGISTER_NUMBER, WAGE_SCALE_ID, ROUND_MODEL, BASE_WAGE, VALID_FROM, POSTED, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HRM_WAGE_SCALE_REGISTERS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_CALENDAR_DAYS ** ====
insert into HTT_CALENDAR_DAYS (COMPANY_ID, FILIAL_ID, CALENDAR_ID, CALENDAR_DATE, NAME, DAY_KIND, SWAPPED_DATE) select COMPANY_ID, FILIAL_ID, CALENDAR_ID, CALENDAR_DATE, NAME, DAY_KIND, SWAPPED_DATE from OLD_HTT_CALENDAR_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_CALENDAR_REST_DAYS ** ====
insert into HTT_CALENDAR_REST_DAYS (COMPANY_ID, FILIAL_ID, CALENDAR_ID, WEEK_DAY_NO) select COMPANY_ID, FILIAL_ID, CALENDAR_ID, WEEK_DAY_NO from OLD_HTT_CALENDAR_REST_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_GPS_TRACKS ** ====
insert into HTT_GPS_TRACKS (COMPANY_ID, FILIAL_ID, TRACK_ID, PERSON_ID, TRACK_DATE, TOTAL_DISTANCE, CALCULATED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, TRACK_ID, PERSON_ID, TRACK_DATE, TOTAL_DISTANCE, CALCULATED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HTT_GPS_TRACKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_LOCATIONS ** ====
insert into HTT_LOCATIONS (COMPANY_ID, LOCATION_ID, NAME, LOCATION_TYPE_ID, TIMEZONE_CODE, REGION_ID, ADDRESS, LATLNG, ACCURACY, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, LOCATION_ID, NAME, LOCATION_TYPE_ID, TIMEZONE_CODE, REGION_ID, ADDRESS, LATLNG, ACCURACY, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HTT_LOCATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_PERSON_PHOTOS ** ====
insert into HTT_PERSON_PHOTOS (COMPANY_ID, PERSON_ID, PHOTO_SHA, IS_MAIN) select COMPANY_ID, PERSON_ID, PHOTO_SHA, IS_MAIN from OLD_HTT_PERSON_PHOTOS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_PERSONS ** ====
insert into HTT_PERSONS (COMPANY_ID, PERSON_ID, PIN, PIN_CODE, RFID_CODE, QR_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_ID, PIN, PIN_CODE, RFID_CODE, QR_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HTT_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_REQUEST_KINDS ** ====
insert into HTT_REQUEST_KINDS (COMPANY_ID, REQUEST_KIND_ID, NAME, TIME_KIND_ID, ANNUALLY_LIMITED, DAY_COUNT_TYPE, ANNUAL_DAY_LIMIT, USER_PERMITTED, ALLOW_UNUSED_TIME, REQUEST_RESTRICTION_DAYS, CARRYOVER_POLICY, CARRYOVER_CAP_DAYS, CARRYOVER_EXPIRES_DAYS, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, REQUEST_KIND_ID, NAME, TIME_KIND_ID, ANNUALLY_LIMITED, DAY_COUNT_TYPE, ANNUAL_DAY_LIMIT, USER_PERMITTED, ALLOW_UNUSED_TIME, REQUEST_RESTRICTION_DAYS, CARRYOVER_POLICY, CARRYOVER_CAP_DAYS, CARRYOVER_EXPIRES_DAYS, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HTT_REQUEST_KINDS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULES ** ====
insert into HTT_SCHEDULES (COMPANY_ID, FILIAL_ID, SCHEDULE_ID, NAME, SHIFT, INPUT_ACCEPTANCE, OUTPUT_ACCEPTANCE, TRACK_DURATION, COUNT_LATE, COUNT_EARLY, COUNT_LACK, CALENDAR_ID, TAKE_HOLIDAYS, TAKE_NONWORKING, STATE, CODE, BARCODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID, SCHEDULE_KIND) select COMPANY_ID, FILIAL_ID, SCHEDULE_ID, NAME, SHIFT, INPUT_ACCEPTANCE, OUTPUT_ACCEPTANCE, TRACK_DURATION, COUNT_LATE, COUNT_EARLY, COUNT_LACK, CALENDAR_ID, TAKE_HOLIDAYS, TAKE_NONWORKING, STATE, CODE, BARCODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID, SCHEDULE_KIND from OLD_HTT_SCHEDULES t where t.company_id = &company_id;
commit;
prompt ==== ** HZK_PERSON_FPRINTS ** ====
insert into HZK_PERSON_FPRINTS (COMPANY_ID, PERSON_ID, FINGER_NO, TMP) select COMPANY_ID, PERSON_ID, FINGER_NO, TMP from OLD_HZK_PERSON_FPRINTS t where t.company_id = &company_id;
commit;
prompt ==== ** KAUTH_ACCESS_TOKENS ** ====
insert into KAUTH_ACCESS_TOKENS (COMPANY_ID, TOKEN_ID, USER_ID, AUTH_CODE_ID, CLIENT_ID, ACCESS_TOKEN, REFRESH_TOKEN, LAST_SEEN, CREATED_ON) select COMPANY_ID, TOKEN_ID, USER_ID, AUTH_CODE_ID, CLIENT_ID, ACCESS_TOKEN, REFRESH_TOKEN, LAST_SEEN, CREATED_ON from OLD_KAUTH_ACCESS_TOKENS t where t.company_id = &company_id;
commit;
prompt ==== ** KER_TEMPLATE_ROLES ** ====
insert into KER_TEMPLATE_ROLES (COMPANY_ID, TEMPLATE_ID, ROLE_ID) select COMPANY_ID, TEMPLATE_ID, ROLE_ID from OLD_KER_TEMPLATE_ROLES t where t.company_id = &company_id;
commit;
prompt ==== ** KER_TEMPLATE_USERS ** ====
insert into KER_TEMPLATE_USERS (COMPANY_ID, TEMPLATE_ID, FILIAL_ID, USER_ID) select COMPANY_ID, TEMPLATE_ID, FILIAL_ID, USER_ID from OLD_KER_TEMPLATE_USERS t where t.company_id = &company_id;
commit;
prompt ==== ** KL_GRANT_USERS ** ====
insert into KL_GRANT_USERS (COMPANY_ID, LICENSE_ID, USER_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, LICENSE_ID, USER_ID, CREATED_BY, CREATED_ON from OLD_KL_GRANT_USERS t where t.company_id = &company_id;
commit;
prompt ==== ** KL_LICENSE_CODES ** ====
insert into KL_LICENSE_CODES (HASHCODE, COMPANY_ID, LICENSE_ID, SERIAL_NUMBER) select HASHCODE, COMPANY_ID, LICENSE_ID, SERIAL_NUMBER from OLD_KL_LICENSE_CODES t where t.company_id = &company_id;
commit;
prompt ==== ** MBI_TEMPLATES ** ====
insert into MBI_TEMPLATES (COMPANY_ID, TEMPLATE_ID, NAME, KIND, ACCESS_KIND, FILIAL_ID, SOURCE_TABLE, SUBTOTAL_ROW_COUNT, SUBTOTAL_COL_COUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TEMPLATE_ID, NAME, KIND, ACCESS_KIND, FILIAL_ID, SOURCE_TABLE, SUBTOTAL_ROW_COUNT, SUBTOTAL_COL_COUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MBI_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ACTION_CONDITIONS ** ====
insert into MCG_ACTION_CONDITIONS (COMPANY_ID, CONDITION_ID, ACTION_ID, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CONDITION_ID, ACTION_ID, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ACTION_CONDITIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_DISCOUNT_CARDS ** ====
insert into MCG_DISCOUNT_CARDS (COMPANY_ID, DISCOUNT_CARD_ID, DISCOUNT_TYPE_ID, PERSON_ID, CODE, EXPIRY_DATE, STATE, CREATED_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DISCOUNT_CARD_ID, DISCOUNT_TYPE_ID, PERSON_ID, CODE, EXPIRY_DATE, STATE, CREATED_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_DISCOUNT_CARDS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_DISCOUNT_RULES ** ====
insert into MCG_DISCOUNT_RULES (COMPANY_ID, RULE_ID, DISCOUNT_TYPE_ID, FROM_VALUE, TO_VALUE, PERCENT) select COMPANY_ID, RULE_ID, DISCOUNT_TYPE_ID, FROM_VALUE, TO_VALUE, PERCENT from OLD_MCG_DISCOUNT_RULES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_MML_HEADERS ** ====
insert into MCG_MML_HEADERS (COMPANY_ID, MML_ID, FILIAL_ID, SECTOR_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MML_ID, FILIAL_ID, SECTOR_ID, NAME, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_MML_HEADERS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ORDER_PRODUCT_LIMITS ** ====
insert into MCG_ORDER_PRODUCT_LIMITS (COMPANY_ID, ORDER_PRODUCT_LIMIT_ID, FILIAL_ID, NAME, START_DATE, END_DATE, PERSON_GROUP_ID, ORDER_PRODUCT_LIMIT_KIND, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ORDER_PRODUCT_LIMIT_ID, FILIAL_ID, NAME, START_DATE, END_DATE, PERSON_GROUP_ID, ORDER_PRODUCT_LIMIT_KIND, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ORDER_PRODUCT_LIMITS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ORDER_RESTRICTIONS ** ====
insert into MCG_ORDER_RESTRICTIONS (COMPANY_ID, ORDER_RESTRICTION_ID, FILIAL_ID, NAME, ORDER_RESTRICTION_KIND, STATE, PERSON_GROUP_ID, AMOUNT_LIMIT, DAY_LIMIT, CURRENT_DEBT_ONLY, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ORDER_RESTRICTION_ID, FILIAL_ID, NAME, ORDER_RESTRICTION_KIND, STATE, PERSON_GROUP_ID, AMOUNT_LIMIT, DAY_LIMIT, CURRENT_DEBT_ONLY, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ORDER_RESTRICTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_FILIAL_PROJECTS ** ====
insert into MD_COMPANY_FILIAL_PROJECTS (COMPANY_ID, PROJECT_CODE, FILIAL_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, PROJECT_CODE, FILIAL_ID, CREATED_BY, CREATED_ON from OLD_MD_COMPANY_FILIAL_PROJECTS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_INFOS ** ====
insert into MD_COMPANY_INFOS (COMPANY_ID, USER_SYSTEM, USER_ADMIN, FILIAL_HEAD, FILE_UPLOAD_LIMIT, IS_BILLING, REGION_ID, TIMEZONE_CODE, PHONE, EMAIL, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, USER_SYSTEM, USER_ADMIN, FILIAL_HEAD, FILE_UPLOAD_LIMIT, IS_BILLING, REGION_ID, TIMEZONE_CODE, PHONE, EMAIL, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_COMPANY_INFOS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_MODULES ** ====
insert into MD_COMPANY_MODULES (COMPANY_ID, PROJECT_CODE, MODULE_CODE, ATTACHED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PROJECT_CODE, MODULE_CODE, ATTACHED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_COMPANY_MODULES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_FEEDBACKS ** ====
insert into MD_FEEDBACKS (FEEDBACK_ID, COMPANY_ID, COMPANY_NAME, FILIAL_ID, FILIAL_NAME, USER_ID, USER_NAME, PROJECT_CODE, RATE, FEEDBACK_TYPE, NOTE, READ, CREATED_ON) select FEEDBACK_ID, COMPANY_ID, COMPANY_NAME, FILIAL_ID, FILIAL_NAME, USER_ID, USER_NAME, PROJECT_CODE, RATE, FEEDBACK_TYPE, NOTE, READ, CREATED_ON from OLD_MD_FEEDBACKS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_FORM_FAVORITES ** ====
insert into MD_FORM_FAVORITES (COMPANY_ID, USER_ID, FILIAL_ID, FORM_URL, FORM, NAME, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, USER_ID, FILIAL_ID, FORM_URL, FORM, NAME, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_FORM_FAVORITES t where t.company_id = &company_id;
commit;
prompt ==== ** MDF_SIGN_DOCUMENTS ** ====
insert into MDF_SIGN_DOCUMENTS (COMPANY_ID, DOCUMENT_ID, FILIAL_ID, SIGN_KIND, STATUS, URI, TITLE, NOTE, PROCESS_ID, SOURCE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, C_SIGN_LEVEL_COUNT, C_APPROVED_LEVEL_COUNT) select COMPANY_ID, DOCUMENT_ID, FILIAL_ID, SIGN_KIND, STATUS, URI, TITLE, NOTE, PROCESS_ID, SOURCE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, C_SIGN_LEVEL_COUNT, C_APPROVED_LEVEL_COUNT from OLD_MDF_SIGN_DOCUMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MDF_SIGN_TEMPLATES ** ====
insert into MDF_SIGN_TEMPLATES (COMPANY_ID, TEMPLATE_ID, FILIAL_ID, SIGN_KIND, PROCESS_ID, STATE, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TEMPLATE_ID, FILIAL_ID, SIGN_KIND, PROCESS_ID, STATE, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDF_SIGN_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_OAUTH2_USER_DEFAULT_FILIALS ** ====
insert into MD_OAUTH2_USER_DEFAULT_FILIALS (COMPANY_ID, SERVER_CODE, FILIAL_ID) select COMPANY_ID, SERVER_CODE, FILIAL_ID from OLD_MD_OAUTH2_USER_DEFAULT_FILIALS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_OAUTH2_USER_DEFAULT_ROLES ** ====
insert into MD_OAUTH2_USER_DEFAULT_ROLES (COMPANY_ID, SERVER_CODE, ROLE_ID) select COMPANY_ID, SERVER_CODE, ROLE_ID from OLD_MD_OAUTH2_USER_DEFAULT_ROLES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_PREFERENCES ** ====
insert into MD_PREFERENCES (COMPANY_ID, FILIAL_ID, PREF_CODE, PREF_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, PREF_CODE, PREF_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_PREFERENCES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_REQUEST_FORM_ACTIONS ** ====
insert into MD_REQUEST_FORM_ACTIONS (COMPANY_ID, REQUEST_ID, FILIAL_ID, USER_ID, FORM, ACTION_SET, STATE, CREATED_ON, MODIFIED_ON, NOTE) select COMPANY_ID, REQUEST_ID, FILIAL_ID, USER_ID, FORM, ACTION_SET, STATE, CREATED_ON, MODIFIED_ON, NOTE from OLD_MD_REQUEST_FORM_ACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_REQUEST_GRID_COLUMNS ** ====
insert into MD_REQUEST_GRID_COLUMNS (COMPANY_ID, REQUEST_ID, FILIAL_ID, USER_ID, FORM, GRID, COLUMN_SET, STATE, CREATED_ON, NOTE) select COMPANY_ID, REQUEST_ID, FILIAL_ID, USER_ID, FORM, GRID, COLUMN_SET, STATE, CREATED_ON, NOTE from OLD_MD_REQUEST_GRID_COLUMNS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_ROLE_FORM_ACTIONS ** ====
insert into MD_ROLE_FORM_ACTIONS (COMPANY_ID, ROLE_ID, FORM, ACTION_KEY) select COMPANY_ID, ROLE_ID, FORM, ACTION_KEY from OLD_MD_ROLE_FORM_ACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_ROLE_PROJECTS ** ====
insert into MD_ROLE_PROJECTS (COMPANY_ID, ROLE_ID, PROJECT_CODE, CREATED_BY, CREATED_ON) select COMPANY_ID, ROLE_ID, PROJECT_CODE, CREATED_BY, CREATED_ON from OLD_MD_ROLE_PROJECTS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_ROLE_REVOKED_COLUMNS ** ====
insert into MD_ROLE_REVOKED_COLUMNS (COMPANY_ID, ROLE_ID, FORM, GRID, GRID_COLUMN) select COMPANY_ID, ROLE_ID, FORM, GRID, GRID_COLUMN from OLD_MD_ROLE_REVOKED_COLUMNS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USER_FILIALS ** ====
insert into MD_USER_FILIALS (COMPANY_ID, USER_ID, FILIAL_ID) select COMPANY_ID, USER_ID, FILIAL_ID from OLD_MD_USER_FILIALS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USER_FORM_ACTIONS ** ====
insert into MD_USER_FORM_ACTIONS (COMPANY_ID, USER_ID, FILIAL_ID, FORM, ACTION_KEY) select COMPANY_ID, USER_ID, FILIAL_ID, FORM, ACTION_KEY from OLD_MD_USER_FORM_ACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USER_LARGE_SETTINGS ** ====
insert into MD_USER_LARGE_SETTINGS (COMPANY_ID, USER_ID, FILIAL_ID, SETTING_CODE, SETTING_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, USER_ID, FILIAL_ID, SETTING_CODE, SETTING_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_USER_LARGE_SETTINGS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USER_REVOKED_COLUMNS ** ====
insert into MD_USER_REVOKED_COLUMNS (COMPANY_ID, USER_ID, FILIAL_ID, FORM, GRID, GRID_COLUMN) select COMPANY_ID, USER_ID, FILIAL_ID, FORM, GRID, GRID_COLUMN from OLD_MD_USER_REVOKED_COLUMNS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USER_ROLES ** ====
insert into MD_USER_ROLES (COMPANY_ID, USER_ID, FILIAL_ID, ROLE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, USER_ID, FILIAL_ID, ROLE_ID, CREATED_BY, CREATED_ON from OLD_MD_USER_ROLES t where t.company_id = &company_id;
commit;
prompt ==== ** MD_USER_SETTINGS ** ====
insert into MD_USER_SETTINGS (COMPANY_ID, USER_ID, FILIAL_ID, SETTING_CODE, SETTING_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, USER_ID, FILIAL_ID, SETTING_CODE, SETTING_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MD_USER_SETTINGS t where t.company_id = &company_id;
commit;
prompt ==== ** MFK_CLIENTS ** ====
insert into MFK_CLIENTS (COMPANY_ID, FILIAL_ID, CLIENT_ID, CLIENT_SECRET, CLIENT_INN) select COMPANY_ID, FILIAL_ID, CLIENT_ID, CLIENT_SECRET, CLIENT_INN from OLD_MFK_CLIENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MF_SHARED_ROLE_FOLDERS ** ====
insert into MF_SHARED_ROLE_FOLDERS (COMPANY_ID, FILE_ID, ROLE_ID, ACCESS_KIND, CREATED_BY, CREATED_ON) select COMPANY_ID, FILE_ID, ROLE_ID, ACCESS_KIND, CREATED_BY, CREATED_ON from OLD_MF_SHARED_ROLE_FOLDERS t where t.company_id = &company_id;
commit;
prompt ==== ** MF_SHARED_USER_FOLDERS ** ====
insert into MF_SHARED_USER_FOLDERS (COMPANY_ID, FILE_ID, USER_ID, ACCESS_KIND, CREATED_BY, CREATED_ON) select COMPANY_ID, FILE_ID, USER_ID, ACCESS_KIND, CREATED_BY, CREATED_ON from OLD_MF_SHARED_USER_FOLDERS t where t.company_id = &company_id;
commit;
prompt ==== ** MHR_DIVISIONS ** ====
insert into MHR_DIVISIONS (COMPANY_ID, DIVISION_ID, FILIAL_ID, NAME, PARENT_ID, DIVISION_GROUP_ID, OPENED_DATE, CLOSED_DATE, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, DIVISION_ID, FILIAL_ID, NAME, PARENT_ID, DIVISION_GROUP_ID, OPENED_DATE, CLOSED_DATE, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_MHR_DIVISIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_BASE_CURRENCIES ** ====
insert into MK_BASE_CURRENCIES (COMPANY_ID, FILIAL_ID, CURRENCY_ID) select COMPANY_ID, FILIAL_ID, CURRENCY_ID from OLD_MK_BASE_CURRENCIES t where t.company_id = &company_id;
commit;
prompt ==== ** MK_COA ** ====
insert into MK_COA (COMPANY_ID, COA_ID, NAME, GEN_NAME, COA_GROUP_ID, ACCOUNT_TYPE, CURRENCY_KIND, IS_QUANTITY, ON_BALANCE, OVERDRAFT, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, COA_ID, NAME, GEN_NAME, COA_GROUP_ID, ACCOUNT_TYPE, CURRENCY_KIND, IS_QUANTITY, ON_BALANCE, OVERDRAFT, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MK_COA t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_BANK_ACCOUNTS ** ====
insert into MKCS_BANK_ACCOUNTS (COMPANY_ID, BANK_ACCOUNT_ID, BANK_ID, BANK_ACCOUNT_CODE, NAME, PERSON_ID, IS_MAIN, CURRENCY_ID, NOTE, ORDER_NO, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BANK_ACCOUNT_ID, BANK_ID, BANK_ACCOUNT_CODE, NAME, PERSON_ID, IS_MAIN, CURRENCY_ID, NOTE, ORDER_NO, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_BANK_ACCOUNTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_CASHBOXES ** ====
insert into MKCS_CASHBOXES (COMPANY_ID, CASHBOX_ID, FILIAL_ID, NAME, RESPONSIBLE_PERSON_ID, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CASHBOX_ID, FILIAL_ID, NAME, RESPONSIBLE_PERSON_ID, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_CASHBOXES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_CONTRACTS ** ====
insert into MKF_CONTRACTS (COMPANY_ID, CONTRACT_ID, FILIAL_ID, CONTRACT_DATE, CONTRACT_NUMBER, NAME, PERSON_ID, CURRENCY_ID, AMOUNT, EXPIRY_DATE, NOTE, INITIAL_AMOUNT, INITIAL_EXPIRY_DATE, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CONTRACT_ID, FILIAL_ID, CONTRACT_DATE, CONTRACT_NUMBER, NAME, PERSON_ID, CURRENCY_ID, AMOUNT, EXPIRY_DATE, NOTE, INITIAL_AMOUNT, INITIAL_EXPIRY_DATE, STATE, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKF_CONTRACTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_EXPENSE_ARTICLES ** ====
insert into MKF_EXPENSE_ARTICLES (COMPANY_ID, FILIAL_ID, ARTICLE_ID) select COMPANY_ID, FILIAL_ID, ARTICLE_ID from OLD_MKF_EXPENSE_ARTICLES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_INCOME_ARTICLES ** ====
insert into MKF_INCOME_ARTICLES (COMPANY_ID, FILIAL_ID, ARTICLE_ID) select COMPANY_ID, FILIAL_ID, ARTICLE_ID from OLD_MKF_INCOME_ARTICLES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_MARGINS ** ====
insert into MKF_MARGINS (COMPANY_ID, FILIAL_ID, MARGIN_ID) select COMPANY_ID, FILIAL_ID, MARGIN_ID from OLD_MKF_MARGINS t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_PAYMENT_TYPES ** ====
insert into MKF_PAYMENT_TYPES (COMPANY_ID, FILIAL_ID, PAYMENT_TYPE_ID) select COMPANY_ID, FILIAL_ID, PAYMENT_TYPE_ID from OLD_MKF_PAYMENT_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKR_PRICE_TYPES ** ====
insert into MKR_PRICE_TYPES (COMPANY_ID, PRICE_TYPE_ID, NAME, SHORT_NAME, PRICE_TYPE_KIND, CURRENCY_ID, WITH_CARD, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PRICE_TYPE_ID, NAME, SHORT_NAME, PRICE_TYPE_KIND, CURRENCY_ID, WITH_CARD, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKR_PRICE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_AUTHORIZED_CAPITAL_ITEMS ** ====
insert into MKU_AUTHORIZED_CAPITAL_ITEMS (COMPANY_ID, CAPITAL_ITEM_UNIT_ID, CAPITAL_ID, FILIAL_ID, PERSON_ID, AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CAPITAL_ITEM_UNIT_ID, CAPITAL_ID, FILIAL_ID, PERSON_ID, AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_AUTHORIZED_CAPITAL_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_INCOME_STATEMENT_GROUPS ** ====
insert into MKU_INCOME_STATEMENT_GROUPS (COMPANY_ID, GROUP_ID, FILIAL_ID, NAME, PARENT_ID, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, GROUP_ID, FILIAL_ID, NAME, PARENT_ID, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_INCOME_STATEMENT_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_INIT_BALANCES ** ====
insert into MKU_INIT_BALANCES (COMPANY_ID, BALANCE_ID, FILIAL_ID, POSTED, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, NOTE, SOURCE_TABLE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BALANCE_ID, FILIAL_ID, POSTED, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, NOTE, SOURCE_TABLE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_INIT_BALANCES t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_OPERATION_ITEMS ** ====
insert into MKU_OPERATION_ITEMS (COMPANY_ID, OPERATION_ITEM_UNIT_ID, OPERATION_ID, DEBIT_COA_ID, DEBIT_CURRENCY_ID, DEBIT_REF_SET, DEBIT_LINK_REF_SET, CREDIT_COA_ID, CREDIT_CURRENCY_ID, CREDIT_REF_SET, CREDIT_LINK_REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, OPERATION_ITEM_UNIT_ID, OPERATION_ID, DEBIT_COA_ID, DEBIT_CURRENCY_ID, DEBIT_REF_SET, DEBIT_LINK_REF_SET, CREDIT_COA_ID, CREDIT_CURRENCY_ID, CREDIT_REF_SET, CREDIT_LINK_REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_OPERATION_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_PROFIT_SHARE_ITEMS ** ====
insert into MKU_PROFIT_SHARE_ITEMS (COMPANY_ID, PROFIT_SHARE_ITEM_UNIT_ID, PROFIT_SHARE_ID, FILIAL_ID, PERSON_ID, AUTHORIZED_CAPITAL_AMOUNT, AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PROFIT_SHARE_ITEM_UNIT_ID, PROFIT_SHARE_ID, FILIAL_ID, PERSON_ID, AUTHORIZED_CAPITAL_AMOUNT, AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_PROFIT_SHARE_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PRICE_TEMPLATES ** ====
insert into MKW_PRICE_TEMPLATES (COMPANY_ID, TEMPLATE_ID, FILIAL_ID, NAME, CURRENCY_ID, STATE) select COMPANY_ID, TEMPLATE_ID, FILIAL_ID, NAME, CURRENCY_ID, STATE from OLD_MKW_PRICE_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_WAREHOUSES ** ====
insert into MKW_WAREHOUSES (COMPANY_ID, WAREHOUSE_ID, FILIAL_ID, WAREHOUSE_TYPE_ID, NAME, RESPONSIBLE_PERSON_ID, NOTE, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, WAREHOUSE_ID, FILIAL_ID, WAREHOUSE_TYPE_ID, NAME, RESPONSIBLE_PERSON_ID, NOTE, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_WAREHOUSES t where t.company_id = &company_id;
commit;
prompt ==== ** MPR_OPER_TYPE_TEMPLATES ** ====
insert into MPR_OPER_TYPE_TEMPLATES (TEMPLATE_ID, OPER_TYPE_ID, OPERATION_KIND, NAME, SHORT_NAME, ACCOUNTING_TYPE, CORR_COA_ID, CORR_REF_SET, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE, NOTE, STATE, CODE) select TEMPLATE_ID, OPER_TYPE_ID, OPERATION_KIND, NAME, SHORT_NAME, ACCOUNTING_TYPE, CORR_COA_ID, CORR_REF_SET, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE, NOTE, STATE, CODE from OLD_MPR_OPER_TYPE_TEMPLATES t;
commit;
prompt ==== ** MQZ_FILIAL_QUIZ_SETS ** ====
insert into MQZ_FILIAL_QUIZ_SETS (COMPANY_ID, FILIAL_ID, QUIZ_SET_ID, ORDER_NO, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, QUIZ_SET_ID, ORDER_NO, CREATED_BY, CREATED_ON from OLD_MQZ_FILIAL_QUIZ_SETS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_QUIZ_OPTIONS ** ====
insert into MQZ_QUIZ_OPTIONS (COMPANY_ID, OPTION_ID, QUIZ_ID, NAME, VALUE, STATE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, OPTION_ID, QUIZ_ID, NAME, VALUE, STATE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MQZ_QUIZ_OPTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_QUIZ_SET_BINDS ** ====
insert into MQZ_QUIZ_SET_BINDS (COMPANY_ID, QUIZ_SET_ID, QUIZ_ID, ORDER_NO, CREATED_BY, CREATED_ON) select COMPANY_ID, QUIZ_SET_ID, QUIZ_ID, ORDER_NO, CREATED_BY, CREATED_ON from OLD_MQZ_QUIZ_SET_BINDS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_QUIZ_SET_ROLES ** ====
insert into MQZ_QUIZ_SET_ROLES (COMPANY_ID, QUIZ_SET_ID, ROLE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, QUIZ_SET_ID, ROLE_ID, CREATED_BY, CREATED_ON from OLD_MQZ_QUIZ_SET_ROLES t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_REPORT_TEMPLATE_QUIZS ** ====
insert into MQZ_REPORT_TEMPLATE_QUIZS (COMPANY_ID, TEMPLATE_ID, QUIZ_ID, POSITION, ORDER_NO) select COMPANY_ID, TEMPLATE_ID, QUIZ_ID, POSITION, ORDER_NO from OLD_MQZ_REPORT_TEMPLATE_QUIZS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_RESULTS ** ====
insert into MQZ_RESULTS (COMPANY_ID, RESULT_ID, FILIAL_ID, PERSON_ID, QUIZ_SET_ID, NOTE, SOURCE_TABLE, SOURCE_ID, PROJECT_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, RESULT_ID, FILIAL_ID, PERSON_ID, QUIZ_SET_ID, NOTE, SOURCE_TABLE, SOURCE_ID, PROJECT_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MQZ_RESULTS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_LOCAL_CODES ** ====
insert into MRF_LOCAL_CODES (COMPANY_ID, FILIAL_ID, SOURCE_CODE, SOURCE_ID, LOCAL_CODE) select COMPANY_ID, FILIAL_ID, SOURCE_CODE, SOURCE_ID, LOCAL_CODE from OLD_MRF_LOCAL_CODES t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_PERSONS ** ====
insert into MRF_PERSONS (COMPANY_ID, FILIAL_ID, PERSON_ID, STATE) select COMPANY_ID, FILIAL_ID, PERSON_ID, STATE from OLD_MRF_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROOM_TYPES ** ====
insert into MRF_ROOM_TYPES (COMPANY_ID, FILIAL_ID, ROOM_TYPE_ID, NAME, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROOM_TYPE_ID, NAME, STATE, ORDER_NO, CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_ROOM_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_SECTORS ** ====
insert into MRF_SECTORS (COMPANY_ID, FILIAL_ID, SECTOR_ID) select COMPANY_ID, FILIAL_ID, SECTOR_ID from OLD_MRF_SECTORS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_SUBFILIALS ** ====
insert into MRF_SUBFILIALS (COMPANY_ID, SUBFILIAL_ID, FILIAL_ID, NAME, ORDER_NO, STATE, CODE) select COMPANY_ID, SUBFILIAL_ID, FILIAL_ID, NAME, ORDER_NO, STATE, CODE from OLD_MRF_SUBFILIALS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_VANS ** ====
insert into MRF_VANS (COMPANY_ID, FILIAL_ID, VAN_ID, NAME, VAN_NUMBER, CARRYING, VOLUME, NOTE, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, FILIAL_ID, VAN_ID, NAME, VAN_NUMBER, CARRYING, VOLUME, NOTE, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MRF_VANS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_LEGAL_PERSONS ** ====
insert into MR_LEGAL_PERSONS (COMPANY_ID, PERSON_ID, NAME, SHORT_NAME, PRIMARY_PERSON_ID, LATLNG, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_ID, NAME, SHORT_NAME, PRIMARY_PERSON_ID, LATLNG, STATE, CODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_LEGAL_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_NATURAL_PERSON_FAMILIARS ** ====
insert into MR_NATURAL_PERSON_FAMILIARS (COMPANY_ID, PERSON_ID, FAMILIAR_ID, NOTE, STATE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_ID, FAMILIAR_ID, NOTE, STATE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_NATURAL_PERSON_FAMILIARS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PERSON_DETAILS ** ====
insert into MR_PERSON_DETAILS (COMPANY_ID, PERSON_ID, TIN, CEA, MAIN_PHONE, WEB, FAX, TELEGRAM, POST_ADDRESS, ADDRESS, ADDRESS_GUIDE, LEGAL_ADDRESS, DIRECTOR_NAME, DIRECTOR_FIRST_NAME, DIRECTOR_LAST_NAME, DIRECTOR_MIDDLE_NAME, ACCOUNTANT_NAME, ACCOUNTANT_FIRST_NAME, ACCOUNTANT_LAST_NAME, ACCOUNTANT_MIDDLE_NAME, PARENT_PERSON_ID, OWNER_PERSON_ID, REGION_ID, LEGAL_FORM_ID, BARCODE, NOTE, ZIP_CODE, VAT_CODE, IS_BUDGETARIAN, RECOMMENDED_VISIT_TIME, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_ID, TIN, CEA, MAIN_PHONE, WEB, FAX, TELEGRAM, POST_ADDRESS, ADDRESS, ADDRESS_GUIDE, LEGAL_ADDRESS, DIRECTOR_NAME, DIRECTOR_FIRST_NAME, DIRECTOR_LAST_NAME, DIRECTOR_MIDDLE_NAME, ACCOUNTANT_NAME, ACCOUNTANT_FIRST_NAME, ACCOUNTANT_LAST_NAME, ACCOUNTANT_MIDDLE_NAME, PARENT_PERSON_ID, OWNER_PERSON_ID, REGION_ID, LEGAL_FORM_ID, BARCODE, NOTE, ZIP_CODE, VAT_CODE, IS_BUDGETARIAN, RECOMMENDED_VISIT_TIME, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PERSON_DETAILS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PERSON_TYPES ** ====
insert into MR_PERSON_TYPES (COMPANY_ID, PERSON_TYPE_ID, PERSON_GROUP_ID, NAME, ORDER_NO, STATE, CODE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_TYPE_ID, PERSON_GROUP_ID, NAME, ORDER_NO, STATE, CODE, PCODE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PERSON_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PRODUCTS ** ====
insert into MR_PRODUCTS (COMPANY_ID, PRODUCT_ID, NAME, GEN_NAME, SHORT_NAME, MEASURE_ID, PRODUCT_KIND, PRODUCER_ID, BOX_TYPE_ID, BOX_QUANT, WEIGHT_NETTO, WEIGHT_BRUTTO, LITR, ORDER_NO, STATE, CODE, ARTICLE_CODE, PHONEX_NAME, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PRODUCT_ID, NAME, GEN_NAME, SHORT_NAME, MEASURE_ID, PRODUCT_KIND, PRODUCER_ID, BOX_TYPE_ID, BOX_QUANT, WEIGHT_NETTO, WEIGHT_BRUTTO, LITR, ORDER_NO, STATE, CODE, ARTICLE_CODE, PHONEX_NAME, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PRODUCT_TYPES ** ====
insert into MR_PRODUCT_TYPES (COMPANY_ID, PRODUCT_TYPE_ID, PRODUCT_GROUP_ID, NAME, ORDER_NO, STATE, CODE, PHOTO_SHA, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PRODUCT_TYPE_ID, PRODUCT_GROUP_ID, NAME, ORDER_NO, STATE, CODE, PHOTO_SHA, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PRODUCT_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_ROLE_FUNCTIONS ** ====
insert into MR_ROLE_FUNCTIONS (COMPANY_ID, ROLE_ID, FUNCTION_ID, PROJECT_CODE, STEP_BY_STEP, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROLE_ID, FUNCTION_ID, PROJECT_CODE, STEP_BY_STEP, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MR_ROLE_FUNCTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_CHAT_MEMBERS ** ====
insert into MS_CHAT_MEMBERS (COMPANY_ID, CHAT_ID, USER_ID, IS_ADMIN, MUTE, CREATED_BY, CREATED_ON) select COMPANY_ID, CHAT_ID, USER_ID, IS_ADMIN, MUTE, CREATED_BY, CREATED_ON from OLD_MS_CHAT_MEMBERS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_CHAT_MESSAGES ** ====
insert into MS_CHAT_MESSAGES (COMPANY_ID, MESSAGE_ID, CHAT_ID, TEXT, FILE_SHA, REPLY_MESSAGE_ID, PINNED, PRE_MESSAGE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, MESSAGE_ID, CHAT_ID, TEXT, FILE_SHA, REPLY_MESSAGE_ID, PINNED, PRE_MESSAGE_ID, CREATED_BY, CREATED_ON from OLD_MS_CHAT_MESSAGES t where t.company_id = &company_id;
commit;
prompt ==== ** MS_KANBANS ** ====
insert into MS_KANBANS (COMPANY_ID, USER_ID, BUILD_KIND, PROJECT_ID, TASK_GROUP_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, USER_ID, BUILD_KIND, PROJECT_ID, TASK_GROUP_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_KANBANS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_MESSAGE_RECEIVERS ** ====
insert into MS_MESSAGE_RECEIVERS (COMPANY_ID, MESSAGE_ID, USER_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MESSAGE_ID, USER_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_MESSAGE_RECEIVERS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_INVOLVE_STATUSES ** ====
insert into MS_TASK_INVOLVE_STATUSES (COMPANY_ID, INVOLVE_KIND, DIRECTION, STATUS_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INVOLVE_KIND, DIRECTION, STATUS_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_INVOLVE_STATUSES t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_PROJECT_PERSONS ** ====
insert into MS_TASK_PROJECT_PERSONS (COMPANY_ID, PROJECT_ID, PERSON_ID, ACCESS_KIND, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PROJECT_ID, PERSON_ID, ACCESS_KIND, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_PROJECT_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASKS ** ====
insert into MS_TASKS (COMPANY_ID, TASK_ID, TITLE, STATUS_ID, TASK_KIND, FIRING, GRADE, SPENT_TIME, PROJECT_ID, PARENT_ID, BEGIN_TIME, END_TIME, FORM, FORM_PARAM, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TASK_ID, TITLE, STATUS_ID, TASK_KIND, FIRING, GRADE, SPENT_TIME, PROJECT_ID, PARENT_ID, BEGIN_TIME, END_TIME, FORM, FORM_PARAM, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASKS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_TYPES ** ====
insert into MS_TASK_TYPES (COMPANY_ID, TASK_TYPE_ID, TASK_GROUP_ID, NAME, STATE, COLOR, TEXT_COLOR, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TASK_TYPE_ID, TASK_GROUP_ID, NAME, STATE, COLOR, TEXT_COLOR, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MT_HOSTS ** ====
insert into MT_HOSTS (COMPANY_ID, HOST_ID, USER_ID, DEVICE_ID, TOKEN_ID) select COMPANY_ID, HOST_ID, USER_ID, DEVICE_ID, TOKEN_ID from OLD_MT_HOSTS t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_FILIAL_COMMENTS ** ====
insert into MVT_FILIAL_COMMENTS (COMPANY_ID, FILIAL_ID, COMMENT_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, COMMENT_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVT_FILIAL_COMMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_FILIAL_PHOTO_TYPES ** ====
insert into MVT_FILIAL_PHOTO_TYPES (COMPANY_ID, FILIAL_ID, PHOTO_TYPE_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, PHOTO_TYPE_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVT_FILIAL_PHOTO_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_FILIAL_VIDEO_TYPES ** ====
insert into MVT_FILIAL_VIDEO_TYPES (COMPANY_ID, FILIAL_ID, VIDEO_TYPE_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, VIDEO_TYPE_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVT_FILIAL_VIDEO_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MVTM_EQUIPMENTS ** ====
insert into MVTM_EQUIPMENTS (COMPANY_ID, EQUIPMENT_ID, FILIAL_ID, VISIT_ID, SERIAL_ID, BARCODE, CODE, NOTE, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, EQUIPMENT_ID, FILIAL_ID, VISIT_ID, SERIAL_ID, BARCODE, CODE, NOTE, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVTM_EQUIPMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_ROLE_COMMENTS ** ====
insert into MVT_ROLE_COMMENTS (COMPANY_ID, ROLE_ID, COMMENT_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, ROLE_ID, COMMENT_ID, CREATED_BY, CREATED_ON from OLD_MVT_ROLE_COMMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_ROLE_PHOTO_TYPES ** ====
insert into MVT_ROLE_PHOTO_TYPES (COMPANY_ID, ROLE_ID, PHOTO_TYPE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, ROLE_ID, PHOTO_TYPE_ID, CREATED_BY, CREATED_ON from OLD_MVT_ROLE_PHOTO_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_ROLE_VIDEO_TYPES ** ====
insert into MVT_ROLE_VIDEO_TYPES (COMPANY_ID, ROLE_ID, VIDEO_TYPE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, ROLE_ID, VIDEO_TYPE_ID, CREATED_BY, CREATED_ON from OLD_MVT_ROLE_VIDEO_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_VISIT_COMMENTS ** ====
insert into MVT_VISIT_COMMENTS (COMPANY_ID, VISIT_ID, COMMENT_ID, FILIAL_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, VISIT_ID, COMMENT_ID, FILIAL_ID, CREATED_BY, CREATED_ON from OLD_MVT_VISIT_COMMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_VISIT_PHOTOS ** ====
insert into MVT_VISIT_PHOTOS (COMPANY_ID, VISIT_ID, PHOTO_ID, FILIAL_ID, STATUS, PHOTO_DATE, PHOTO_TYPE_ID, PHOTO_SHA, TEMP_SHA, LATLNG, NOTE, DELETED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, VISIT_ID, PHOTO_ID, FILIAL_ID, STATUS, PHOTO_DATE, PHOTO_TYPE_ID, PHOTO_SHA, TEMP_SHA, LATLNG, NOTE, DELETED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVT_VISIT_PHOTOS t where t.company_id = &company_id;
commit;
prompt ==== ** MVT_VISIT_VIDEOS ** ====
insert into MVT_VISIT_VIDEOS (COMPANY_ID, VISIT_ID, VIDEO_ID, FILIAL_ID, STATUS, VIDEO_DATE, VIDEO_TYPE_ID, VIDEO_SHA, TEMP_SHA, LATLNG, NOTE, DELETED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, VISIT_ID, VIDEO_ID, FILIAL_ID, STATUS, VIDEO_DATE, VIDEO_TYPE_ID, VIDEO_SHA, TEMP_SHA, LATLNG, NOTE, DELETED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVT_VISIT_VIDEOS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_ATTESTATION_TESTINGS ** ====
insert into HLN_ATTESTATION_TESTINGS (COMPANY_ID, FILIAL_ID, ATTESTATION_ID, TESTING_ID) select COMPANY_ID, FILIAL_ID, ATTESTATION_ID, TESTING_ID from OLD_HLN_ATTESTATION_TESTINGS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_PATTERN_QUESTION_TYPES ** ====
insert into HLN_PATTERN_QUESTION_TYPES (COMPANY_ID, FILIAL_ID, PATTERN_ID, QUESTION_TYPE_ID, QUESTION_GROUP_ID) select COMPANY_ID, FILIAL_ID, PATTERN_ID, QUESTION_TYPE_ID, QUESTION_GROUP_ID from OLD_HLN_PATTERN_QUESTION_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_QUESTION_GROUP_BINDS ** ====
insert into HLN_QUESTION_GROUP_BINDS (COMPANY_ID, FILIAL_ID, QUESTION_ID, QUESTION_GROUP_ID, QUESTION_TYPE_ID) select COMPANY_ID, FILIAL_ID, QUESTION_ID, QUESTION_GROUP_ID, QUESTION_TYPE_ID from OLD_HLN_QUESTION_GROUP_BINDS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_TESTING_QUESTIONS ** ====
insert into HLN_TESTING_QUESTIONS (COMPANY_ID, FILIAL_ID, TESTING_ID, QUESTION_ID, ORDER_NO, WRITING_ANSWER, MARKED, CORRECT) select COMPANY_ID, FILIAL_ID, TESTING_ID, QUESTION_ID, ORDER_NO, WRITING_ANSWER, MARKED, CORRECT from OLD_HLN_TESTING_QUESTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_TRAINING_PERSONS ** ====
insert into HLN_TRAINING_PERSONS (COMPANY_ID, FILIAL_ID, TRAINING_ID, PERSON_ID, PASSED) select COMPANY_ID, FILIAL_ID, TRAINING_ID, PERSON_ID, PASSED from OLD_HLN_TRAINING_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_CV_CONTRACTS ** ====
insert into HPD_CV_CONTRACTS (COMPANY_ID, FILIAL_ID, CONTRACT_ID, CONTRACT_NUMBER, DIVISION_ID, PERSON_ID, BEGIN_DATE, END_DATE, CONTRACT_KIND, ACCESS_TO_ADD_ITEM, POSTED, EARLY_CLOSED_DATE, EARLY_CLOSED_NOTE, NOTE) select COMPANY_ID, FILIAL_ID, CONTRACT_ID, CONTRACT_NUMBER, DIVISION_ID, PERSON_ID, BEGIN_DATE, END_DATE, CONTRACT_KIND, ACCESS_TO_ADD_ITEM, POSTED, EARLY_CLOSED_DATE, EARLY_CLOSED_NOTE, NOTE from OLD_HPD_CV_CONTRACTS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_SCHEDULE_CHANGES ** ====
insert into HPD_SCHEDULE_CHANGES (COMPANY_ID, FILIAL_ID, JOURNAL_ID, DIVISION_ID, BEGIN_DATE, END_DATE) select COMPANY_ID, FILIAL_ID, JOURNAL_ID, DIVISION_ID, BEGIN_DATE, END_DATE from OLD_HPD_SCHEDULE_CHANGES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_VACATION_LIMIT_CHANGES ** ====
insert into HPD_VACATION_LIMIT_CHANGES (COMPANY_ID, FILIAL_ID, JOURNAL_ID, DIVISION_ID, CHANGE_DATE, DAYS_LIMIT) select COMPANY_ID, FILIAL_ID, JOURNAL_ID, DIVISION_ID, CHANGE_DATE, DAYS_LIMIT from OLD_HPD_VACATION_LIMIT_CHANGES t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_PLAN_TYPE_DIVISIONS ** ====
insert into HPER_PLAN_TYPE_DIVISIONS (COMPANY_ID, FILIAL_ID, PLAN_TYPE_ID, DIVISION_ID) select COMPANY_ID, FILIAL_ID, PLAN_TYPE_ID, DIVISION_ID from OLD_HPER_PLAN_TYPE_DIVISIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_PLAN_TYPE_TASK_TYPES ** ====
insert into HPER_PLAN_TYPE_TASK_TYPES (COMPANY_ID, FILIAL_ID, PLAN_TYPE_ID, TASK_TYPE_ID) select COMPANY_ID, FILIAL_ID, PLAN_TYPE_ID, TASK_TYPE_ID from OLD_HPER_PLAN_TYPE_TASK_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_OPER_TYPE_TEMPLATES ** ====
insert into HPR_OPER_TYPE_TEMPLATES (TEMPLATE_ID, OPER_TYPE_ID, OPER_GROUP_ID, ESTIMATION_TYPE, ESTIMATION_FORMULA) select TEMPLATE_ID, OPER_TYPE_ID, OPER_GROUP_ID, ESTIMATION_TYPE, ESTIMATION_FORMULA from OLD_HPR_OPER_TYPE_TEMPLATES t;
commit;
prompt ==== ** HPR_PENALTIES ** ====
insert into HPR_PENALTIES (COMPANY_ID, FILIAL_ID, PENALTY_ID, MONTH, NAME, DIVISION_ID, STATE) select COMPANY_ID, FILIAL_ID, PENALTY_ID, MONTH, NAME, DIVISION_ID, STATE from OLD_HPR_PENALTIES t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_TIMEBOOKS ** ====
insert into HPR_TIMEBOOKS (COMPANY_ID, FILIAL_ID, TIMEBOOK_ID, TIMEBOOK_NUMBER, TIMEBOOK_DATE, PERIOD_BEGIN, PERIOD_END, PERIOD_KIND, DIVISION_ID, POSTED, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, FILIAL_ID, TIMEBOOK_ID, TIMEBOOK_NUMBER, TIMEBOOK_DATE, PERIOD_BEGIN, PERIOD_END, PERIOD_KIND, DIVISION_ID, POSTED, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_HPR_TIMEBOOKS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_WAGE_SHEETS ** ====
insert into HPR_WAGE_SHEETS (COMPANY_ID, FILIAL_ID, SHEET_ID, SHEET_NUMBER, SHEET_DATE, ROUND_VALUE, PERIOD_BEGIN, PERIOD_END, PERIOD_KIND, DIVISION_ID, NOTE, SHEET_KIND, POSTED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, SHEET_ID, SHEET_NUMBER, SHEET_DATE, ROUND_VALUE, PERIOD_BEGIN, PERIOD_END, PERIOD_KIND, DIVISION_ID, NOTE, SHEET_KIND, POSTED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HPR_WAGE_SHEETS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_CANDIDATE_RECOMS ** ====
insert into HREF_CANDIDATE_RECOMS (COMPANY_ID, FILIAL_ID, CANDIDATE_ID, RECOMMENDATION_ID, SENDER_NAME, SENDER_PHONE_NUMBER, SENDER_EMAIL, FILE_SHA, ORDER_NO, FEEDBACK, NOTE) select COMPANY_ID, FILIAL_ID, CANDIDATE_ID, RECOMMENDATION_ID, SENDER_NAME, SENDER_PHONE_NUMBER, SENDER_EMAIL, FILE_SHA, ORDER_NO, FEEDBACK, NOTE from OLD_HREF_CANDIDATE_RECOMS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_DOCUMENT_FILES ** ====
insert into HREF_PERSON_DOCUMENT_FILES (COMPANY_ID, DOCUMENT_ID, SHA) select COMPANY_ID, DOCUMENT_ID, SHA from OLD_HREF_PERSON_DOCUMENT_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_PERSON_EDU_STAGE_FILES ** ====
insert into HREF_PERSON_EDU_STAGE_FILES (COMPANY_ID, PERSON_EDU_STAGE_ID, SHA) select COMPANY_ID, PERSON_EDU_STAGE_ID, SHA from OLD_HREF_PERSON_EDU_STAGE_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_DIVISION_SCHEDULES ** ====
insert into HRM_DIVISION_SCHEDULES (COMPANY_ID, FILIAL_ID, DIVISION_ID, SCHEDULE_ID) select COMPANY_ID, FILIAL_ID, DIVISION_ID, SCHEDULE_ID from OLD_HRM_DIVISION_SCHEDULES t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_REGISTER_RANKS ** ====
insert into HRM_REGISTER_RANKS (COMPANY_ID, FILIAL_ID, REGISTER_ID, RANK_ID, WAGE, COEFFICIENT, ORDER_NO) select COMPANY_ID, FILIAL_ID, REGISTER_ID, RANK_ID, WAGE, COEFFICIENT, ORDER_NO from OLD_HRM_REGISTER_RANKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_DEVICES ** ====
insert into HTT_DEVICES (COMPANY_ID, DEVICE_ID, NAME, DEVICE_TYPE_ID, SERIAL_NUMBER, MODEL_ID, LOCATION_ID, TRACK_TYPES, MARK_TYPES, EMOTION_TYPES, LANG_CODE, USE_SETTINGS, AUTOGEN_INPUTS, AUTOGEN_OUTPUTS, RESTRICTED_TYPE, LAST_SEEN_ON, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DEVICE_ID, NAME, DEVICE_TYPE_ID, SERIAL_NUMBER, MODEL_ID, LOCATION_ID, TRACK_TYPES, MARK_TYPES, EMOTION_TYPES, LANG_CODE, USE_SETTINGS, AUTOGEN_INPUTS, AUTOGEN_OUTPUTS, RESTRICTED_TYPE, LAST_SEEN_ON, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HTT_DEVICES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_GPS_TRACK_BATCHES ** ====
insert into HTT_GPS_TRACK_BATCHES (COMPANY_ID, FILIAL_ID, TRACK_ID, BATCH_ID) select COMPANY_ID, FILIAL_ID, TRACK_ID, BATCH_ID from OLD_HTT_GPS_TRACK_BATCHES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_GPS_TRACK_DATAS ** ====
insert into HTT_GPS_TRACK_DATAS (COMPANY_ID, FILIAL_ID, TRACK_ID, DATA) select COMPANY_ID, FILIAL_ID, TRACK_ID, DATA from OLD_HTT_GPS_TRACK_DATAS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_LOCATION_FILIALS ** ====
insert into HTT_LOCATION_FILIALS (COMPANY_ID, FILIAL_ID, LOCATION_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, LOCATION_ID, CREATED_BY, CREATED_ON from OLD_HTT_LOCATION_FILIALS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_LOCATION_QR_CODES ** ====
insert into HTT_LOCATION_QR_CODES (COMPANY_ID, UNIQUE_KEY, LOCATION_ID, STATE, CREATED_ON) select COMPANY_ID, UNIQUE_KEY, LOCATION_ID, STATE, CREATED_ON from OLD_HTT_LOCATION_QR_CODES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_DAYS ** ====
insert into HTT_SCHEDULE_DAYS (COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER) select COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER from OLD_HTT_SCHEDULE_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_ORIGIN_DAYS ** ====
insert into HTT_SCHEDULE_ORIGIN_DAYS (COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER) select COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER from OLD_HTT_SCHEDULE_ORIGIN_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_PATTERN_DAYS ** ====
insert into HTT_SCHEDULE_PATTERN_DAYS (COMPANY_ID, FILIAL_ID, SCHEDULE_ID, DAY_NO, DAY_KIND, PLAN_TIME, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME) select COMPANY_ID, FILIAL_ID, SCHEDULE_ID, DAY_NO, DAY_KIND, PLAN_TIME, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME from OLD_HTT_SCHEDULE_PATTERN_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_PATTERNS ** ====
insert into HTT_SCHEDULE_PATTERNS (COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_KIND, ALL_DAYS_EQUAL, COUNT_DAYS) select COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_KIND, ALL_DAYS_EQUAL, COUNT_DAYS from OLD_HTT_SCHEDULE_PATTERNS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_REGISTRIES ** ====
insert into HTT_SCHEDULE_REGISTRIES (COMPANY_ID, FILIAL_ID, REGISTRY_ID, REGISTRY_DATE, REGISTRY_NUMBER, REGISTRY_KIND, MONTH, DIVISION_ID, NOTE, POSTED, SHIFT, INPUT_ACCEPTANCE, OUTPUT_ACCEPTANCE, TRACK_DURATION, COUNT_LATE, COUNT_LACK, COUNT_EARLY, CALENDAR_ID, TAKE_HOLIDAYS, TAKE_NONWORKING, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, REGISTRY_ID, REGISTRY_DATE, REGISTRY_NUMBER, REGISTRY_KIND, MONTH, DIVISION_ID, NOTE, POSTED, SHIFT, INPUT_ACCEPTANCE, OUTPUT_ACCEPTANCE, TRACK_DURATION, COUNT_LATE, COUNT_LACK, COUNT_EARLY, CALENDAR_ID, TAKE_HOLIDAYS, TAKE_NONWORKING, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HTT_SCHEDULE_REGISTRIES t where t.company_id = &company_id;
commit;
prompt ==== ** MBI_TEMPLATE_FIELDS ** ====
insert into MBI_TEMPLATE_FIELDS (COMPANY_ID, FIELD_ID, TEMPLATE_ID, FIELD_KINDS, LEVEL_CODE, MARK_CODE, PRIMARY_FIELD, TRANSLATE, FIELD_TYPE, CONN_FIELD, CONN_PARAM, COLLECTABLE, NULLABLE, PERIOD_KIND, PERIOD_COUNT, GROUP_KIND, TOTAL_GROUP_KIND, EXPRESSION, ORDER_NO) select COMPANY_ID, FIELD_ID, TEMPLATE_ID, FIELD_KINDS, LEVEL_CODE, MARK_CODE, PRIMARY_FIELD, TRANSLATE, FIELD_TYPE, CONN_FIELD, CONN_PARAM, COLLECTABLE, NULLABLE, PERIOD_KIND, PERIOD_COUNT, GROUP_KIND, TOTAL_GROUP_KIND, EXPRESSION, ORDER_NO from OLD_MBI_TEMPLATE_FIELDS t where t.company_id = &company_id;
commit;
prompt ==== ** MBI_TEMPLATE_INIT_FILTERS ** ====
insert into MBI_TEMPLATE_INIT_FILTERS (COMPANY_ID, TEMPLATE_ID, EXPRESSION, PARAM) select COMPANY_ID, TEMPLATE_ID, EXPRESSION, PARAM from OLD_MBI_TEMPLATE_INIT_FILTERS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ACTION_BONUSES ** ====
insert into MCG_ACTION_BONUSES (COMPANY_ID, BONUS_ID, CONDITION_ID, STATE, BONUS_KIND, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BONUS_ID, CONDITION_ID, STATE, BONUS_KIND, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ACTION_BONUSES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ACTION_PERSON_TYPES ** ====
insert into MCG_ACTION_PERSON_TYPES (COMPANY_ID, ACTION_ID, PERSON_KIND, PERSON_GROUP_ID, PERSON_TYPE_ID, ORDER_LIMIT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ACTION_ID, PERSON_KIND, PERSON_GROUP_ID, PERSON_TYPE_ID, ORDER_LIMIT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ACTION_PERSON_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ACTION_PRICE_TYPES ** ====
insert into MCG_ACTION_PRICE_TYPES (COMPANY_ID, ACTION_ID, FILIAL_ID, PRICE_TYPE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, ACTION_ID, FILIAL_ID, PRICE_TYPE_ID, CREATED_BY, CREATED_ON from OLD_MCG_ACTION_PRICE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ACTION_RULES ** ====
insert into MCG_ACTION_RULES (COMPANY_ID, RULE_ID, CONDITION_ID, CALC_KIND, WEIGHT_KIND, RULE_KIND, REQUIRED_COUNT, MAIN_VALUE, EXTRA_VALUE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, RULE_ID, CONDITION_ID, CALC_KIND, WEIGHT_KIND, RULE_KIND, REQUIRED_COUNT, MAIN_VALUE, EXTRA_VALUE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ACTION_RULES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_DISCOUNT_PRODUCTS ** ====
insert into MCG_DISCOUNT_PRODUCTS (COMPANY_ID, DISCOUNT_TYPE_ID, PRODUCT_ID) select COMPANY_ID, DISCOUNT_TYPE_ID, PRODUCT_ID from OLD_MCG_DISCOUNT_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_FILIAL_ACTIONS ** ====
insert into MCG_FILIAL_ACTIONS (COMPANY_ID, FILIAL_ID, ACTION_ID, WAREHOUSE_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ACTION_ID, WAREHOUSE_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_FILIAL_ACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_MML_PERSON_TYPE_INVENTORIES ** ====
insert into MCG_MML_PERSON_TYPE_INVENTORIES (COMPANY_ID, MML_ID, PERSON_TYPE_ID, PRODUCT_ID) select COMPANY_ID, MML_ID, PERSON_TYPE_ID, PRODUCT_ID from OLD_MCG_MML_PERSON_TYPE_INVENTORIES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ORDER_PRODUCT_LIMIT_ITEMS ** ====
insert into MCG_ORDER_PRODUCT_LIMIT_ITEMS (COMPANY_ID, ORDER_PRODUCT_LIMIT_ITEM_ID, ORDER_PRODUCT_LIMIT_ID, PRODUCT_ID, QUANTITY, ORDER_NO, CREATED_BY, CREATED_ON) select COMPANY_ID, ORDER_PRODUCT_LIMIT_ITEM_ID, ORDER_PRODUCT_LIMIT_ID, PRODUCT_ID, QUANTITY, ORDER_NO, CREATED_BY, CREATED_ON from OLD_MCG_ORDER_PRODUCT_LIMIT_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ORDER_RESTRICTION_BANS ** ====
insert into MCG_ORDER_RESTRICTION_BANS (COMPANY_ID, BAN_ID, ORDER_RESTRICTION_ID, BAN_KIND, VALUE) select COMPANY_ID, BAN_ID, ORDER_RESTRICTION_ID, BAN_KIND, VALUE from OLD_MCG_ORDER_RESTRICTION_BANS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ORDER_RESTRICTION_PERSON_TYPES ** ====
insert into MCG_ORDER_RESTRICTION_PERSON_TYPES (COMPANY_ID, ORDER_RESTRICTION_ID, PERSON_TYPE_ID) select COMPANY_ID, ORDER_RESTRICTION_ID, PERSON_TYPE_ID from OLD_MCG_ORDER_RESTRICTION_PERSON_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_OVERLOADS ** ====
insert into MCG_OVERLOADS (COMPANY_ID, OVERLOAD_ID, FILIAL_ID, NAME, BEGIN_DATE, END_DATE, STATE, OVERLOAD_KIND, WEIGHT_KIND, CYCLIC, IS_REQUIRED, PRODUCT_ID, INVENTORY_KIND, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, OVERLOAD_ID, FILIAL_ID, NAME, BEGIN_DATE, END_DATE, STATE, OVERLOAD_KIND, WEIGHT_KIND, CYCLIC, IS_REQUIRED, PRODUCT_ID, INVENTORY_KIND, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_OVERLOADS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_PERSON_TYPE_ORDER_PRODUCT_LIMITS ** ====
insert into MCG_PERSON_TYPE_ORDER_PRODUCT_LIMITS (COMPANY_ID, PERSON_TYPE_ID, ORDER_PRODUCT_LIMIT_ID, ORDER_NO, CREATED_BY, CREATED_ON) select COMPANY_ID, PERSON_TYPE_ID, ORDER_PRODUCT_LIMIT_ID, ORDER_NO, CREATED_BY, CREATED_ON from OLD_MCG_PERSON_TYPE_ORDER_PRODUCT_LIMITS t where t.company_id = &company_id;
commit;
prompt ==== ** MD_COMPANY_FILIAL_MODULES ** ====
insert into MD_COMPANY_FILIAL_MODULES (COMPANY_ID, PROJECT_CODE, MODULE_CODE, FILIAL_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, PROJECT_CODE, MODULE_CODE, FILIAL_ID, CREATED_BY, CREATED_ON from OLD_MD_COMPANY_FILIAL_MODULES t where t.company_id = &company_id;
commit;
prompt ==== ** MDF_SIGN_DOCUMENT_LEVELS ** ====
insert into MDF_SIGN_DOCUMENT_LEVELS (COMPANY_ID, DOCUMENT_ID, LEVEL_NO, SIGN_KIND, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, C_STATE, C_SIGN_MIN_COUNT, C_GROUP_COUNT, C_APPROVED_GROUP_COUNT) select COMPANY_ID, DOCUMENT_ID, LEVEL_NO, SIGN_KIND, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, C_STATE, C_SIGN_MIN_COUNT, C_GROUP_COUNT, C_APPROVED_GROUP_COUNT from OLD_MDF_SIGN_DOCUMENT_LEVELS t where t.company_id = &company_id;
commit;
prompt ==== ** MDF_SIGN_TEMPLATE_LEVELS ** ====
insert into MDF_SIGN_TEMPLATE_LEVELS (COMPANY_ID, TEMPLATE_ID, LEVEL_NO, SIGN_KIND, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TEMPLATE_ID, LEVEL_NO, SIGN_KIND, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDF_SIGN_TEMPLATE_LEVELS t where t.company_id = &company_id;
commit;
prompt ==== ** MFG_SPECIFICATION_INPUTS ** ====
insert into MFG_SPECIFICATION_INPUTS (COMPANY_ID, INPUT_ITEM_ID, SPECIFICATION_ID, PRODUCT_ID, INVENTORY_KIND, QUANTITY, ORDER_NO) select COMPANY_ID, INPUT_ITEM_ID, SPECIFICATION_ID, PRODUCT_ID, INVENTORY_KIND, QUANTITY, ORDER_NO from OLD_MFG_SPECIFICATION_INPUTS t where t.company_id = &company_id;
commit;
prompt ==== ** MFG_SPECIFICATION_OUTPUTS ** ====
insert into MFG_SPECIFICATION_OUTPUTS (COMPANY_ID, OUTPUT_ITEM_ID, SPECIFICATION_ID, PRODUCT_ID, INVENTORY_KIND, QUANTITY, COST_PERCENTAGE, EXPIRY_DAYS, ORDER_NO) select COMPANY_ID, OUTPUT_ITEM_ID, SPECIFICATION_ID, PRODUCT_ID, INVENTORY_KIND, QUANTITY, COST_PERCENTAGE, EXPIRY_DAYS, ORDER_NO from OLD_MFG_SPECIFICATION_OUTPUTS t where t.company_id = &company_id;
commit;
prompt ==== ** MFM_MOVEMENT_REQUESTS ** ====
insert into MFM_MOVEMENT_REQUESTS (COMPANY_ID, REQUEST_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRICE_TYPE_ID, STATUS, NOTE, REASON_ID, BARCODE, C_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REQUEST_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRICE_TYPE_ID, STATUS, NOTE, REASON_ID, BARCODE, C_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MFM_MOVEMENT_REQUESTS t where t.company_id = &company_id;
commit;
prompt ==== ** MHR_JOBS ** ====
insert into MHR_JOBS (COMPANY_ID, JOB_ID, FILIAL_ID, NAME, JOB_GROUP_ID, EXPENSE_COA_ID, EXPENSE_REF_SET, STATE, CODE, C_DIVISIONS_EXIST, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, JOB_ID, FILIAL_ID, NAME, JOB_GROUP_ID, EXPENSE_COA_ID, EXPENSE_REF_SET, STATE, CODE, C_DIVISIONS_EXIST, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_MHR_JOBS t where t.company_id = &company_id;
commit;
prompt ==== ** MHR_PARENT_DIVISIONS ** ====
insert into MHR_PARENT_DIVISIONS (COMPANY_ID, FILIAL_ID, DIVISION_ID, PARENT_ID, LVL) select COMPANY_ID, FILIAL_ID, DIVISION_ID, PARENT_ID, LVL from OLD_MHR_PARENT_DIVISIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_BAN_EXCEPT_USERS ** ====
insert into MK_BAN_EXCEPT_USERS (COMPANY_ID, FILIAL_ID, USER_ID) select COMPANY_ID, FILIAL_ID, USER_ID from OLD_MK_BAN_EXCEPT_USERS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_BANK_EXCHANGES ** ====
insert into MKCS_BANK_EXCHANGES (COMPANY_ID, EXCHANGE_ID, FILIAL_ID, STATUS, EXCHANGE_NUMBER, FROM_BANK_ACCOUNT_ID, FROM_DATE, FROM_CURRENCY_ID, TO_DATE, TO_CURRENCY_ID, TO_BANK_ACCOUNT_ID, FROM_AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT, TO_AMOUNT_BASE, RESPONSIBLE_PERSON_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, EXCHANGE_ID, FILIAL_ID, STATUS, EXCHANGE_NUMBER, FROM_BANK_ACCOUNT_ID, FROM_DATE, FROM_CURRENCY_ID, TO_DATE, TO_CURRENCY_ID, TO_BANK_ACCOUNT_ID, FROM_AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT, TO_AMOUNT_BASE, RESPONSIBLE_PERSON_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_BANK_EXCHANGES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_CASHBOX_CURRENCIES ** ====
insert into MKCS_CASHBOX_CURRENCIES (COMPANY_ID, FILIAL_ID, CASHBOX_ID, CURRENCY_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, CASHBOX_ID, CURRENCY_ID, CREATED_BY, CREATED_ON from OLD_MKCS_CASHBOX_CURRENCIES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_CASHFLOW_REASONS ** ====
insert into MKCS_CASHFLOW_REASONS (COMPANY_ID, CASHFLOW_REASON_ID, FILIAL_ID, CASHFLOW_KIND, NAME, CORR_COA_ID, CORR_REF_SET, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CASHFLOW_REASON_ID, FILIAL_ID, CASHFLOW_KIND, NAME, CORR_COA_ID, CORR_REF_SET, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_CASHFLOW_REASONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_CHECKBOOK_OPERATIONS ** ====
insert into MKCS_CHECKBOOK_OPERATIONS (COMPANY_ID, OPERATION_ID, FILIAL_ID, CLIENT_ID, SUBFILIAL_ID, CONTRACT_ID, STATUS, CHECK_NUMBER, OPERATION_TIME, OPERATION_DATE, AGREEMENT_CASHING_DATE, CASHING_DATE, CURRENCY_ID, CASHBOX_ID, BANK_ACCOUNT_ID, AMOUNT, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, OPERATION_ID, FILIAL_ID, CLIENT_ID, SUBFILIAL_ID, CONTRACT_ID, STATUS, CHECK_NUMBER, OPERATION_TIME, OPERATION_DATE, AGREEMENT_CASHING_DATE, CASHING_DATE, CURRENCY_ID, CASHBOX_ID, BANK_ACCOUNT_ID, AMOUNT, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_CHECKBOOK_OPERATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_COMPANY_BANK_PAYMENT_CODE_TEMPLATES ** ====
insert into MKCS_COMPANY_BANK_PAYMENT_CODE_TEMPLATES (TEMPLATE_ID, PAYMENT_CODE, PURPOSE, INCOME_REASON_ID, EXPENSE_REASON_ID, STATE, PCODE) select TEMPLATE_ID, PAYMENT_CODE, PURPOSE, INCOME_REASON_ID, EXPENSE_REASON_ID, STATE, PCODE from OLD_MKCS_COMPANY_BANK_PAYMENT_CODE_TEMPLATES t;
commit;
prompt ==== ** MKCS_EXCHANGES ** ====
insert into MKCS_EXCHANGES (COMPANY_ID, EXCHANGE_ID, FILIAL_ID, STATUS, EXCHANGE_NUMBER, CASHBOX_ID, FROM_DATE, FROM_CURRENCY_ID, TO_DATE, TO_CURRENCY_ID, FROM_AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT, TO_AMOUNT_BASE, RESPONSIBLE_PERSON_ID, NOTE, BARCODE, USE_AMOUNT_BASE_RATE_DIFFERENCE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, EXCHANGE_ID, FILIAL_ID, STATUS, EXCHANGE_NUMBER, CASHBOX_ID, FROM_DATE, FROM_CURRENCY_ID, TO_DATE, TO_CURRENCY_ID, FROM_AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT, TO_AMOUNT_BASE, RESPONSIBLE_PERSON_ID, NOTE, BARCODE, USE_AMOUNT_BASE_RATE_DIFFERENCE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_EXCHANGES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_PAYMENT_TYPE_BANK_ACCOUNTS ** ====
insert into MKCS_PAYMENT_TYPE_BANK_ACCOUNTS (COMPANY_ID, FILIAL_ID, PAYMENT_TYPE_ID, BANK_ACCOUNT_ID, CURRENCY_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, PAYMENT_TYPE_ID, BANK_ACCOUNT_ID, CURRENCY_ID, CREATED_BY, CREATED_ON from OLD_MKCS_PAYMENT_TYPE_BANK_ACCOUNTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_TRANSFERS ** ====
insert into MKCS_TRANSFERS (COMPANY_ID, TRANSFER_ID, FILIAL_ID, STATUS, TRANSFER_NUMBER, FROM_DATE, FROM_CASHBOX_ID, FROM_BANK_ACCOUNT_ID, TO_DATE, TO_CASHBOX_ID, TO_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT_BASE, RESPONSIBLE_PERSON_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TRANSFER_ID, FILIAL_ID, STATUS, TRANSFER_NUMBER, FROM_DATE, FROM_CASHBOX_ID, FROM_BANK_ACCOUNT_ID, TO_DATE, TO_CASHBOX_ID, TO_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT_BASE, RESPONSIBLE_PERSON_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_TRANSFERS t where t.company_id = &company_id;
commit;
prompt ==== ** MK_CURRENCY_RATES ** ====
insert into MK_CURRENCY_RATES (COMPANY_ID, FILIAL_ID, CURRENCY_ID, RATE_DATE, RATE) select COMPANY_ID, FILIAL_ID, CURRENCY_ID, RATE_DATE, RATE from OLD_MK_CURRENCY_RATES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_PERSON_TYPE_MARGINS ** ====
insert into MKF_PERSON_TYPE_MARGINS (COMPANY_ID, PERSON_TYPE_ID, PERSON_GROUP_ID, PERCENT, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_TYPE_ID, PERSON_GROUP_ID, PERCENT, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MKF_PERSON_TYPE_MARGINS t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_PRICE_TYPES ** ====
insert into MKF_PRICE_TYPES (COMPANY_ID, FILIAL_ID, PRICE_TYPE_ID, EDITABLE, MOBILE_EDITABLE, MIN_PRICE, MAX_PRICE, MIN_AMOUNT) select COMPANY_ID, FILIAL_ID, PRICE_TYPE_ID, EDITABLE, MOBILE_EDITABLE, MIN_PRICE, MAX_PRICE, MIN_AMOUNT from OLD_MKF_PRICE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_PRODUCT_PRICES ** ====
insert into MKF_PRODUCT_PRICES (COMPANY_ID, FILIAL_ID, PRODUCT_ID, PRICE_TYPE_ID, CARD_ID, PRICE) select COMPANY_ID, FILIAL_ID, PRODUCT_ID, PRICE_TYPE_ID, CARD_ID, PRICE from OLD_MKF_PRODUCT_PRICES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_SUB_CONTRACTS ** ====
insert into MKF_SUB_CONTRACTS (COMPANY_ID, SUB_CONTRACT_ID, CONTRACT_ID, FILIAL_ID, SUB_CONTRACT_DATE, SUB_CONTRACT_NUMBER, AMOUNT, EXPIRY_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, SUB_CONTRACT_ID, CONTRACT_ID, FILIAL_ID, SUB_CONTRACT_DATE, SUB_CONTRACT_NUMBER, AMOUNT, EXPIRY_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKF_SUB_CONTRACTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CLIENT_PRODUCT_PLANS ** ====
insert into MKPI_CLIENT_PRODUCT_PLANS (COMPANY_ID, PLAN_ID, FILIAL_ID, CLIENT_ID, PRODUCT_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PLAN_ID, FILIAL_ID, CLIENT_ID, PRODUCT_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_CLIENT_PRODUCT_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CLIENT_PRODUCT_PLAN_SHARES ** ====
insert into MKPI_CLIENT_PRODUCT_PLAN_SHARES (COMPANY_ID, FILIAL_ID, CLIENT_ID, PRODUCT_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, CLIENT_ID, PRODUCT_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_CLIENT_PRODUCT_PLAN_SHARES t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CLIENT_PRODUCT_TYPE_PLANS ** ====
insert into MKPI_CLIENT_PRODUCT_TYPE_PLANS (COMPANY_ID, PLAN_ID, FILIAL_ID, CLIENT_ID, PRODUCT_TYPE_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PLAN_ID, FILIAL_ID, CLIENT_ID, PRODUCT_TYPE_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_CLIENT_PRODUCT_TYPE_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CLIENT_PRODUCT_TYPE_PLAN_SHARES ** ====
insert into MKPI_CLIENT_PRODUCT_TYPE_PLAN_SHARES (COMPANY_ID, FILIAL_ID, CLIENT_ID, PRODUCT_TYPE_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, CLIENT_ID, PRODUCT_TYPE_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_CLIENT_PRODUCT_TYPE_PLAN_SHARES t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CLIENT_TYPE_PRODUCT_TYPE_PLANS ** ====
insert into MKPI_CLIENT_TYPE_PRODUCT_TYPE_PLANS (COMPANY_ID, PLAN_ID, FILIAL_ID, CLIENT_TYPE_ID, PRODUCT_TYPE_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PLAN_ID, FILIAL_ID, CLIENT_TYPE_ID, PRODUCT_TYPE_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_CLIENT_TYPE_PRODUCT_TYPE_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CLIENT_TYPE_PRODUCT_TYPE_PLAN_SHARES ** ====
insert into MKPI_CLIENT_TYPE_PRODUCT_TYPE_PLAN_SHARES (COMPANY_ID, FILIAL_ID, CLIENT_TYPE_ID, PRODUCT_TYPE_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, CLIENT_TYPE_ID, PRODUCT_TYPE_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_CLIENT_TYPE_PRODUCT_TYPE_PLAN_SHARES t where t.company_id = &company_id;
commit;
prompt ==== ** MKR_COA_DEFAULTS ** ====
insert into MKR_COA_DEFAULTS (COMPANY_ID, FILIAL_ID, CODE, COA_ID) select COMPANY_ID, FILIAL_ID, CODE, COA_ID from OLD_MKR_COA_DEFAULTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKR_COA_REF_TYPES ** ====
insert into MKR_COA_REF_TYPES (COMPANY_ID, COA_ID, REF_TYPE, DEFAULT_REF_ORIGIN_ID, ORDER_NO) select COMPANY_ID, COA_ID, REF_TYPE, DEFAULT_REF_ORIGIN_ID, ORDER_NO from OLD_MKR_COA_REF_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_CLOSE_PERIOD_COA ** ====
insert into MKU_CLOSE_PERIOD_COA (COMPANY_ID, COA_ID, FILIAL_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, COA_ID, FILIAL_ID, CREATED_BY, CREATED_ON from OLD_MKU_CLOSE_PERIOD_COA t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_CLOSE_PERIOD_ITEMS ** ====
insert into MKU_CLOSE_PERIOD_ITEMS (COMPANY_ID, CLOSE_PERIOD_ITEM_UNIT_ID, CLOSE_PERIOD_ID, FILIAL_ID, COA_ID, ORDER_NO, CREATED_BY, CREATED_ON) select COMPANY_ID, CLOSE_PERIOD_ITEM_UNIT_ID, CLOSE_PERIOD_ID, FILIAL_ID, COA_ID, ORDER_NO, CREATED_BY, CREATED_ON from OLD_MKU_CLOSE_PERIOD_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_COA_TWINS ** ====
insert into MKU_COA_TWINS (COMPANY_ID, COA_TWIN_ID, NAME, FIRST_COA_ID, SECOND_COA_ID, ORDER_NO, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, COA_TWIN_ID, NAME, FIRST_COA_ID, SECOND_COA_ID, ORDER_NO, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_COA_TWINS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_INCOME_STATEMENT_COAS ** ====
insert into MKU_INCOME_STATEMENT_COAS (COMPANY_ID, GROUP_ID, FILIAL_ID, COA_ID, DISPLAY_AS, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, GROUP_ID, FILIAL_ID, COA_ID, DISPLAY_AS, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_INCOME_STATEMENT_COAS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_INIT_BALANCE_ITEMS ** ====
insert into MKU_INIT_BALANCE_ITEMS (COMPANY_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, FILIAL_ID, COA_ID, REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, FILIAL_ID, COA_ID, REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_INIT_BALANCE_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_INIT_PERSON_BALANCES ** ====
insert into MKU_INIT_PERSON_BALANCES (COMPANY_ID, BALANCE_ID, FILIAL_ID, SUBFILIAL_ID, PERSON_KIND, POSTED, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BALANCE_ID, FILIAL_ID, SUBFILIAL_ID, PERSON_KIND, POSTED, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_INIT_PERSON_BALANCES t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_REVALUATIONS ** ====
insert into MKU_REVALUATIONS (COMPANY_ID, REVAL_ID, FILIAL_ID, REVAL_DATE, INCOME_COA_ID, EXPENSE_COA_ID, CURRENCY_ID, EPSILON, CREATED_BY, CREATED_ON) select COMPANY_ID, REVAL_ID, FILIAL_ID, REVAL_DATE, INCOME_COA_ID, EXPENSE_COA_ID, CURRENCY_ID, EPSILON, CREATED_BY, CREATED_ON from OLD_MKU_REVALUATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_CORR_TEMPLATES ** ====
insert into MKW_CORR_TEMPLATES (COMPANY_ID, CORR_TEMPLATE_ID, FILIAL_ID, NAME, TEMPLATE_KIND, COA_ID, REF_SET, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CORR_TEMPLATE_ID, FILIAL_ID, NAME, TEMPLATE_KIND, COA_ID, REF_SET, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_CORR_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INIT_CLIENT_INVENTORY_BALANCE_ITEMS ** ====
insert into MKW_INIT_CLIENT_INVENTORY_BALANCE_ITEMS (COMPANY_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, FILIAL_ID, PERSON_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, PRICE, CONTRACT_ID, INSTALLED_BY, INSTALLED_DATE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, FILIAL_ID, PERSON_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, PRICE, CONTRACT_ID, INSTALLED_BY, INSTALLED_DATE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INIT_CLIENT_INVENTORY_BALANCE_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INIT_INVENTORY_BALANCES ** ====
insert into MKW_INIT_INVENTORY_BALANCES (COMPANY_ID, BALANCE_ID, FILIAL_ID, POSTED, WAREHOUSE_ID, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, BATCH_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BALANCE_ID, FILIAL_ID, POSTED, WAREHOUSE_ID, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, BATCH_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INIT_INVENTORY_BALANCES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INVENTORY_PAYABLE_ITEMS ** ====
insert into MKW_INVENTORY_PAYABLE_ITEMS (COMPANY_ID, INVENTORY_PAYABLE_ITEM_ID, FILIAL_ID, INVENTORY_PAYABLE_ID, PRODUCT_ID, INVENTORY_KIND, PRICE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INVENTORY_PAYABLE_ITEM_ID, FILIAL_ID, INVENTORY_PAYABLE_ID, PRODUCT_ID, INVENTORY_KIND, PRICE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INVENTORY_PAYABLE_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PRICE_TEMPLATE_ITEMS ** ====
insert into MKW_PRICE_TEMPLATE_ITEMS (COMPANY_ID, TEMPLATE_ID, PRODUCT_ID, PRICE) select COMPANY_ID, TEMPLATE_ID, PRODUCT_ID, PRICE from OLD_MKW_PRICE_TEMPLATE_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PRODUCT_BASE_PRICES ** ====
insert into MKW_PRODUCT_BASE_PRICES (COMPANY_ID, PRODUCT_ID, CARD_ID, BASE_PRICE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PRODUCT_ID, CARD_ID, BASE_PRICE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PRODUCT_BASE_PRICES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_CORR_TEMPLATES ** ====
insert into MKW_PURCHASE_CORR_TEMPLATES (COMPANY_ID, CORR_TEMPLATE_ID, FILIAL_ID, NAME, COA_ID, REF_SET, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CORR_TEMPLATE_ID, FILIAL_ID, NAME, COA_ID, REF_SET, STATE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASE_CORR_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_RECOMMENDED_BALANCE_WAREHOUSES ** ====
insert into MKW_RECOMMENDED_BALANCE_WAREHOUSES (COMPANY_ID, FILIAL_ID, WAREHOUSE_ID, PRODUCT_ID, RECOMMENDED_QUANT) select COMPANY_ID, FILIAL_ID, WAREHOUSE_ID, PRODUCT_ID, RECOMMENDED_QUANT from OLD_MKW_RECOMMENDED_BALANCE_WAREHOUSES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_SUPPLIERS ** ====
insert into MKW_SUPPLIERS (COMPANY_ID, FILIAL_ID, SUPPLIER_ID, VAT_ENABLED, VAT_PERCENT, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, SUPPLIER_ID, VAT_ENABLED, VAT_PERCENT, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_SUPPLIERS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_WAREHOUSE_INFOS ** ====
insert into MKW_WAREHOUSE_INFOS (COMPANY_ID, WAREHOUSE_ID, ADDRESS, ADDRESS_GUIDE, REGION_ID, LATLNG, TEMPERATURE_TYPE_ID, HUMIDITY_TYPE_ID, SHAPE_TYPE, HEIGHT, WIDTH, LENGTH, DIAMETER, VOLUME, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, WAREHOUSE_ID, ADDRESS, ADDRESS_GUIDE, REGION_ID, LATLNG, TEMPERATURE_TYPE_ID, HUMIDITY_TYPE_ID, SHAPE_TYPE, HEIGHT, WIDTH, LENGTH, DIAMETER, VOLUME, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_WAREHOUSE_INFOS t where t.company_id = &company_id;
commit;
prompt ==== ** MPR_BOOKS ** ====
insert into MPR_BOOKS (COMPANY_ID, FILIAL_ID, BOOK_ID, BOOK_NUMBER, BOOK_DATE, BOOK_NAME, MONTH, DIVISION_ID, CURRENCY_ID, POSTED, BARCODE, NOTE, C_ACCRUED_AMOUNT, C_ACCRUED_AMOUNT_BASE, C_DEDUCTED_AMOUNT, C_DEDUCTED_AMOUNT_BASE, C_INCOME_TAX_AMOUNT, C_PENSION_PAYMENT_AMOUNT, C_SOCIAL_PAYMENT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, BOOK_ID, BOOK_NUMBER, BOOK_DATE, BOOK_NAME, MONTH, DIVISION_ID, CURRENCY_ID, POSTED, BARCODE, NOTE, C_ACCRUED_AMOUNT, C_ACCRUED_AMOUNT_BASE, C_DEDUCTED_AMOUNT, C_DEDUCTED_AMOUNT_BASE, C_INCOME_TAX_AMOUNT, C_PENSION_PAYMENT_AMOUNT, C_SOCIAL_PAYMENT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MPR_BOOKS t where t.company_id = &company_id;
commit;
prompt ==== ** MPR_OPER_TYPES ** ====
insert into MPR_OPER_TYPES (COMPANY_ID, OPER_TYPE_ID, OPERATION_KIND, NAME, SHORT_NAME, ACCOUNTING_TYPE, CORR_COA_ID, CORR_REF_SET, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE, NOTE, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, OPER_TYPE_ID, OPERATION_KIND, NAME, SHORT_NAME, ACCOUNTING_TYPE, CORR_COA_ID, CORR_REF_SET, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE, NOTE, STATE, CODE, PCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_MPR_OPER_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MPR_PAYMENTS ** ====
insert into MPR_PAYMENTS (COMPANY_ID, PAYMENT_ID, FILIAL_ID, PAYMENT_KIND, STATUS, PAYMENT_NUMBER, PAYMENT_DATE, BOOKED_DATE, DIVISION_ID, CURRENCY_ID, PAYMENT_TYPE, CASHBOX_ID, BANK_ACCOUNT_ID, AMOUNT, AMOUNT_BASE, PAID_AMOUNT, PAID_AMOUNT_BASE, NOTE, SOURCE_TABLE, SOURCE_ID, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PAYMENT_ID, FILIAL_ID, PAYMENT_KIND, STATUS, PAYMENT_NUMBER, PAYMENT_DATE, BOOKED_DATE, DIVISION_ID, CURRENCY_ID, PAYMENT_TYPE, CASHBOX_ID, BANK_ACCOUNT_ID, AMOUNT, AMOUNT_BASE, PAID_AMOUNT, PAID_AMOUNT_BASE, NOTE, SOURCE_TABLE, SOURCE_ID, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MPR_PAYMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZM_QUIZ_SET_PERSON_TYPES ** ====
insert into MQZM_QUIZ_SET_PERSON_TYPES (COMPANY_ID, QUIZ_SET_ID, PERSON_TYPE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, QUIZ_SET_ID, PERSON_TYPE_ID, CREATED_BY, CREATED_ON from OLD_MQZM_QUIZ_SET_PERSON_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_OPTION_QUIZS ** ====
insert into MQZ_OPTION_QUIZS (COMPANY_ID, OPTION_ID, CHILD_QUIZ_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, OPTION_ID, CHILD_QUIZ_ID, CREATED_BY, CREATED_ON from OLD_MQZ_OPTION_QUIZS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_OPTION_QUIZ_SETS ** ====
insert into MQZ_OPTION_QUIZ_SETS (COMPANY_ID, OPTION_ID, CHILD_QUIZ_SET_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, OPTION_ID, CHILD_QUIZ_SET_ID, CREATED_BY, CREATED_ON from OLD_MQZ_OPTION_QUIZ_SETS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_REPORT_TEMPLATE_QUIZ_OPTIONS ** ====
insert into MQZ_REPORT_TEMPLATE_QUIZ_OPTIONS (COMPANY_ID, TEMPLATE_ID, QUIZ_ID, OPTION_ID) select COMPANY_ID, TEMPLATE_ID, QUIZ_ID, OPTION_ID from OLD_MQZ_REPORT_TEMPLATE_QUIZ_OPTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_RESULT_QUIZ_SETS ** ====
insert into MQZ_RESULT_QUIZ_SETS (COMPANY_ID, RESULT_QUIZ_SET_ID, RESULT_ID, QUIZ_SET_ID, RESULT_QUIZ_ANSWER_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, RESULT_QUIZ_SET_ID, RESULT_ID, QUIZ_SET_ID, RESULT_QUIZ_ANSWER_ID, CREATED_BY, CREATED_ON from OLD_MQZ_RESULT_QUIZ_SETS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_CLIENTS ** ====
insert into MRF_CLIENTS (COMPANY_ID, CLIENT_ID, FILIAL_ID, STATE, MARGIN_ENABLE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CLIENT_ID, FILIAL_ID, STATE, MARGIN_ENABLE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_CLIENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_PERSON_PRODUCT_CODES ** ====
insert into MRF_PERSON_PRODUCT_CODES (COMPANY_ID, FILIAL_ID, PERSON_ID, PRODUCT_ID, PRODUCT_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, PERSON_ID, PRODUCT_ID, PRODUCT_CODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_PERSON_PRODUCT_CODES t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_PRODUCTS ** ====
insert into MRF_PRODUCTS (COMPANY_ID, FILIAL_ID, PRODUCT_ID, SALE_KIND, MARGIN_DISABLED, VAT_ENABLED, VAT_PERCENT, EXCISE_ENABLED, EXCISE_PERCENT, ORDER_NO) select COMPANY_ID, FILIAL_ID, PRODUCT_ID, SALE_KIND, MARGIN_DISABLED, VAT_ENABLED, VAT_PERCENT, EXCISE_ENABLED, EXCISE_PERCENT, ORDER_NO from OLD_MRF_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROOMS ** ====
insert into MRF_ROOMS (COMPANY_ID, ROOM_ID, FILIAL_ID, NAME, SUBFILIAL_ID, ROOM_TYPE_ID, ORDER_NO, STATE, CODE, ORDER_PRODUCT_SET_ID, GIFT_PRODUCT_SET_ID, STOCK_PRODUCT_SET_ID, RETURN_PRODUCT_SET_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, FILIAL_ID, NAME, SUBFILIAL_ID, ROOM_TYPE_ID, ORDER_NO, STATE, CODE, ORDER_PRODUCT_SET_ID, GIFT_PRODUCT_SET_ID, STOCK_PRODUCT_SET_ID, RETURN_PRODUCT_SET_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_ROOMS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_SIGN_DOCUMENTS ** ====
insert into MRF_SIGN_DOCUMENTS (COMPANY_ID, FILIAL_ID, DOCUMENT_ID, ESIGN_ALLOWED, DOCUMENT_DATA, DOCUMENT_HASH) select COMPANY_ID, FILIAL_ID, DOCUMENT_ID, ESIGN_ALLOWED, DOCUMENT_DATA, DOCUMENT_HASH from OLD_MRF_SIGN_DOCUMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_SIGN_TEMPLATES ** ====
insert into MRF_SIGN_TEMPLATES (COMPANY_ID, FILIAL_ID, TEMPLATE_ID, ESIGN_ALLOWED) select COMPANY_ID, FILIAL_ID, TEMPLATE_ID, ESIGN_ALLOWED from OLD_MRF_SIGN_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_LEGAL_PERSON_CONTACTS ** ====
insert into MR_LEGAL_PERSON_CONTACTS (COMPANY_ID, PERSON_CONTACT_ID, PERSON_ID, NAME, POSITION_ID, PHONE_NUMBER, BIRTHDAY, NOTE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_CONTACT_ID, PERSON_ID, NAME, POSITION_ID, PHONE_NUMBER, BIRTHDAY, NOTE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_LEGAL_PERSON_CONTACTS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PERSON_ACTIVITIES ** ====
insert into MR_PERSON_ACTIVITIES (COMPANY_ID, PERSON_ID, ACTIVITY_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PERSON_ID, ACTIVITY_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MR_PERSON_ACTIVITIES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PERSON_TYPE_BINDS ** ====
insert into MR_PERSON_TYPE_BINDS (COMPANY_ID, PERSON_GROUP_ID, PERSON_ID, PERSON_TYPE_ID, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PERSON_GROUP_ID, PERSON_ID, PERSON_TYPE_ID, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PERSON_TYPE_BINDS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PRODUCT_BARCODES ** ====
insert into MR_PRODUCT_BARCODES (COMPANY_ID, PRODUCT_ID, BARCODE, STATE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PRODUCT_ID, BARCODE, STATE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PRODUCT_BARCODES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PRODUCT_FILES ** ====
insert into MR_PRODUCT_FILES (COMPANY_ID, PRODUCT_ID, FILE_SHA, TITLE, NOTE, STATE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PRODUCT_ID, FILE_SHA, TITLE, NOTE, STATE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PRODUCT_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PRODUCT_INVENTORIES ** ====
insert into MR_PRODUCT_INVENTORIES (COMPANY_ID, PRODUCT_ID, INVENTORY_KIND) select COMPANY_ID, PRODUCT_ID, INVENTORY_KIND from OLD_MR_PRODUCT_INVENTORIES t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PRODUCT_PHOTOS ** ====
insert into MR_PRODUCT_PHOTOS (COMPANY_ID, PRODUCT_ID, PHOTO_SHA, TITLE, NOTE, ORDER_NO, STATE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PRODUCT_ID, PHOTO_SHA, TITLE, NOTE, ORDER_NO, STATE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PRODUCT_PHOTOS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_PRODUCT_TYPE_BINDS ** ====
insert into MR_PRODUCT_TYPE_BINDS (COMPANY_ID, PRODUCT_GROUP_ID, PRODUCT_ID, PRODUCT_TYPE_ID, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PRODUCT_GROUP_ID, PRODUCT_ID, PRODUCT_TYPE_ID, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_PRODUCT_TYPE_BINDS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_ROLE_FUNCTION_ITEMS ** ====
insert into MR_ROLE_FUNCTION_ITEMS (COMPANY_ID, ROLE_ID, FUNCTION_ID, PROJECT_CODE, ITEM_ID, VISIBLE_ITEM, REQUIRED_ITEM, REQUIRED_ONCE_MONTH, ORDER_NO, PARENT_ID) select COMPANY_ID, ROLE_ID, FUNCTION_ID, PROJECT_CODE, ITEM_ID, VISIBLE_ITEM, REQUIRED_ITEM, REQUIRED_ONCE_MONTH, ORDER_NO, PARENT_ID from OLD_MR_ROLE_FUNCTION_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_SECTOR_PRODUCTS ** ====
insert into MR_SECTOR_PRODUCTS (COMPANY_ID, SECTOR_ID, PRODUCT_ID, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, SECTOR_ID, PRODUCT_ID, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_SECTOR_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MR_SIMILAR_PRODUCTS ** ====
insert into MR_SIMILAR_PRODUCTS (COMPANY_ID, PRODUCT_ID, SIMILAR_ID, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, PRODUCT_ID, SIMILAR_ID, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_MR_SIMILAR_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_CHAT_MESSAGE_AUDIT ** ====
insert into MS_CHAT_MESSAGE_AUDIT (COMPANY_ID, AUDIT_ID, MESSAGE_ID, ACTION, OLD_TEXT, OLD_FILE_SHA, CREATED_BY, CREATED_ON) select COMPANY_ID, AUDIT_ID, MESSAGE_ID, ACTION, OLD_TEXT, OLD_FILE_SHA, CREATED_BY, CREATED_ON from OLD_MS_CHAT_MESSAGE_AUDIT t where t.company_id = &company_id;
commit;
prompt ==== ** MS_KANBAN_ITEM_TASKS ** ====
insert into MS_KANBAN_ITEM_TASKS (COMPANY_ID, UNIT_ID, TASK_ID, ORDER_NO, CREATED_BY, CREATED_ON) select COMPANY_ID, UNIT_ID, TASK_ID, ORDER_NO, CREATED_BY, CREATED_ON from OLD_MS_KANBAN_ITEM_TASKS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_CHECK_LIST ** ====
insert into MS_TASK_CHECK_LIST (COMPANY_ID, TASK_CHECK_ID, TASK_ID, TEXT, CHECKED, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TASK_CHECK_ID, TASK_ID, TEXT, CHECKED, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_CHECK_LIST t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_COMMENTS ** ====
insert into MS_TASK_COMMENTS (COMPANY_ID, COMMENT_ID, TASK_ID, TEXT, DELETED, REPLY_COMMENT_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, COMMENT_ID, TASK_ID, TEXT, DELETED, REPLY_COMMENT_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_COMMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_PERSONS ** ====
insert into MS_TASK_PERSONS (COMPANY_ID, TASK_ID, PERSON_ID, INVOLVE_KIND, VIEWED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TASK_ID, PERSON_ID, INVOLVE_KIND, VIEWED, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_TEMPLATE_CYCLES ** ====
insert into MS_TASK_TEMPLATE_CYCLES (COMPANY_ID, TASK_ID, CREATING_TIME, START_DATE, PERIOD_KIND, PERIOD_TIMES, CYCLE_VALUE, END_KIND, END_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TASK_ID, CREATING_TIME, START_DATE, PERIOD_KIND, PERIOD_TIMES, CYCLE_VALUE, END_KIND, END_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MS_TASK_TEMPLATE_CYCLES t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_TYPE_BINDS ** ====
insert into MS_TASK_TYPE_BINDS (COMPANY_ID, TASK_ID, TASK_GROUP_ID, TASK_TYPE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, TASK_ID, TASK_GROUP_ID, TASK_TYPE_ID, CREATED_BY, CREATED_ON from OLD_MS_TASK_TYPE_BINDS t where t.company_id = &company_id;
commit;
prompt ==== ** MT_HOST_ENTRY_IDS ** ====
insert into MT_HOST_ENTRY_IDS (COMPANY_ID, HOST_ID, ENTRY_ID) select COMPANY_ID, HOST_ID, ENTRY_ID from OLD_MT_HOST_ENTRY_IDS t where t.company_id = &company_id;
commit;
prompt ==== ** MT_ROUTE_HISTORIES ** ====
insert into MT_ROUTE_HISTORIES (COMPANY_ID, HISTORY_ID, USER_ID, PROJECT_CODE, HOST_ID, CREATED_ON, CLOSED_ON) select COMPANY_ID, HISTORY_ID, USER_ID, PROJECT_CODE, HOST_ID, CREATED_ON, CLOSED_ON from OLD_MT_ROUTE_HISTORIES t where t.company_id = &company_id;
commit;
prompt ==== ** MVTM_EQUIPMENT_COMMENTS ** ====
insert into MVTM_EQUIPMENT_COMMENTS (COMPANY_ID, EQUIPMENT_ID, COMMENT_ID, FILIAL_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, EQUIPMENT_ID, COMMENT_ID, FILIAL_ID, CREATED_BY, CREATED_ON from OLD_MVTM_EQUIPMENT_COMMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MVTM_EQUIPMENT_PHOTOS ** ====
insert into MVTM_EQUIPMENT_PHOTOS (COMPANY_ID, PHOTO_ID, FILIAL_ID, EQUIPMENT_ID, PHOTO_SHA, TEMP_SHA, CREATED_BY, CREATED_ON) select COMPANY_ID, PHOTO_ID, FILIAL_ID, EQUIPMENT_ID, PHOTO_SHA, TEMP_SHA, CREATED_BY, CREATED_ON from OLD_MVTM_EQUIPMENT_PHOTOS t where t.company_id = &company_id;
commit;
prompt ==== ** MVTM_PRODUCT_STOCKS ** ====
insert into MVTM_PRODUCT_STOCKS (COMPANY_ID, VISIT_ID, STOCK_ID, FILIAL_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, STOCK_QUANT, CREATED_BY, CREATED_ON) select COMPANY_ID, VISIT_ID, STOCK_ID, FILIAL_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, STOCK_QUANT, CREATED_BY, CREATED_ON from OLD_MVTM_PRODUCT_STOCKS t where t.company_id = &company_id;
commit;
prompt ==== ** MVTM_PRODUCT_TYPE_STOCKS ** ====
insert into MVTM_PRODUCT_TYPE_STOCKS (COMPANY_ID, VISIT_ID, STOCK_ID, FILIAL_ID, PRODUCT_GROUP_ID, PRODUCT_TYPE_ID, STOCK_QUANT, INTERMEDIATE_ORDER_QUANT, CREATED_BY, CREATED_ON) select COMPANY_ID, VISIT_ID, STOCK_ID, FILIAL_ID, PRODUCT_GROUP_ID, PRODUCT_TYPE_ID, STOCK_QUANT, INTERMEDIATE_ORDER_QUANT, CREATED_BY, CREATED_ON from OLD_MVTM_PRODUCT_TYPE_STOCKS t where t.company_id = &company_id;
commit;
prompt ==== ** HLN_TESTING_QUESTION_OPTIONS ** ====
insert into HLN_TESTING_QUESTION_OPTIONS (COMPANY_ID, FILIAL_ID, TESTING_ID, QUESTION_ID, QUESTION_OPTION_ID, ORDER_NO, CHOSEN) select COMPANY_ID, FILIAL_ID, TESTING_ID, QUESTION_ID, QUESTION_OPTION_ID, ORDER_NO, CHOSEN from OLD_HLN_TESTING_QUESTION_OPTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_CV_CONTRACT_FILES ** ====
insert into HPD_CV_CONTRACT_FILES (COMPANY_ID, FILIAL_ID, CONTRACT_ID, FILE_SHA, NOTE) select COMPANY_ID, FILIAL_ID, CONTRACT_ID, FILE_SHA, NOTE from OLD_HPD_CV_CONTRACT_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_CV_CONTRACT_ITEMS ** ====
insert into HPD_CV_CONTRACT_ITEMS (COMPANY_ID, FILIAL_ID, CONTRACT_ITEM_ID, CONTRACT_ID, NAME, QUANTITY, AMOUNT) select COMPANY_ID, FILIAL_ID, CONTRACT_ITEM_ID, CONTRACT_ID, NAME, QUANTITY, AMOUNT from OLD_HPD_CV_CONTRACT_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_ADVANCE_SETTINGS ** ====
insert into HPR_ADVANCE_SETTINGS (COMPANY_ID, FILIAL_ID, PAYMENT_ID, LIMIT_KIND, DAYS_LIMIT) select COMPANY_ID, FILIAL_ID, PAYMENT_ID, LIMIT_KIND, DAYS_LIMIT from OLD_HPR_ADVANCE_SETTINGS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_BOOKS ** ====
insert into HPR_BOOKS (COMPANY_ID, FILIAL_ID, BOOK_ID, BOOK_TYPE_ID) select COMPANY_ID, FILIAL_ID, BOOK_ID, BOOK_TYPE_ID from OLD_HPR_BOOKS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_CV_CONTRACT_FACTS ** ====
insert into HPR_CV_CONTRACT_FACTS (COMPANY_ID, FILIAL_ID, FACT_ID, CONTRACT_ID, MONTH, TOTAL_AMOUNT, STATUS) select COMPANY_ID, FILIAL_ID, FACT_ID, CONTRACT_ID, MONTH, TOTAL_AMOUNT, STATUS from OLD_HPR_CV_CONTRACT_FACTS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_OPER_TYPES ** ====
insert into HPR_OPER_TYPES (COMPANY_ID, OPER_TYPE_ID, OPER_GROUP_ID, ESTIMATION_TYPE, ESTIMATION_FORMULA) select COMPANY_ID, OPER_TYPE_ID, OPER_GROUP_ID, ESTIMATION_TYPE, ESTIMATION_FORMULA from OLD_HPR_OPER_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_PENALTY_POLICIES ** ====
insert into HPR_PENALTY_POLICIES (COMPANY_ID, FILIAL_ID, PENALTY_ID, PENALTY_KIND, FROM_DAY, TO_DAY, FROM_TIME, TO_TIME, PENALTY_COEF, PENALTY_PER_TIME, PENALTY_AMOUNT, PENALTY_TIME) select COMPANY_ID, FILIAL_ID, PENALTY_ID, PENALTY_KIND, FROM_DAY, TO_DAY, FROM_TIME, TO_TIME, PENALTY_COEF, PENALTY_PER_TIME, PENALTY_AMOUNT, PENALTY_TIME from OLD_HPR_PENALTY_POLICIES t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_CANDIDATE_JOBS ** ====
insert into HREF_CANDIDATE_JOBS (COMPANY_ID, FILIAL_ID, CANDIDATE_ID, JOB_ID) select COMPANY_ID, FILIAL_ID, CANDIDATE_ID, JOB_ID from OLD_HREF_CANDIDATE_JOBS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_WAGES ** ====
insert into HREF_WAGES (COMPANY_ID, FILIAL_ID, WAGE_ID, JOB_ID, RANK_ID, WAGE_BEGIN, WAGE_END, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, WAGE_ID, JOB_ID, RANK_ID, WAGE_BEGIN, WAGE_END, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_WAGES t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_JOB_TEMPLATES ** ====
insert into HRM_JOB_TEMPLATES (COMPANY_ID, FILIAL_ID, TEMPLATE_ID, DIVISION_ID, JOB_ID, RANK_ID, SCHEDULE_ID, VACATION_DAYS_LIMIT, WAGE_SCALE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, TEMPLATE_ID, DIVISION_ID, JOB_ID, RANK_ID, SCHEDULE_ID, VACATION_DAYS_LIMIT, WAGE_SCALE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HRM_JOB_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_ACMS_COMMANDS ** ====
insert into HTT_ACMS_COMMANDS (COMPANY_ID, COMMAND_ID, DEVICE_ID, COMMAND_KIND, PERSON_ID, DATA, STATUS, STATE_CHANGED_ON, ERROR_MSG) select COMPANY_ID, COMMAND_ID, DEVICE_ID, COMMAND_KIND, PERSON_ID, DATA, STATUS, STATE_CHANGED_ON, ERROR_MSG from OLD_HTT_ACMS_COMMANDS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_ACMS_TRACKS ** ====
insert into HTT_ACMS_TRACKS (COMPANY_ID, TRACK_ID, DEVICE_ID, PERSON_ID, TRACK_TYPE, TRACK_DATETIME, MARK_TYPE, STATUS, ERROR_TEXT) select COMPANY_ID, TRACK_ID, DEVICE_ID, PERSON_ID, TRACK_TYPE, TRACK_DATETIME, MARK_TYPE, STATUS, ERROR_TEXT from OLD_HTT_ACMS_TRACKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_DEVICE_ADMINS ** ====
insert into HTT_DEVICE_ADMINS (COMPANY_ID, DEVICE_ID, PERSON_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, DEVICE_ID, PERSON_ID, CREATED_BY, CREATED_ON from OLD_HTT_DEVICE_ADMINS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_HIKVISION_DEVICES ** ====
insert into HTT_HIKVISION_DEVICES (COMPANY_ID, DEVICE_ID, DYNAMIC_IP, IP_ADDRESS, PORT, PROTOCOL, HOST, LOGIN, PASSWORD) select COMPANY_ID, DEVICE_ID, DYNAMIC_IP, IP_ADDRESS, PORT, PROTOCOL, HOST, LOGIN, PASSWORD from OLD_HTT_HIKVISION_DEVICES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_LOCATION_DIVISIONS ** ====
insert into HTT_LOCATION_DIVISIONS (COMPANY_ID, FILIAL_ID, LOCATION_ID, DIVISION_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, LOCATION_ID, DIVISION_ID, CREATED_BY, CREATED_ON from OLD_HTT_LOCATION_DIVISIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_LOCATION_PERSONS ** ====
insert into HTT_LOCATION_PERSONS (COMPANY_ID, FILIAL_ID, LOCATION_ID, PERSON_ID, ATTACH_TYPE, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, LOCATION_ID, PERSON_ID, ATTACH_TYPE, CREATED_BY, CREATED_ON from OLD_HTT_LOCATION_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_DAY_MARKS ** ====
insert into HTT_SCHEDULE_DAY_MARKS (COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME) select COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME from OLD_HTT_SCHEDULE_DAY_MARKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_ORIGIN_DAY_MARKS ** ====
insert into HTT_SCHEDULE_ORIGIN_DAY_MARKS (COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME) select COMPANY_ID, FILIAL_ID, SCHEDULE_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME from OLD_HTT_SCHEDULE_ORIGIN_DAY_MARKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_SCHEDULE_PATTERN_MARKS ** ====
insert into HTT_SCHEDULE_PATTERN_MARKS (COMPANY_ID, FILIAL_ID, SCHEDULE_ID, DAY_NO, BEGIN_TIME, END_TIME) select COMPANY_ID, FILIAL_ID, SCHEDULE_ID, DAY_NO, BEGIN_TIME, END_TIME from OLD_HTT_SCHEDULE_PATTERN_MARKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TRACKS ** ====
insert into HTT_TRACKS (COMPANY_ID, FILIAL_ID, TRACK_ID, TRACK_DATE, TRACK_TIME, TRACK_DATETIME, PERSON_ID, TRACK_TYPE, MARK_TYPE, DEVICE_ID, LOCATION_ID, LATLNG, ACCURACY, PHOTO_SHA, NOTE, ORIGINAL_TYPE, IS_VALID, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID, TRANS_INPUT, TRANS_OUTPUT) select COMPANY_ID, FILIAL_ID, TRACK_ID, TRACK_DATE, TRACK_TIME, TRACK_DATETIME, PERSON_ID, TRACK_TYPE, MARK_TYPE, DEVICE_ID, LOCATION_ID, LATLNG, ACCURACY, PHOTO_SHA, NOTE, ORIGINAL_TYPE, IS_VALID, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID, TRANS_INPUT, TRANS_OUTPUT from OLD_HTT_TRACKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TRASH_TRACKS ** ====
insert into HTT_TRASH_TRACKS (COMPANY_ID, FILIAL_ID, TRACK_ID, TRACK_DATE, TRACK_TIME, TRACK_DATETIME, PERSON_ID, TRACK_TYPE, MARK_TYPE, DEVICE_ID, LOCATION_ID, LATLNG, ACCURACY, PHOTO_SHA, NOTE, IS_VALID, CREATED_ON) select COMPANY_ID, FILIAL_ID, TRACK_ID, TRACK_DATE, TRACK_TIME, TRACK_DATETIME, PERSON_ID, TRACK_TYPE, MARK_TYPE, DEVICE_ID, LOCATION_ID, LATLNG, ACCURACY, PHOTO_SHA, NOTE, IS_VALID, CREATED_ON from OLD_HTT_TRASH_TRACKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_UNKNOWN_DEVICES ** ====
insert into HTT_UNKNOWN_DEVICES (COMPANY_ID, DEVICE_ID) select COMPANY_ID, DEVICE_ID from OLD_HTT_UNKNOWN_DEVICES t where t.company_id = &company_id;
commit;
prompt ==== ** HZK_DEVICES ** ====
insert into HZK_DEVICES (COMPANY_ID, DEVICE_ID, CHECK_SENT_ON, CHECK_RECEIVED_ON, USER_NUMBER, FINGERPRINT_NUMBER, ATTENDANCE_NUMBER, IP_ADDRESS, STAMP, OPSTAMP, PHOTOSTAMP, ERROR_DELAY, DELAY, TRANSTIMES, TRANSINTERVAL, REALTIME) select COMPANY_ID, DEVICE_ID, CHECK_SENT_ON, CHECK_RECEIVED_ON, USER_NUMBER, FINGERPRINT_NUMBER, ATTENDANCE_NUMBER, IP_ADDRESS, STAMP, OPSTAMP, PHOTOSTAMP, ERROR_DELAY, DELAY, TRANSTIMES, TRANSINTERVAL, REALTIME from OLD_HZK_DEVICES t where t.company_id = &company_id;
commit;
prompt ==== ** MBI_TEMPLATE_FILTER_VALUES ** ====
insert into MBI_TEMPLATE_FILTER_VALUES (COMPANY_ID, FIELD_ID, LABEL_CODE, MAIN_VALUE, EXTRA_VALUE) select COMPANY_ID, FIELD_ID, LABEL_CODE, MAIN_VALUE, EXTRA_VALUE from OLD_MBI_TEMPLATE_FILTER_VALUES t where t.company_id = &company_id;
commit;
prompt ==== ** MBI_TEMPLATE_LABELS ** ====
insert into MBI_TEMPLATE_LABELS (COMPANY_ID, FIELD_ID, CODE, IS_LEVEL, TRANSLATE, GENERAL_TRANSLATE, FIELD_TYPE, TABLE_NAME, PRIMARY_FIELD, ORDER_TABLE) select COMPANY_ID, FIELD_ID, CODE, IS_LEVEL, TRANSLATE, GENERAL_TRANSLATE, FIELD_TYPE, TABLE_NAME, PRIMARY_FIELD, ORDER_TABLE from OLD_MBI_TEMPLATE_LABELS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ACTION_BONUS_PRODUCTS ** ====
insert into MCG_ACTION_BONUS_PRODUCTS (COMPANY_ID, BONUS_ID, PRODUCT_ID, INVENTORY_KIND, BONUS_VALUE, MAX_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BONUS_ID, PRODUCT_ID, INVENTORY_KIND, BONUS_VALUE, MAX_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ACTION_BONUS_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ACTION_RULE_PRODUCTS ** ====
insert into MCG_ACTION_RULE_PRODUCTS (COMPANY_ID, RULE_ID, PRODUCT_ID, INVENTORY_KIND, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, RULE_ID, PRODUCT_ID, INVENTORY_KIND, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ACTION_RULE_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ORDER_RESTRICTION_BAN_SOURCES ** ====
insert into MCG_ORDER_RESTRICTION_BAN_SOURCES (COMPANY_ID, BAN_ID, SOURCE_ID, SOURCE_KIND) select COMPANY_ID, BAN_ID, SOURCE_ID, SOURCE_KIND from OLD_MCG_ORDER_RESTRICTION_BAN_SOURCES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_OVERLOAD_PERSON_TYPES ** ====
insert into MCG_OVERLOAD_PERSON_TYPES (COMPANY_ID, OVERLOAD_ID, PERSON_KIND, PERSON_GROUP_ID, PERSON_TYPE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, OVERLOAD_ID, PERSON_KIND, PERSON_GROUP_ID, PERSON_TYPE_ID, CREATED_BY, CREATED_ON from OLD_MCG_OVERLOAD_PERSON_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_OVERLOAD_RULES ** ====
insert into MCG_OVERLOAD_RULES (COMPANY_ID, RULE_ID, OVERLOAD_ID, ORDER_NO, FROM_VALUE, TO_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, RULE_ID, OVERLOAD_ID, ORDER_NO, FROM_VALUE, TO_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_OVERLOAD_RULES t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ROOM_ACTIONS ** ====
insert into MCG_ROOM_ACTIONS (COMPANY_ID, ROOM_ID, ACTION_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, ACTION_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ROOM_ACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ROOM_ORDER_PRODUCT_LIMITS ** ====
insert into MCG_ROOM_ORDER_PRODUCT_LIMITS (COMPANY_ID, ROOM_ID, ORDER_PRODUCT_LIMIT_ID, ORDER_NO, CREATED_BY, CREATED_ON) select COMPANY_ID, ROOM_ID, ORDER_PRODUCT_LIMIT_ID, ORDER_NO, CREATED_BY, CREATED_ON from OLD_MCG_ROOM_ORDER_PRODUCT_LIMITS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_ROOM_ORDER_RESTRICTIONS ** ====
insert into MCG_ROOM_ORDER_RESTRICTIONS (COMPANY_ID, ORDER_RESTRICTION_ID, ROOM_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ORDER_RESTRICTION_ID, ROOM_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_ROOM_ORDER_RESTRICTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_PERSON_RECOMS ** ====
insert into MDEAL_PERSON_RECOMS (COMPANY_ID, FILIAL_ID, PERSON_ID, PRODUCT_ID, INVENTORY_KIND, RECOM_DATA, LOOK_UP_DAY) select COMPANY_ID, FILIAL_ID, PERSON_ID, PRODUCT_ID, INVENTORY_KIND, RECOM_DATA, LOOK_UP_DAY from OLD_MDEAL_PERSON_RECOMS t where t.company_id = &company_id;
commit;
prompt ==== ** MDF_SIGN_DOCUMENT_GROUPS ** ====
insert into MDF_SIGN_DOCUMENT_GROUPS (COMPANY_ID, DOCUMENT_ID, LEVEL_NO, GROUP_NO, SIGN_MIN_COUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, C_STATE, C_SIGN_AVAILABLE, C_PERSON_COUNT, C_APPROVED_PERSON_COUNT, C_CANCELLED_PERSON_COUNT) select COMPANY_ID, DOCUMENT_ID, LEVEL_NO, GROUP_NO, SIGN_MIN_COUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, C_STATE, C_SIGN_AVAILABLE, C_PERSON_COUNT, C_APPROVED_PERSON_COUNT, C_CANCELLED_PERSON_COUNT from OLD_MDF_SIGN_DOCUMENT_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MDF_SIGN_TEMPLATE_GROUPS ** ====
insert into MDF_SIGN_TEMPLATE_GROUPS (COMPANY_ID, TEMPLATE_ID, LEVEL_NO, GROUP_NO, SIGN_MIN_COUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TEMPLATE_ID, LEVEL_NO, GROUP_NO, SIGN_MIN_COUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDF_SIGN_TEMPLATE_GROUPS t where t.company_id = &company_id;
commit;
prompt ==== ** MFM_MOVEMENT_REQUEST_ITEMS ** ====
insert into MFM_MOVEMENT_REQUEST_ITEMS (COMPANY_ID, REQUEST_ITEM_ID, REQUEST_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRODUCT_ID, CARD_ID, QUANTITY, MOVEMENT_QUANTITY, PRICE, AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REQUEST_ITEM_ID, REQUEST_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRODUCT_ID, CARD_ID, QUANTITY, MOVEMENT_QUANTITY, PRICE, AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MFM_MOVEMENT_REQUEST_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MFM_MOVEMENT_REQUEST_PRICE_TYPES ** ====
insert into MFM_MOVEMENT_REQUEST_PRICE_TYPES (COMPANY_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRICE_TYPE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRICE_TYPE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MFM_MOVEMENT_REQUEST_PRICE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MHR_EMPLOYEES ** ====
insert into MHR_EMPLOYEES (COMPANY_ID, FILIAL_ID, EMPLOYEE_ID, EMPLOYEE_NUMBER, DIVISION_ID, JOB_ID, RANK_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, EMPLOYEE_ID, EMPLOYEE_NUMBER, DIVISION_ID, JOB_ID, RANK_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MHR_EMPLOYEES t where t.company_id = &company_id;
commit;
prompt ==== ** MHR_JOB_DIVISIONS ** ====
insert into MHR_JOB_DIVISIONS (COMPANY_ID, FILIAL_ID, JOB_ID, DIVISION_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, JOB_ID, DIVISION_ID, CREATED_BY, CREATED_ON from OLD_MHR_JOB_DIVISIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_BANK_PAYMENT_CODES ** ====
insert into MKCS_BANK_PAYMENT_CODES (COMPANY_ID, FILIAL_ID, PAYMENT_CODE, PURPOSE, GEN_NAME, INCOME_REASON_ID, EXPENSE_REASON_ID, STATE) select COMPANY_ID, FILIAL_ID, PAYMENT_CODE, PURPOSE, GEN_NAME, INCOME_REASON_ID, EXPENSE_REASON_ID, STATE from OLD_MKCS_BANK_PAYMENT_CODES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_EXCHANGE_FILES ** ====
insert into MKCS_EXCHANGE_FILES (COMPANY_ID, EXCHANGE_ID, FILE_SHA, NOTE) select COMPANY_ID, EXCHANGE_ID, FILE_SHA, NOTE from OLD_MKCS_EXCHANGE_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_REQUEST_SIGN_TEMPLATES ** ====
insert into MKCS_REQUEST_SIGN_TEMPLATES (COMPANY_ID, TEMPLATE_ID, FILIAL_ID, SUBFILIAL_ID, CASHFLOW_REASON_ID) select COMPANY_ID, TEMPLATE_ID, FILIAL_ID, SUBFILIAL_ID, CASHFLOW_REASON_ID from OLD_MKCS_REQUEST_SIGN_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_ROOM_BANK_ACCOUNTS ** ====
insert into MKCS_ROOM_BANK_ACCOUNTS (COMPANY_ID, FILIAL_ID, ROOM_ID, BANK_ACCOUNT_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROOM_ID, BANK_ACCOUNT_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_ROOM_BANK_ACCOUNTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_ROOM_CASHBOXES ** ====
insert into MKCS_ROOM_CASHBOXES (COMPANY_ID, FILIAL_ID, ROOM_ID, CASHBOX_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROOM_ID, CASHBOX_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_ROOM_CASHBOXES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_TRANSFER_FILES ** ====
insert into MKCS_TRANSFER_FILES (COMPANY_ID, TRANSFER_ID, FILE_SHA, NOTE) select COMPANY_ID, TRANSFER_ID, FILE_SHA, NOTE from OLD_MKCS_TRANSFER_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_CLIENT_MARGINS ** ====
insert into MKF_CLIENT_MARGINS (COMPANY_ID, FILIAL_ID, CLIENT_ID, MARGIN_ID, CREATED_ON, CREATED_BY) select COMPANY_ID, FILIAL_ID, CLIENT_ID, MARGIN_ID, CREATED_ON, CREATED_BY from OLD_MKF_CLIENT_MARGINS t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_CLIENT_PRICE_TYPES ** ====
insert into MKF_CLIENT_PRICE_TYPES (COMPANY_ID, FILIAL_ID, CLIENT_ID, PRICE_TYPE_ID, CREATED_ON, CREATED_BY) select COMPANY_ID, FILIAL_ID, CLIENT_ID, PRICE_TYPE_ID, CREATED_ON, CREATED_BY from OLD_MKF_CLIENT_PRICE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_PRICE_TYPE_PAYMENT_TYPES ** ====
insert into MKF_PRICE_TYPE_PAYMENT_TYPES (COMPANY_ID, FILIAL_ID, PRICE_TYPE_ID, PAYMENT_TYPE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, PRICE_TYPE_ID, PAYMENT_TYPE_ID, CREATED_BY, CREATED_ON from OLD_MKF_PRICE_TYPE_PAYMENT_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_ROOM_MARGINS ** ====
insert into MKF_ROOM_MARGINS (COMPANY_ID, ROOM_ID, MARGIN_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, MARGIN_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKF_ROOM_MARGINS t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_ROOM_PAYMENT_TYPES ** ====
insert into MKF_ROOM_PAYMENT_TYPES (COMPANY_ID, ROOM_ID, PAYMENT_TYPE_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, PAYMENT_TYPE_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKF_ROOM_PAYMENT_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKF_ROOM_PRICE_TYPES ** ====
insert into MKF_ROOM_PRICE_TYPES (COMPANY_ID, ROOM_ID, PRICE_TYPE_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, PRICE_TYPE_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKF_ROOM_PRICE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_BONUS_SETTINGS ** ====
insert into MKPI_BONUS_SETTINGS (COMPANY_ID, BONUS_SETTING_ID, FILIAL_ID, ROOM_ID, BONUS_SETTING_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BONUS_SETTING_ID, FILIAL_ID, ROOM_ID, BONUS_SETTING_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_BONUS_SETTINGS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_ROOM_PLANS ** ====
insert into MKPI_ROOM_PLANS (COMPANY_ID, PLAN_ID, FILIAL_ID, ROOM_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PLAN_ID, FILIAL_ID, ROOM_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_ROOM_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_ROOM_PLAN_SHARES ** ====
insert into MKPI_ROOM_PLAN_SHARES (COMPANY_ID, FILIAL_ID, ROOM_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROOM_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_ROOM_PLAN_SHARES t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_ROOM_PRODUCT_PLANS ** ====
insert into MKPI_ROOM_PRODUCT_PLANS (COMPANY_ID, PLAN_ID, FILIAL_ID, ROOM_ID, PRODUCT_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PLAN_ID, FILIAL_ID, ROOM_ID, PRODUCT_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_ROOM_PRODUCT_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_ROOM_PRODUCT_PLAN_SHARES ** ====
insert into MKPI_ROOM_PRODUCT_PLAN_SHARES (COMPANY_ID, FILIAL_ID, ROOM_ID, PRODUCT_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROOM_ID, PRODUCT_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_ROOM_PRODUCT_PLAN_SHARES t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_ROOM_PRODUCT_TYPE_PLANS ** ====
insert into MKPI_ROOM_PRODUCT_TYPE_PLANS (COMPANY_ID, PLAN_ID, FILIAL_ID, ROOM_ID, PRODUCT_TYPE_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PLAN_ID, FILIAL_ID, ROOM_ID, PRODUCT_TYPE_ID, PLAN_DATE, PLAN_TYPE, VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_ROOM_PRODUCT_TYPE_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_ROOM_PRODUCT_TYPE_PLAN_SHARES ** ====
insert into MKPI_ROOM_PRODUCT_TYPE_PLAN_SHARES (COMPANY_ID, FILIAL_ID, ROOM_ID, PRODUCT_TYPE_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROOM_ID, PRODUCT_TYPE_ID, PLAN_TYPE, PERCENT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_ROOM_PRODUCT_TYPE_PLAN_SHARES t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_COA_TWIN_REF_TYPES ** ====
insert into MKU_COA_TWIN_REF_TYPES (COMPANY_ID, REF_TYPE_UNIT_ID, COA_TWIN_ID, REF_TYPE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REF_TYPE_UNIT_ID, COA_TWIN_ID, REF_TYPE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_COA_TWIN_REF_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_INIT_PERSON_BALANCE_ITEMS ** ====
insert into MKU_INIT_PERSON_BALANCE_ITEMS (COMPANY_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, FILIAL_ID, PERSON_ID, CONTRACT_ID, DEBIT_AMOUNT, DEBIT_AMOUNT_BASE, CREDIT_AMOUNT, CREDIT_AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, FILIAL_ID, PERSON_ID, CONTRACT_ID, DEBIT_AMOUNT, DEBIT_AMOUNT_BASE, CREDIT_AMOUNT, CREDIT_AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_INIT_PERSON_BALANCE_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_OFFSET_ITEMS ** ====
insert into MKU_OFFSET_ITEMS (COMPANY_ID, OFFSET_ITEM_UNIT_ID, OFFSET_ID, FILIAL_ID, COA_TWIN_ID, FIRST_COA_ID, FIRST_REF_SET, SECOND_COA_ID, SECOND_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE) select COMPANY_ID, OFFSET_ITEM_UNIT_ID, OFFSET_ID, FILIAL_ID, COA_TWIN_ID, FIRST_COA_ID, FIRST_REF_SET, SECOND_COA_ID, SECOND_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE from OLD_MKU_OFFSET_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_EXTRA_COSTS ** ====
insert into MKW_EXTRA_COSTS (COMPANY_ID, EXTRA_COST_ID, FILIAL_ID, POSTED, EXTRA_COST_NUMBER, EXTRA_COST_DATE, AFFECTS_THE_PRICE, DISTRIBUTION_METHOD, ARTICLE_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_CONTRACT_ID, INVOICE_NUMBER, INVOICE_DATE, CURRENCY_ID, AMOUNT, AMOUNT_BASE, VAT_AMOUNT, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, EXTRA_COST_ID, FILIAL_ID, POSTED, EXTRA_COST_NUMBER, EXTRA_COST_DATE, AFFECTS_THE_PRICE, DISTRIBUTION_METHOD, ARTICLE_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_CONTRACT_ID, INVOICE_NUMBER, INVOICE_DATE, CURRENCY_ID, AMOUNT, AMOUNT_BASE, VAT_AMOUNT, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_EXTRA_COSTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INIT_INVENTORY_BALANCE_ITEMS ** ====
insert into MKW_INIT_INVENTORY_BALANCE_ITEMS (COMPANY_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, FILIAL_ID, PRODUCT_ID, INVENTORY_KIND, ON_BALANCE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, FILIAL_ID, PRODUCT_ID, INVENTORY_KIND, ON_BALANCE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INIT_INVENTORY_BALANCE_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_ROOM_WAREHOUSES ** ====
insert into MKW_ROOM_WAREHOUSES (COMPANY_ID, ROOM_ID, WAREHOUSE_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, WAREHOUSE_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_ROOM_WAREHOUSES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_SUPPLIER_PRODUCTS ** ====
insert into MKW_SUPPLIER_PRODUCTS (COMPANY_ID, FILIAL_ID, SUPPLIER_ID, PRODUCT_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, SUPPLIER_ID, PRODUCT_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_SUPPLIER_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_WAREHOUSE_PRICE_TYPES ** ====
insert into MKW_WAREHOUSE_PRICE_TYPES (COMPANY_ID, WAREHOUSE_ID, PRICE_TYPE_ID, FILIAL_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, WAREHOUSE_ID, PRICE_TYPE_ID, FILIAL_ID, CREATED_BY, CREATED_ON from OLD_MKW_WAREHOUSE_PRICE_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** MQZM_QUIZ_SET_ROOMS ** ====
insert into MQZM_QUIZ_SET_ROOMS (COMPANY_ID, FILIAL_ID, QUIZ_SET_ID, ROOM_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, QUIZ_SET_ID, ROOM_ID, CREATED_BY, CREATED_ON from OLD_MQZM_QUIZ_SET_ROOMS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_RESULT_QUIZS ** ====
insert into MQZ_RESULT_QUIZS (COMPANY_ID, RESULT_QUIZ_ID, RESULT_QUIZ_SET_ID, QUIZ_ID, ORDER_NO, RESULT_QUIZ_ANSWER_ID, NOTE, CREATED_BY, CREATED_ON) select COMPANY_ID, RESULT_QUIZ_ID, RESULT_QUIZ_SET_ID, QUIZ_ID, ORDER_NO, RESULT_QUIZ_ANSWER_ID, NOTE, CREATED_BY, CREATED_ON from OLD_MQZ_RESULT_QUIZS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_CLIENT_PRODUCT_SETS ** ====
insert into MRF_CLIENT_PRODUCT_SETS (COMPANY_ID, FILIAL_ID, CLIENT_ID, ORDER_PRODUCT_SET_ID, GIFT_PRODUCT_SET_ID, STOCK_PRODUCT_SET_ID, RETURN_PRODUCT_SET_ID, CREATED_ON, CREATED_BY) select COMPANY_ID, FILIAL_ID, CLIENT_ID, ORDER_PRODUCT_SET_ID, GIFT_PRODUCT_SET_ID, STOCK_PRODUCT_SET_ID, RETURN_PRODUCT_SET_ID, CREATED_ON, CREATED_BY from OLD_MRF_CLIENT_PRODUCT_SETS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_CLIENT_STATUS_CHANGES ** ====
insert into MRF_CLIENT_STATUS_CHANGES (COMPANY_ID, FILIAL_ID, CLIENT_ID, CHANGE_DATE, STATUS, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, CLIENT_ID, CHANGE_DATE, STATUS, MODIFIED_BY, MODIFIED_ON from OLD_MRF_CLIENT_STATUS_CHANGES t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_PRODUCT_SET_ITEMS ** ====
insert into MRF_PRODUCT_SET_ITEMS (COMPANY_ID, FILIAL_ID, PRODUCT_SET_ID, PRODUCT_ID, CREATED_ON, CREATED_BY) select COMPANY_ID, FILIAL_ID, PRODUCT_SET_ID, PRODUCT_ID, CREATED_ON, CREATED_BY from OLD_MRF_PRODUCT_SET_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROBOTS ** ====
insert into MRF_ROBOTS (COMPANY_ID, FILIAL_ID, ROBOT_ID, NAME, CODE, PERSON_ID, ROBOT_GROUP_ID, DIVISION_ID, JOB_ID, MANAGER_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID) select COMPANY_ID, FILIAL_ID, ROBOT_ID, NAME, CODE, PERSON_ID, ROBOT_GROUP_ID, DIVISION_ID, JOB_ID, MANAGER_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID from OLD_MRF_ROBOTS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROOM_PERSONS ** ====
insert into MRF_ROOM_PERSONS (COMPANY_ID, ROOM_ID, PERSON_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, PERSON_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_ROOM_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROOM_PROJECTS ** ====
insert into MRF_ROOM_PROJECTS (COMPANY_ID, ROOM_ID, PROJECT_CODE, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, PROJECT_CODE, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_ROOM_PROJECTS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROOM_SECTORS ** ====
insert into MRF_ROOM_SECTORS (COMPANY_ID, ROOM_ID, SECTOR_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, SECTOR_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_ROOM_SECTORS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROOM_SUBFILIALS ** ====
insert into MRF_ROOM_SUBFILIALS (COMPANY_ID, ROOM_ID, SUBFILIAL_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, SUBFILIAL_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_ROOM_SUBFILIALS t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_COMMENT_FILES ** ====
insert into MS_TASK_COMMENT_FILES (COMPANY_ID, COMMENT_ID, FILE_SHA, CREATED_BY, CREATED_ON) select COMPANY_ID, COMMENT_ID, FILE_SHA, CREATED_BY, CREATED_ON from OLD_MS_TASK_COMMENT_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MS_TASK_COMMENT_REACTIONS ** ====
insert into MS_TASK_COMMENT_REACTIONS (COMPANY_ID, COMMENT_ID, USER_ID, REACTION, CREATED_BY, CREATED_ON) select COMPANY_ID, COMMENT_ID, USER_ID, REACTION, CREATED_BY, CREATED_ON from OLD_MS_TASK_COMMENT_REACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MVTM_VISIT_NOTES ** ====
insert into MVTM_VISIT_NOTES (COMPANY_ID, NOTE_ID, VISIT_ID, ROOM_ID, PERSON_ID, NOTE, CREATED_BY, CREATED_ON) select COMPANY_ID, NOTE_ID, VISIT_ID, ROOM_ID, PERSON_ID, NOTE, CREATED_BY, CREATED_ON from OLD_MVTM_VISIT_NOTES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_JOURNAL_EMPLOYEES ** ====
insert into HPD_JOURNAL_EMPLOYEES (COMPANY_ID, FILIAL_ID, JOURNAL_ID, EMPLOYEE_ID) select COMPANY_ID, FILIAL_ID, JOURNAL_ID, EMPLOYEE_ID from OLD_HPD_JOURNAL_EMPLOYEES t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_CV_CONTRACT_FACT_ITEMS ** ====
insert into HPR_CV_CONTRACT_FACT_ITEMS (COMPANY_ID, FILIAL_ID, FACT_ITEM_ID, FACT_ID, CONTRACT_ITEM_ID, PLAN_QUANTITY, PLAN_AMOUNT, FACT_QUANTITY, FACT_AMOUNT, NAME) select COMPANY_ID, FILIAL_ID, FACT_ITEM_ID, FACT_ID, CONTRACT_ITEM_ID, PLAN_QUANTITY, PLAN_AMOUNT, FACT_QUANTITY, FACT_AMOUNT, NAME from OLD_HPR_CV_CONTRACT_FACT_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_OPER_TYPE_INDICATORS ** ====
insert into HPR_OPER_TYPE_INDICATORS (COMPANY_ID, OPER_TYPE_ID, INDICATOR_ID, IDENTIFIER) select COMPANY_ID, OPER_TYPE_ID, INDICATOR_ID, IDENTIFIER from OLD_HPR_OPER_TYPE_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_EMPLOYEE_DIVISIONS ** ====
insert into HREF_EMPLOYEE_DIVISIONS (COMPANY_ID, FILIAL_ID, EMPLOYEE_ID, DIVISION_ID) select COMPANY_ID, FILIAL_ID, EMPLOYEE_ID, DIVISION_ID from OLD_HREF_EMPLOYEE_DIVISIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HREF_STAFFS ** ====
insert into HREF_STAFFS (COMPANY_ID, FILIAL_ID, STAFF_ID, STAFF_NUMBER, STAFF_KIND, EMPLOYEE_ID, HIRING_DATE, DISMISSAL_DATE, ROBOT_ID, DIVISION_ID, JOB_ID, FTE, FTE_ID, RANK_ID, SCHEDULE_ID, DISMISSAL_REASON_ID, DISMISSAL_NOTE, PARENT_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, STAFF_ID, STAFF_NUMBER, STAFF_KIND, EMPLOYEE_ID, HIRING_DATE, DISMISSAL_DATE, ROBOT_ID, DIVISION_ID, JOB_ID, FTE, FTE_ID, RANK_ID, SCHEDULE_ID, DISMISSAL_REASON_ID, DISMISSAL_NOTE, PARENT_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HREF_STAFFS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_DIVISION_MANAGERS ** ====
insert into HRM_DIVISION_MANAGERS (COMPANY_ID, FILIAL_ID, DIVISION_ID, EMPLOYEE_ID) select COMPANY_ID, FILIAL_ID, DIVISION_ID, EMPLOYEE_ID from OLD_HRM_DIVISION_MANAGERS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_ROBOTS ** ====
insert into HRM_ROBOTS (COMPANY_ID, FILIAL_ID, ROBOT_ID, OPENED_DATE, CLOSED_DATE, SCHEDULE_ID, RANK_ID, LABOR_FUNCTION_ID, DESCRIPTION, HIRING_CONDITION, CONTRACTUAL_WAGE, WAGE_SCALE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROBOT_ID, OPENED_DATE, CLOSED_DATE, SCHEDULE_ID, RANK_ID, LABOR_FUNCTION_ID, DESCRIPTION, HIRING_CONDITION, CONTRACTUAL_WAGE, WAGE_SCALE_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_HRM_ROBOTS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_ROBOT_TRANSACTIONS ** ====
insert into HRM_ROBOT_TRANSACTIONS (COMPANY_ID, FILIAL_ID, TRANS_ID, ROBOT_ID, TRANS_DATE, FTE_KIND, FTE, TAG) select COMPANY_ID, FILIAL_ID, TRANS_ID, ROBOT_ID, TRANS_DATE, FTE_KIND, FTE, TAG from OLD_HRM_ROBOT_TRANSACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_TEMPLATE_INDICATORS ** ====
insert into HRM_TEMPLATE_INDICATORS (COMPANY_ID, FILIAL_ID, TEMPLATE_ID, INDICATOR_ID, INDICATOR_VALUE) select COMPANY_ID, FILIAL_ID, TEMPLATE_ID, INDICATOR_ID, INDICATOR_VALUE from OLD_HRM_TEMPLATE_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_TEMPLATE_OPER_TYPES ** ====
insert into HRM_TEMPLATE_OPER_TYPES (COMPANY_ID, FILIAL_ID, TEMPLATE_ID, OPER_TYPE_ID) select COMPANY_ID, FILIAL_ID, TEMPLATE_ID, OPER_TYPE_ID from OLD_HRM_TEMPLATE_OPER_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_POTENTIAL_OUTPUTS ** ====
insert into HTT_POTENTIAL_OUTPUTS (COMPANY_ID, FILIAL_ID, TRACK_ID) select COMPANY_ID, FILIAL_ID, TRACK_ID from OLD_HTT_POTENTIAL_OUTPUTS t where t.company_id = &company_id;
commit;
prompt ==== ** HZK_ATTLOG_ERRORS ** ====
insert into HZK_ATTLOG_ERRORS (COMPANY_ID, ERROR_ID, DEVICE_ID, COMMAND, ERROR, STATUS) select COMPANY_ID, ERROR_ID, DEVICE_ID, COMMAND, ERROR, STATUS from OLD_HZK_ATTLOG_ERRORS t where t.company_id = &company_id;
commit;
prompt ==== ** HZK_COMMANDS ** ====
insert into HZK_COMMANDS (COMPANY_ID, COMMAND_ID, DEVICE_ID, COMMAND, COMMAND_CLOB, STATE, STATE_CHANGED_ON) select COMPANY_ID, COMMAND_ID, DEVICE_ID, COMMAND, COMMAND_CLOB, STATE, STATE_CHANGED_ON from OLD_HZK_COMMANDS t where t.company_id = &company_id;
commit;
prompt ==== ** HZK_DEVICE_FPRINTS ** ====
insert into HZK_DEVICE_FPRINTS (COMPANY_ID, DEVICE_ID, PERSON_ID, FINGER_NO) select COMPANY_ID, DEVICE_ID, PERSON_ID, FINGER_NO from OLD_HZK_DEVICE_FPRINTS t where t.company_id = &company_id;
commit;
prompt ==== ** HZK_DEVICE_PERSONS ** ====
insert into HZK_DEVICE_PERSONS (COMPANY_ID, DEVICE_ID, PERSON_ID) select COMPANY_ID, DEVICE_ID, PERSON_ID from OLD_HZK_DEVICE_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** HZK_MIGR_PERSONS ** ====
insert into HZK_MIGR_PERSONS (COMPANY_ID, MIGR_PERSON_ID, DEVICE_ID, PIN, PERSON_NAME, PERSON_ROLE, PASSWORD, RFID_CODE) select COMPANY_ID, MIGR_PERSON_ID, DEVICE_ID, PIN, PERSON_NAME, PERSON_ROLE, PASSWORD, RFID_CODE from OLD_HZK_MIGR_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** HZK_MIGR_TRACKS ** ====
insert into HZK_MIGR_TRACKS (COMPANY_ID, MIGR_TRACK_ID, PIN, DEVICE_ID, LOCATION_ID, TRACK_TYPE, TRACK_TIME, TRACK_DATE, MARK_TYPE) select COMPANY_ID, MIGR_TRACK_ID, PIN, DEVICE_ID, LOCATION_ID, TRACK_TYPE, TRACK_TIME, TRACK_DATE, MARK_TYPE from OLD_HZK_MIGR_TRACKS t where t.company_id = &company_id;
commit;
prompt ==== ** MCG_OVERLOAD_RULE_LOADS ** ====
insert into MCG_OVERLOAD_RULE_LOADS (COMPANY_ID, LOAD_ID, RULE_ID, PRODUCT_ID, INVENTORY_KIND, LOAD_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, LOAD_ID, RULE_ID, PRODUCT_ID, INVENTORY_KIND, LOAD_VALUE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MCG_OVERLOAD_RULE_LOADS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_HEADERS ** ====
insert into MDEAL_HEADERS (COMPANY_ID, DEAL_ID, FILIAL_ID, SUBFILIAL_ID, ROOM_ID, PERSON_ID, OWNER_PERSON_ID, CORR_EXTRA_REF_SET, CURRENCY_ID, DEAL_KIND, DEAL_TIME, DEAL_DATE, DELIVERY_DATE, DELIVERY_NUMBER, BOOKED_DATE, BASE_STATUS, BOOK_STATUS, STATUS, ROBOT_ID, SALES_MANAGER_ID, MANAGER_ID, EXPEDITOR_ID, VAN_ID, CONTRACT_ID, INVOICE_NUMBER, BATCH_NUMBER, ORDER_DEAL_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_AMOUNT, TOTAL_AMOUNT, TOTAL_AMOUNT_BASE, BOOKED_PAYMENT_AMOUNT, BOOKED_PAYMENT_AMOUNT_BASE, PAYMENT_TYPE_ID, SOURCE_TABLE, SOURCE_ID, NOTE, RETURN_REASON_ID, CODE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DEAL_ID, FILIAL_ID, SUBFILIAL_ID, ROOM_ID, PERSON_ID, OWNER_PERSON_ID, CORR_EXTRA_REF_SET, CURRENCY_ID, DEAL_KIND, DEAL_TIME, DEAL_DATE, DELIVERY_DATE, DELIVERY_NUMBER, BOOKED_DATE, BASE_STATUS, BOOK_STATUS, STATUS, ROBOT_ID, SALES_MANAGER_ID, MANAGER_ID, EXPEDITOR_ID, VAN_ID, CONTRACT_ID, INVOICE_NUMBER, BATCH_NUMBER, ORDER_DEAL_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_AMOUNT, TOTAL_AMOUNT, TOTAL_AMOUNT_BASE, BOOKED_PAYMENT_AMOUNT, BOOKED_PAYMENT_AMOUNT_BASE, PAYMENT_TYPE_ID, SOURCE_TABLE, SOURCE_ID, NOTE, RETURN_REASON_ID, CODE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDEAL_HEADERS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_ORIGIN_HEADERS ** ====
insert into MDEAL_ORIGIN_HEADERS (COMPANY_ID, DEAL_ID, FILIAL_ID, SUBFILIAL_ID, ROOM_ID, PERSON_ID, OWNER_PERSON_ID, CORR_EXTRA_REF_SET, CURRENCY_ID, DEAL_KIND, DEAL_TIME, DEAL_DATE, DELIVERY_DATE, DELIVERY_NUMBER, BOOKED_DATE, BASE_STATUS, BOOK_STATUS, STATUS, ROBOT_ID, SALES_MANAGER_ID, MANAGER_ID, EXPEDITOR_ID, VAN_ID, CONTRACT_ID, INVOICE_NUMBER, BATCH_NUMBER, ORDER_DEAL_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_AMOUNT, TOTAL_AMOUNT, TOTAL_AMOUNT_BASE, BOOKED_PAYMENT_AMOUNT, BOOKED_PAYMENT_AMOUNT_BASE, PAYMENT_TYPE_ID, SOURCE_TABLE, SOURCE_ID, NOTE, RETURN_REASON_ID, CODE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DEAL_ID, FILIAL_ID, SUBFILIAL_ID, ROOM_ID, PERSON_ID, OWNER_PERSON_ID, CORR_EXTRA_REF_SET, CURRENCY_ID, DEAL_KIND, DEAL_TIME, DEAL_DATE, DELIVERY_DATE, DELIVERY_NUMBER, BOOKED_DATE, BASE_STATUS, BOOK_STATUS, STATUS, ROBOT_ID, SALES_MANAGER_ID, MANAGER_ID, EXPEDITOR_ID, VAN_ID, CONTRACT_ID, INVOICE_NUMBER, BATCH_NUMBER, ORDER_DEAL_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_AMOUNT, TOTAL_AMOUNT, TOTAL_AMOUNT_BASE, BOOKED_PAYMENT_AMOUNT, BOOKED_PAYMENT_AMOUNT_BASE, PAYMENT_TYPE_ID, SOURCE_TABLE, SOURCE_ID, NOTE, RETURN_REASON_ID, CODE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDEAL_ORIGIN_HEADERS t where t.company_id = &company_id;
commit;
prompt ==== ** MDF_SIGN_DOCUMENT_PERSONS ** ====
insert into MDF_SIGN_DOCUMENT_PERSONS (COMPANY_ID, DOCUMENT_ID, LEVEL_NO, GROUP_NO, PERSON_ID, STATE, NOTE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DOCUMENT_ID, LEVEL_NO, GROUP_NO, PERSON_ID, STATE, NOTE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDF_SIGN_DOCUMENT_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MDF_SIGN_TEMPLATE_USERS ** ====
insert into MDF_SIGN_TEMPLATE_USERS (COMPANY_ID, TEMPLATE_ID, LEVEL_NO, GROUP_NO, USER_ID, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, TEMPLATE_ID, LEVEL_NO, GROUP_NO, USER_ID, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDF_SIGN_TEMPLATE_USERS t where t.company_id = &company_id;
commit;
prompt ==== ** MFG_MANUFACTURES ** ====
insert into MFG_MANUFACTURES (COMPANY_ID, MANUFACTURE_ID, FILIAL_ID, INPUT_DATE, OUTPUT_DATE, MANUFACTURE_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, STATUS, INPUT_WAREHOUSE_ID, OUTPUT_WAREHOUSE_ID, SPECIFICATION_ID, CURRENCY_ID, BATCH_NUMBER, NOTE, C_AMOUNT, C_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MANUFACTURE_ID, FILIAL_ID, INPUT_DATE, OUTPUT_DATE, MANUFACTURE_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, STATUS, INPUT_WAREHOUSE_ID, OUTPUT_WAREHOUSE_ID, SPECIFICATION_ID, CURRENCY_ID, BATCH_NUMBER, NOTE, C_AMOUNT, C_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MFG_MANUFACTURES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_BANK_APPOINTMENTS ** ====
insert into MKCS_BANK_APPOINTMENTS (COMPANY_ID, APPOINTMENT_ID, FILIAL_ID, SUBFILIAL_ID, STATUS, APPOINTMENT_NUMBER, APPOINTMENT_DATE, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, APPOINTMENT_ID, FILIAL_ID, SUBFILIAL_ID, STATUS, APPOINTMENT_NUMBER, APPOINTMENT_DATE, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_BANK_APPOINTMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_BANK_OPERATIONS ** ====
insert into MKCS_BANK_OPERATIONS (COMPANY_ID, OPERATION_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, POSTED, OPERATION_NUMBER, OPERATION_DATE, BANK_TRANS_NUMBER, BANK_TRANS_DATE, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, OPERATION_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, POSTED, OPERATION_NUMBER, OPERATION_DATE, BANK_TRANS_NUMBER, BANK_TRANS_DATE, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_BANK_OPERATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_CASH_OPERATIONS ** ====
insert into MKCS_CASH_OPERATIONS (COMPANY_ID, OPERATION_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, POSTED, OPERATION_NUMBER, OPERATION_DATE, CASHBOX_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CURRENCY_ID, AMOUNT, RESPONSIBLE_PERSON_ID, COLLECTOR_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, OPERATION_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, POSTED, OPERATION_NUMBER, OPERATION_DATE, CASHBOX_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CURRENCY_ID, AMOUNT, RESPONSIBLE_PERSON_ID, COLLECTOR_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKCS_CASH_OPERATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_REQUESTS ** ====
insert into MKCS_REQUESTS (COMPANY_ID, REQUEST_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, STATUS, REQUEST_NUMBER, REQUEST_DATE, REQUEST_KIND, PAYMENT_DATE, PAYMENT_KIND, CASHBOX_ID, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, REQUEST_GROUP_ID, SIGN_DOCUMENT_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON) select COMPANY_ID, REQUEST_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, STATUS, REQUEST_NUMBER, REQUEST_DATE, REQUEST_KIND, PAYMENT_DATE, PAYMENT_KIND, CASHBOX_ID, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, REQUEST_GROUP_ID, SIGN_DOCUMENT_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON from OLD_MKCS_REQUESTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_BONUS_SETTING_ITEMS ** ====
insert into MKPI_BONUS_SETTING_ITEMS (COMPANY_ID, BONUS_SETTING_ITEM_ID, BONUS_SETTING_ID, KPI_KIND, PLAN_KIND, VALUE, FROM_DEAL, WITH_AVG) select COMPANY_ID, BONUS_SETTING_ITEM_ID, BONUS_SETTING_ID, KPI_KIND, PLAN_KIND, VALUE, FROM_DEAL, WITH_AVG from OLD_MKPI_BONUS_SETTING_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CALC_BONUSES ** ====
insert into MKPI_CALC_BONUSES (COMPANY_ID, CALC_ID, FILIAL_ID, BONUS_SETTING_ID, ROOM_ID, BONUS_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, CALC_ID, FILIAL_ID, BONUS_SETTING_ID, ROOM_ID, BONUS_DATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKPI_CALC_BONUSES t where t.company_id = &company_id;
commit;
prompt ==== ** MKU_REALLOCATIONS ** ====
insert into MKU_REALLOCATIONS (COMPANY_ID, REALLOCATION_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, REALLOCATION_DATE, POSTED, REALLOCATION_KIND, COA_ID, FROM_REF_SET, FROM_CURRENCY_ID, FROM_PAYMENT_TYPE_ID, FROM_PERSON_ID, FROM_CONTRACT_ID, FROM_AMOUNT, TO_REF_SET, TO_CURRENCY_ID, TO_PAYMENT_TYPE_ID, TO_PERSON_ID, TO_CONTRACT_ID, TO_AMOUNT, INCOME_ARTICLE_ID, EXPENSE_ARTICLE_ID, REALLOCATION_NUMBER, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REALLOCATION_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, REALLOCATION_DATE, POSTED, REALLOCATION_KIND, COA_ID, FROM_REF_SET, FROM_CURRENCY_ID, FROM_PAYMENT_TYPE_ID, FROM_PERSON_ID, FROM_CONTRACT_ID, FROM_AMOUNT, TO_REF_SET, TO_CURRENCY_ID, TO_PAYMENT_TYPE_ID, TO_PERSON_ID, TO_CONTRACT_ID, TO_AMOUNT, INCOME_ARTICLE_ID, EXPENSE_ARTICLE_ID, REALLOCATION_NUMBER, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKU_REALLOCATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_MOVEMENT_REQUESTS ** ====
insert into MKW_MOVEMENT_REQUESTS (COMPANY_ID, REQUEST_ID, FILIAL_ID, STATUS, REQUEST_TIME, REQUEST_DATE, REQUEST_NUMBER, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, MOVEMENT_DATE, FROM_WAREHOUSE_ID, TO_WAREHOUSE_ID, REASON_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REQUEST_ID, FILIAL_ID, STATUS, REQUEST_TIME, REQUEST_DATE, REQUEST_NUMBER, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, MOVEMENT_DATE, FROM_WAREHOUSE_ID, TO_WAREHOUSE_ID, REASON_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_MOVEMENT_REQUESTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_ORDERS ** ====
insert into MKW_PURCHASE_ORDERS (COMPANY_ID, ORDER_ID, FILIAL_ID, STATUS, ORDER_TIME, ORDER_DATE, ORDER_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, PURCHASE_DATE, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ORDER_ID, FILIAL_ID, STATUS, ORDER_TIME, ORDER_DATE, ORDER_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, PURCHASE_DATE, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASE_ORDERS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_REQUESTS ** ====
insert into MKW_PURCHASE_REQUESTS (COMPANY_ID, REQUEST_ID, FILIAL_ID, STATUS, REQUEST_TIME, REQUEST_DATE, REQUEST_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, EXPIRY_DATE, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REQUEST_ID, FILIAL_ID, STATUS, REQUEST_TIME, REQUEST_DATE, REQUEST_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, EXPIRY_DATE, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASE_REQUESTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_REVALUATIONS ** ====
insert into MKW_REVALUATIONS (COMPANY_ID, REVALUATION_ID, FILIAL_ID, SUBFILIAL_ID, POSTED, REVALUATION_DATE, REVALUATION_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REVALUATION_ID, FILIAL_ID, SUBFILIAL_ID, POSTED, REVALUATION_DATE, REVALUATION_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_REVALUATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_STOCKTAKINGS ** ====
insert into MKW_STOCKTAKINGS (COMPANY_ID, STOCKTAKING_ID, FILIAL_ID, STATUS, STOCKTAKING_NUMBER, STOCKTAKING_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, REASON_ID, INCOME_BATCH_NUMBER, NOTE, BARCODE, C_INCOME_AMOUNT, C_INCOME_AMOUNT_BASE, C_EXPENSE_AMOUNT, C_EXPENSE_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, STOCKTAKING_ID, FILIAL_ID, STATUS, STOCKTAKING_NUMBER, STOCKTAKING_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, REASON_ID, INCOME_BATCH_NUMBER, NOTE, BARCODE, C_INCOME_AMOUNT, C_INCOME_AMOUNT_BASE, C_EXPENSE_AMOUNT, C_EXPENSE_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_STOCKTAKINGS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_WRITEOFFS ** ====
insert into MKW_WRITEOFFS (COMPANY_ID, WRITEOFF_ID, FILIAL_ID, STATUS, WRITEOFF_NUMBER, WRITEOFF_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, REASON_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, WRITEOFF_ID, FILIAL_ID, STATUS, WRITEOFF_NUMBER, WRITEOFF_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, REASON_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_WRITEOFFS t where t.company_id = &company_id;
commit;
prompt ==== ** MPR_BOOK_OPERATIONS ** ====
insert into MPR_BOOK_OPERATIONS (COMPANY_ID, FILIAL_ID, BOOK_ID, OPERATION_ID, EMPLOYEE_ID, OPER_TYPE_ID, AMOUNT, AMOUNT_BASE, NET_AMOUNT, INCOME_TAX_AMOUNT, PENSION_PAYMENT_AMOUNT, SOCIAL_PAYMENT_AMOUNT, ORDER_NO) select COMPANY_ID, FILIAL_ID, BOOK_ID, OPERATION_ID, EMPLOYEE_ID, OPER_TYPE_ID, AMOUNT, AMOUNT_BASE, NET_AMOUNT, INCOME_TAX_AMOUNT, PENSION_PAYMENT_AMOUNT, SOCIAL_PAYMENT_AMOUNT, ORDER_NO from OLD_MPR_BOOK_OPERATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MPR_PAYMENT_EMPLOYEES ** ====
insert into MPR_PAYMENT_EMPLOYEES (COMPANY_ID, PAYMENT_ID, FILIAL_ID, EMPLOYEE_ID, BANK_ACCOUNT_ID, PAY_AMOUNT, PAY_AMOUNT_BASE, PAID_DATE, PAID, NOTE, ORDER_NO) select COMPANY_ID, PAYMENT_ID, FILIAL_ID, EMPLOYEE_ID, BANK_ACCOUNT_ID, PAY_AMOUNT, PAY_AMOUNT_BASE, PAID_DATE, PAID, NOTE, ORDER_NO from OLD_MPR_PAYMENT_EMPLOYEES t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_RESULT_QUIZ_ANSWERS ** ====
insert into MQZ_RESULT_QUIZ_ANSWERS (COMPANY_ID, RESULT_QUIZ_ANSWER_ID, RESULT_QUIZ_ID, OPTION_ID, ANSWER, CREATED_BY, CREATED_ON) select COMPANY_ID, RESULT_QUIZ_ANSWER_ID, RESULT_QUIZ_ID, OPTION_ID, ANSWER, CREATED_BY, CREATED_ON from OLD_MQZ_RESULT_QUIZ_ANSWERS t where t.company_id = &company_id;
commit;
prompt ==== ** MQZ_RESULT_QUIZ_PHOTOS ** ====
insert into MQZ_RESULT_QUIZ_PHOTOS (COMPANY_ID, RESULT_QUIZ_ID, RESULT_PHOTO_ID, PHOTO_SHA, TEMP_SHA, CREATED_BY, CREATED_ON) select COMPANY_ID, RESULT_QUIZ_ID, RESULT_PHOTO_ID, PHOTO_SHA, TEMP_SHA, CREATED_BY, CREATED_ON from OLD_MQZ_RESULT_QUIZ_PHOTOS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_DIVISION_MANAGERS ** ====
insert into MRF_DIVISION_MANAGERS (COMPANY_ID, FILIAL_ID, DIVISION_ID, MANAGER_ID) select COMPANY_ID, FILIAL_ID, DIVISION_ID, MANAGER_ID from OLD_MRF_DIVISION_MANAGERS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROBOT_DATA_ACCESSES ** ====
insert into MRF_ROBOT_DATA_ACCESSES (COMPANY_ID, FILIAL_ID, ROBOT_ID, DATA_ACCESS_ID, DATA_ACCESS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROBOT_ID, DATA_ACCESS_ID, DATA_ACCESS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_ROBOT_DATA_ACCESSES t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROBOT_PERSONS ** ====
insert into MRF_ROBOT_PERSONS (COMPANY_ID, FILIAL_ID, ROBOT_ID, PERSON_ID) select COMPANY_ID, FILIAL_ID, ROBOT_ID, PERSON_ID from OLD_MRF_ROBOT_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROBOT_ROLES ** ====
insert into MRF_ROBOT_ROLES (COMPANY_ID, ROBOT_ID, FILIAL_ID, ROLE_ID, CREATED_BY, CREATED_ON) select COMPANY_ID, ROBOT_ID, FILIAL_ID, ROLE_ID, CREATED_BY, CREATED_ON from OLD_MRF_ROBOT_ROLES t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_ROOM_ROBOTS ** ====
insert into MRF_ROOM_ROBOTS (COMPANY_ID, ROOM_ID, ROBOT_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ROOM_ID, ROBOT_ID, FILIAL_ID, STATE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MRF_ROOM_ROBOTS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_SIGN_TEMPLATE_ROBOTS ** ====
insert into MRF_SIGN_TEMPLATE_ROBOTS (COMPANY_ID, TEMPLATE_ID, FILIAL_ID, LEVEL_NO, GROUP_NO, ROBOT_ID, ESIGN_REQUIRED, ORDER_NO) select COMPANY_ID, TEMPLATE_ID, FILIAL_ID, LEVEL_NO, GROUP_NO, ROBOT_ID, ESIGN_REQUIRED, ORDER_NO from OLD_MRF_SIGN_TEMPLATE_ROBOTS t where t.company_id = &company_id;
commit;
prompt ==== ** HLIC_REQUIRED_DATES ** ====
insert into HLIC_REQUIRED_DATES (COMPANY_ID, FILIAL_ID, INTERVAL_ID, REQUIRED_DATE, EMPLOYEE_ID, STAFF_ID) select COMPANY_ID, FILIAL_ID, INTERVAL_ID, REQUIRED_DATE, EMPLOYEE_ID, STAFF_ID from OLD_HLIC_REQUIRED_DATES t where t.company_id = &company_id;
commit;
prompt ==== ** HLIC_REQUIRED_INTERVALS ** ====
insert into HLIC_REQUIRED_INTERVALS (COMPANY_ID, FILIAL_ID, INTERVAL_ID, STAFF_ID, EMPLOYEE_ID, START_DATE, FINISH_DATE, STATUS) select COMPANY_ID, FILIAL_ID, INTERVAL_ID, STAFF_ID, EMPLOYEE_ID, START_DATE, FINISH_DATE, STATUS from OLD_HLIC_REQUIRED_INTERVALS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_AGREEMENTS_CACHE ** ====
insert into HPD_AGREEMENTS_CACHE (COMPANY_ID, FILIAL_ID, STAFF_ID, BEGIN_DATE, END_DATE, ROBOT_ID, SCHEDULE_ID) select COMPANY_ID, FILIAL_ID, STAFF_ID, BEGIN_DATE, END_DATE, ROBOT_ID, SCHEDULE_ID from OLD_HPD_AGREEMENTS_CACHE t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_JOURNAL_OVERTIMES ** ====
insert into HPD_JOURNAL_OVERTIMES (COMPANY_ID, FILIAL_ID, OVERTIME_ID, JOURNAL_ID, EMPLOYEE_ID, STAFF_ID, BEGIN_DATE, END_DATE, MODIFIED_ID) select COMPANY_ID, FILIAL_ID, OVERTIME_ID, JOURNAL_ID, EMPLOYEE_ID, STAFF_ID, BEGIN_DATE, END_DATE, MODIFIED_ID from OLD_HPD_JOURNAL_OVERTIMES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_JOURNAL_PAGES ** ====
insert into HPD_JOURNAL_PAGES (COMPANY_ID, FILIAL_ID, JOURNAL_ID, PAGE_ID, STAFF_ID, EMPLOYEE_ID, MODIFIED_ID) select COMPANY_ID, FILIAL_ID, JOURNAL_ID, PAGE_ID, STAFF_ID, EMPLOYEE_ID, MODIFIED_ID from OLD_HPD_JOURNAL_PAGES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_JOURNAL_TIMEOFFS ** ====
insert into HPD_JOURNAL_TIMEOFFS (COMPANY_ID, FILIAL_ID, TIMEOFF_ID, JOURNAL_ID, EMPLOYEE_ID, STAFF_ID, BEGIN_DATE, END_DATE) select COMPANY_ID, FILIAL_ID, TIMEOFF_ID, JOURNAL_ID, EMPLOYEE_ID, STAFF_ID, BEGIN_DATE, END_DATE from OLD_HPD_JOURNAL_TIMEOFFS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_LOCK_INTERVALS ** ====
insert into HPD_LOCK_INTERVALS (COMPANY_ID, FILIAL_ID, INTERVAL_ID, STAFF_ID, BEGIN_DATE, END_DATE, KIND) select COMPANY_ID, FILIAL_ID, INTERVAL_ID, STAFF_ID, BEGIN_DATE, END_DATE, KIND from OLD_HPD_LOCK_INTERVALS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_ROBOT_TRANS_STAFFS ** ====
insert into HPD_ROBOT_TRANS_STAFFS (COMPANY_ID, FILIAL_ID, ROBOT_TRANS_ID, STAFF_ID) select COMPANY_ID, FILIAL_ID, ROBOT_TRANS_ID, STAFF_ID from OLD_HPD_ROBOT_TRANS_STAFFS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_VACATION_TURNOVER ** ====
insert into HPD_VACATION_TURNOVER (COMPANY_ID, FILIAL_ID, STAFF_ID, PERIOD, PLANNED_DAYS, USED_DAYS) select COMPANY_ID, FILIAL_ID, STAFF_ID, PERIOD, PLANNED_DAYS, USED_DAYS from OLD_HPD_VACATION_TURNOVER t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_ONETIME_SHEET_STAFFS ** ====
insert into HPR_ONETIME_SHEET_STAFFS (COMPANY_ID, FILIAL_ID, SHEET_ID, STAFF_ID, MONTH, DIVISION_ID, JOB_ID, SCHEDULE_ID, ACCRUAL_AMOUNT, PENALTY_AMOUNT) select COMPANY_ID, FILIAL_ID, SHEET_ID, STAFF_ID, MONTH, DIVISION_ID, JOB_ID, SCHEDULE_ID, ACCRUAL_AMOUNT, PENALTY_AMOUNT from OLD_HPR_ONETIME_SHEET_STAFFS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_SHEET_PARTS ** ====
insert into HPR_SHEET_PARTS (COMPANY_ID, FILIAL_ID, PART_ID, PART_BEGIN, PART_END, STAFF_ID, SHEET_ID, DIVISION_ID, JOB_ID, SCHEDULE_ID, FTE_ID, MONTHLY_AMOUNT, PLAN_AMOUNT, WAGE_AMOUNT, OVERTIME_AMOUNT, LATE_AMOUNT, EARLY_AMOUNT, LACK_AMOUNT, DAY_SKIP_AMOUNT) select COMPANY_ID, FILIAL_ID, PART_ID, PART_BEGIN, PART_END, STAFF_ID, SHEET_ID, DIVISION_ID, JOB_ID, SCHEDULE_ID, FTE_ID, MONTHLY_AMOUNT, PLAN_AMOUNT, WAGE_AMOUNT, OVERTIME_AMOUNT, LATE_AMOUNT, EARLY_AMOUNT, LACK_AMOUNT, DAY_SKIP_AMOUNT from OLD_HPR_SHEET_PARTS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_TIMEBOOK_STAFFS ** ====
insert into HPR_TIMEBOOK_STAFFS (COMPANY_ID, FILIAL_ID, TIMEBOOK_ID, STAFF_ID, SCHEDULE_ID, JOB_ID, DIVISION_ID, PLAN_DAYS, PLAN_HOURS, FACT_DAYS, FACT_HOURS) select COMPANY_ID, FILIAL_ID, TIMEBOOK_ID, STAFF_ID, SCHEDULE_ID, JOB_ID, DIVISION_ID, PLAN_DAYS, PLAN_HOURS, FACT_DAYS, FACT_HOURS from OLD_HPR_TIMEBOOK_STAFFS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_ROBOT_DIVISIONS ** ====
insert into HRM_ROBOT_DIVISIONS (COMPANY_ID, FILIAL_ID, ROBOT_ID, DIVISION_ID, ACCESS_TYPE) select COMPANY_ID, FILIAL_ID, ROBOT_ID, DIVISION_ID, ACCESS_TYPE from OLD_HRM_ROBOT_DIVISIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_ROBOT_INDICATORS ** ====
insert into HRM_ROBOT_INDICATORS (COMPANY_ID, FILIAL_ID, ROBOT_ID, INDICATOR_ID, INDICATOR_VALUE) select COMPANY_ID, FILIAL_ID, ROBOT_ID, INDICATOR_ID, INDICATOR_VALUE from OLD_HRM_ROBOT_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_ROBOT_OPER_TYPES ** ====
insert into HRM_ROBOT_OPER_TYPES (COMPANY_ID, FILIAL_ID, ROBOT_ID, OPER_TYPE_ID) select COMPANY_ID, FILIAL_ID, ROBOT_ID, OPER_TYPE_ID from OLD_HRM_ROBOT_OPER_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_ROBOT_VACATION_LIMITS ** ====
insert into HRM_ROBOT_VACATION_LIMITS (COMPANY_ID, FILIAL_ID, ROBOT_ID, DAYS_LIMIT) select COMPANY_ID, FILIAL_ID, ROBOT_ID, DAYS_LIMIT from OLD_HRM_ROBOT_VACATION_LIMITS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_TEMP_OPER_TYPE_INDICATORS ** ====
insert into HRM_TEMP_OPER_TYPE_INDICATORS (COMPANY_ID, FILIAL_ID, TEMPLATE_ID, OPER_TYPE_ID, INDICATOR_ID) select COMPANY_ID, FILIAL_ID, TEMPLATE_ID, OPER_TYPE_ID, INDICATOR_ID from OLD_HRM_TEMP_OPER_TYPE_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_PLAN_CHANGES ** ====
insert into HTT_PLAN_CHANGES (COMPANY_ID, FILIAL_ID, CHANGE_ID, STAFF_ID, CHANGE_KIND, MANAGER_NOTE, NOTE, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID, APPROVED_BY, COMPLETED_BY) select COMPANY_ID, FILIAL_ID, CHANGE_ID, STAFF_ID, CHANGE_KIND, MANAGER_NOTE, NOTE, STATUS, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID, APPROVED_BY, COMPLETED_BY from OLD_HTT_PLAN_CHANGES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_REGISTRY_UNITS ** ====
insert into HTT_REGISTRY_UNITS (COMPANY_ID, FILIAL_ID, UNIT_ID, REGISTRY_ID, STAFF_ID, ROBOT_ID, MONTHLY_MINUTES, MONTHLY_DAYS) select COMPANY_ID, FILIAL_ID, UNIT_ID, REGISTRY_ID, STAFF_ID, ROBOT_ID, MONTHLY_MINUTES, MONTHLY_DAYS from OLD_HTT_REGISTRY_UNITS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_REQUEST_KIND_ACCRUALS ** ====
insert into HTT_REQUEST_KIND_ACCRUALS (COMPANY_ID, FILIAL_ID, STAFF_ID, REQUEST_KIND_ID, PERIOD, ACCRUAL_KIND, ACCRUED_DAYS) select COMPANY_ID, FILIAL_ID, STAFF_ID, REQUEST_KIND_ID, PERIOD, ACCRUAL_KIND, ACCRUED_DAYS from OLD_HTT_REQUEST_KIND_ACCRUALS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_REQUESTS ** ====
insert into HTT_REQUESTS (COMPANY_ID, FILIAL_ID, REQUEST_ID, REQUEST_KIND_ID, STAFF_ID, BEGIN_TIME, END_TIME, REQUEST_TYPE, MANAGER_NOTE, NOTE, ACCRUAL_KIND, STATUS, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID, APPROVED_BY, COMPLETED_BY) select COMPANY_ID, FILIAL_ID, REQUEST_ID, REQUEST_KIND_ID, STAFF_ID, BEGIN_TIME, END_TIME, REQUEST_TYPE, MANAGER_NOTE, NOTE, ACCRUAL_KIND, STATUS, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON, MODIFIED_ID, APPROVED_BY, COMPLETED_BY from OLD_HTT_REQUESTS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_STAFF_REQUEST_KINDS ** ====
insert into HTT_STAFF_REQUEST_KINDS (COMPANY_ID, FILIAL_ID, STAFF_ID, REQUEST_KIND_ID) select COMPANY_ID, FILIAL_ID, STAFF_ID, REQUEST_KIND_ID from OLD_HTT_STAFF_REQUEST_KINDS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TIMESHEETS ** ====
insert into HTT_TIMESHEETS (COMPANY_ID, FILIAL_ID, TIMESHEET_ID, TIMESHEET_DATE, STAFF_ID, EMPLOYEE_ID, SCHEDULE_ID, CALENDAR_ID, DAY_KIND, TRACK_DURATION, COUNT_LATE, COUNT_EARLY, COUNT_LACK, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, PLAN_TIME, FULL_TIME, INPUT_TIME, OUTPUT_TIME, PLANNED_MARKS, DONE_MARKS, SCHEDULE_KIND) select COMPANY_ID, FILIAL_ID, TIMESHEET_ID, TIMESHEET_DATE, STAFF_ID, EMPLOYEE_ID, SCHEDULE_ID, CALENDAR_ID, DAY_KIND, TRACK_DURATION, COUNT_LATE, COUNT_EARLY, COUNT_LACK, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, PLAN_TIME, FULL_TIME, INPUT_TIME, OUTPUT_TIME, PLANNED_MARKS, DONE_MARKS, SCHEDULE_KIND from OLD_HTT_TIMESHEETS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_CONSIGNMENTS ** ====
insert into MDEAL_CONSIGNMENTS (COMPANY_ID, CONSIGNMENT_UNIT_ID, DEAL_ID, FILIAL_ID, CONSIGNMENT_DATE, CONSIGNMENT_AMOUNT) select COMPANY_ID, CONSIGNMENT_UNIT_ID, DEAL_ID, FILIAL_ID, CONSIGNMENT_DATE, CONSIGNMENT_AMOUNT from OLD_MDEAL_CONSIGNMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_DEAL_PERSON_ACTION_HISTORIES ** ====
insert into MDEAL_DEAL_PERSON_ACTION_HISTORIES (COMPANY_ID, FILIAL_ID, PERSON_ID, DEAL_ID, ACTION_ID, DEAL_DATE, COVERED_VALUE) select COMPANY_ID, FILIAL_ID, PERSON_ID, DEAL_ID, ACTION_ID, DEAL_DATE, COVERED_VALUE from OLD_MDEAL_DEAL_PERSON_ACTION_HISTORIES t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_DEAL_STATUS_CHANGES ** ====
insert into MDEAL_DEAL_STATUS_CHANGES (COMPANY_ID, DEAL_ID, STATUS, FROM_STATUS, CHANGE_DATE, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DEAL_ID, STATUS, FROM_STATUS, CHANGE_DATE, MODIFIED_BY, MODIFIED_ON from OLD_MDEAL_DEAL_STATUS_CHANGES t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_DW_CLIENT_DEAL_PRODUCTS ** ====
insert into MDEAL_DW_CLIENT_DEAL_PRODUCTS (COMPANY_ID, DEAL_ID, PRODUCT_ID, FILIAL_ID, DEAL_DATE, ROOM_ID, CLIENT_ID, QUANTITY) select COMPANY_ID, DEAL_ID, PRODUCT_ID, FILIAL_ID, DEAL_DATE, ROOM_ID, CLIENT_ID, QUANTITY from OLD_MDEAL_DW_CLIENT_DEAL_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_FILES ** ====
insert into MDEAL_FILES (COMPANY_ID, DEAL_ID, FILE_SHA, NOTE, CREATED_BY, CREATED_ON) select COMPANY_ID, DEAL_ID, FILE_SHA, NOTE, CREATED_BY, CREATED_ON from OLD_MDEAL_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_NOTES ** ====
insert into MDEAL_NOTES (COMPANY_ID, NOTE_ID, DEAL_ID, ROOM_ID, PERSON_ID, NOTE, CREATED_BY, CREATED_ON) select COMPANY_ID, NOTE_ID, DEAL_ID, ROOM_ID, PERSON_ID, NOTE, CREATED_BY, CREATED_ON from OLD_MDEAL_NOTES t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_ORDER_CHECKBOOK_OPERATIONS ** ====
insert into MDEAL_ORDER_CHECKBOOK_OPERATIONS (COMPANY_ID, DEAL_ID, CHECKBOOK_OPERATION_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, DEAL_ID, CHECKBOOK_OPERATION_ID, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDEAL_ORDER_CHECKBOOK_OPERATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_ORIGIN_CONSIGNMENTS ** ====
insert into MDEAL_ORIGIN_CONSIGNMENTS (COMPANY_ID, CONSIGNMENT_UNIT_ID, DEAL_ID, FILIAL_ID, CONSIGNMENT_DATE, CONSIGNMENT_AMOUNT) select COMPANY_ID, CONSIGNMENT_UNIT_ID, DEAL_ID, FILIAL_ID, CONSIGNMENT_DATE, CONSIGNMENT_AMOUNT from OLD_MDEAL_ORIGIN_CONSIGNMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_ORIGIN_PRODUCTS ** ====
insert into MDEAL_ORIGIN_PRODUCTS (COMPANY_ID, PRODUCT_UNIT_ID, DEAL_ID, FILIAL_ID, PRICE_TYPE_ID, SERIAL_ID, INVENTORY_KIND, ON_BALANCE, WAREHOUSE_ID, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, PRODUCT_PRICE, ORDER_QUANT, RETURN_QUANT, SOLD_QUANT, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, SOLD_PRICE, SOLD_AMOUNT, SOLD_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, BONUS_ID, LOAD_ID, DISCOUNT_CARD_ID, ORDER_NO) select COMPANY_ID, PRODUCT_UNIT_ID, DEAL_ID, FILIAL_ID, PRICE_TYPE_ID, SERIAL_ID, INVENTORY_KIND, ON_BALANCE, WAREHOUSE_ID, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, PRODUCT_PRICE, ORDER_QUANT, RETURN_QUANT, SOLD_QUANT, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, SOLD_PRICE, SOLD_AMOUNT, SOLD_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, BONUS_ID, LOAD_ID, DISCOUNT_CARD_ID, ORDER_NO from OLD_MDEAL_ORIGIN_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_PAYMENTS ** ====
insert into MDEAL_PAYMENTS (COMPANY_ID, PAYMENT_ID, DEAL_ID, FILIAL_ID, PAYMENT_DATE, PAYMENT_NUMBER, PAYMENT_KIND, PERSON_ID, FROM_COA_ID, FROM_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, BARCODE, CREATED_BY, CREATED_ON) select COMPANY_ID, PAYMENT_ID, DEAL_ID, FILIAL_ID, PAYMENT_DATE, PAYMENT_NUMBER, PAYMENT_KIND, PERSON_ID, FROM_COA_ID, FROM_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, BARCODE, CREATED_BY, CREATED_ON from OLD_MDEAL_PAYMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_PRODUCTS ** ====
insert into MDEAL_PRODUCTS (COMPANY_ID, PRODUCT_UNIT_ID, DEAL_ID, FILIAL_ID, PRICE_TYPE_ID, SERIAL_ID, INVENTORY_KIND, ON_BALANCE, WAREHOUSE_ID, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, PRODUCT_PRICE, ORDER_QUANT, RETURN_QUANT, SOLD_QUANT, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, SOLD_PRICE, SOLD_AMOUNT, SOLD_AMOUNT_BASE, IS_IN_MML, VAT_PERCENT, VAT_AMOUNT, BONUS_ID, LOAD_ID, DISCOUNT_CARD_ID, ORDER_NO) select COMPANY_ID, PRODUCT_UNIT_ID, DEAL_ID, FILIAL_ID, PRICE_TYPE_ID, SERIAL_ID, INVENTORY_KIND, ON_BALANCE, WAREHOUSE_ID, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, PRODUCT_PRICE, ORDER_QUANT, RETURN_QUANT, SOLD_QUANT, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, SOLD_PRICE, SOLD_AMOUNT, SOLD_AMOUNT_BASE, IS_IN_MML, VAT_PERCENT, VAT_AMOUNT, BONUS_ID, LOAD_ID, DISCOUNT_CARD_ID, ORDER_NO from OLD_MDEAL_PRODUCTS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_REQUESTS ** ====
insert into MDEAL_REQUESTS (COMPANY_ID, REQUEST_ID, FILIAL_ID, ROOM_ID, REQUEST_NUMBER, REQUEST_TIME, PERSON_ID, APPLICANT_ID, STATUS, WAREHOUSE_ID, PRICE_TYPE_ID, DEAL_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REQUEST_ID, FILIAL_ID, ROOM_ID, REQUEST_NUMBER, REQUEST_TIME, PERSON_ID, APPLICANT_ID, STATUS, WAREHOUSE_ID, PRICE_TYPE_ID, DEAL_ID, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MDEAL_REQUESTS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_USER_COMMENTS ** ====
insert into MDEAL_USER_COMMENTS (COMPANY_ID, COMMENT_ID, DEAL_ID, COMMENTS, CREATED_BY, CREATED_ON, MODIFIED_ON) select COMPANY_ID, COMMENT_ID, DEAL_ID, COMMENTS, CREATED_BY, CREATED_ON, MODIFIED_ON from OLD_MDEAL_USER_COMMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MFG_MANUFACTURE_EXTRA_COSTS ** ====
insert into MFG_MANUFACTURE_EXTRA_COSTS (COMPANY_ID, EXTRA_COST_ITEM_ID, MANUFACTURE_ID, EXTRA_COST_ID, AMOUNT, ORDER_NO) select COMPANY_ID, EXTRA_COST_ITEM_ID, MANUFACTURE_ID, EXTRA_COST_ID, AMOUNT, ORDER_NO from OLD_MFG_MANUFACTURE_EXTRA_COSTS t where t.company_id = &company_id;
commit;
prompt ==== ** MFG_MANUFACTURE_FILES ** ====
insert into MFG_MANUFACTURE_FILES (COMPANY_ID, FILE_ITEM_ID, MANUFACTURE_ID, SHA, NOTE, CREATED_ON) select COMPANY_ID, FILE_ITEM_ID, MANUFACTURE_ID, SHA, NOTE, CREATED_ON from OLD_MFG_MANUFACTURE_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MFG_MANUFACTURE_INPUTS ** ====
insert into MFG_MANUFACTURE_INPUTS (COMPANY_ID, INPUT_ITEM_ID, MANUFACTURE_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, ORDER_NO) select COMPANY_ID, INPUT_ITEM_ID, MANUFACTURE_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, ORDER_NO from OLD_MFG_MANUFACTURE_INPUTS t where t.company_id = &company_id;
commit;
prompt ==== ** MFG_MANUFACTURE_OUTPUTS ** ====
insert into MFG_MANUFACTURE_OUTPUTS (COMPANY_ID, OUTPUT_ITEM_ID, MANUFACTURE_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, COST_PERCENTAGE, QUANTITY, AMOUNT, ORDER_NO) select COMPANY_ID, OUTPUT_ITEM_ID, MANUFACTURE_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, COST_PERCENTAGE, QUANTITY, AMOUNT, ORDER_NO from OLD_MFG_MANUFACTURE_OUTPUTS t where t.company_id = &company_id;
commit;
prompt ==== ** MFG_MANUFACTURE_PRODUCT_FILES ** ====
insert into MFG_MANUFACTURE_PRODUCT_FILES (COMPANY_ID, PRODUCT_FILE_ITEM_ID, MANUFACTURE_ID, PRODUCT_ID, CARD_ID, SHA, NOTE, CREATED_ON) select COMPANY_ID, PRODUCT_FILE_ITEM_ID, MANUFACTURE_ID, PRODUCT_ID, CARD_ID, SHA, NOTE, CREATED_ON from OLD_MFG_MANUFACTURE_PRODUCT_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_BANK_OPERATION_FILES ** ====
insert into MKCS_BANK_OPERATION_FILES (COMPANY_ID, OPERATION_ID, FILE_SHA, NOTE) select COMPANY_ID, OPERATION_ID, FILE_SHA, NOTE from OLD_MKCS_BANK_OPERATION_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_CASH_OPERATION_FILES ** ====
insert into MKCS_CASH_OPERATION_FILES (COMPANY_ID, OPERATION_ID, FILE_SHA, NOTE) select COMPANY_ID, OPERATION_ID, FILE_SHA, NOTE from OLD_MKCS_CASH_OPERATION_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_REQUEST_DATES ** ====
insert into MKCS_REQUEST_DATES (COMPANY_ID, REQUEST_ID, KIND, VALUE) select COMPANY_ID, REQUEST_ID, KIND, VALUE from OLD_MKCS_REQUEST_DATES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_REQUEST_FILES ** ====
insert into MKCS_REQUEST_FILES (COMPANY_ID, REQUEST_ID, FILE_SHA, NOTE) select COMPANY_ID, REQUEST_ID, FILE_SHA, NOTE from OLD_MKCS_REQUEST_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKCS_REQUEST_PAYMENTS ** ====
insert into MKCS_REQUEST_PAYMENTS (COMPANY_ID, REQUEST_PAYMENT_ID, REQUEST_ID, PAYMENT_DATE, AMOUNT, PAYMENT_ID) select COMPANY_ID, REQUEST_PAYMENT_ID, REQUEST_ID, PAYMENT_DATE, AMOUNT, PAYMENT_ID from OLD_MKCS_REQUEST_PAYMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_BONUS_SETTING_ITEM_PARTS ** ====
insert into MKPI_BONUS_SETTING_ITEM_PARTS (COMPANY_ID, BONUS_SETTING_ITEM_ID, BONUS_SETTING_ITEM_PART_ID, PRODUCT_ID, PRODUCT_TYPE_ID, PERCENT, USE_PARENT_PERCENT) select COMPANY_ID, BONUS_SETTING_ITEM_ID, BONUS_SETTING_ITEM_PART_ID, PRODUCT_ID, PRODUCT_TYPE_ID, PERCENT, USE_PARENT_PERCENT from OLD_MKPI_BONUS_SETTING_ITEM_PARTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_BONUS_SETTING_ITEM_RANGES ** ====
insert into MKPI_BONUS_SETTING_ITEM_RANGES (COMPANY_ID, BONUS_SETTING_ITEM_ID, ITEM_RANGE_ID, FROM_VALUE, TO_VALUE, VALUE) select COMPANY_ID, BONUS_SETTING_ITEM_ID, ITEM_RANGE_ID, FROM_VALUE, TO_VALUE, VALUE from OLD_MKPI_BONUS_SETTING_ITEM_RANGES t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CALC_BONUS_ITEMS ** ====
insert into MKPI_CALC_BONUS_ITEMS (COMPANY_ID, CALC_ITEM_ID, CALC_ID, KPI_KIND, PLAN_KIND, FROM_DEAL, VALUE, PLAN_VALUE, FACT_VALUE) select COMPANY_ID, CALC_ITEM_ID, CALC_ID, KPI_KIND, PLAN_KIND, FROM_DEAL, VALUE, PLAN_VALUE, FACT_VALUE from OLD_MKPI_CALC_BONUS_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_MOVEMENT_REQUEST_ITEMS ** ====
insert into MKW_MOVEMENT_REQUEST_ITEMS (COMPANY_ID, REQUEST_ITEM_ID, FILIAL_ID, REQUEST_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REQUEST_ITEM_ID, FILIAL_ID, REQUEST_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_MOVEMENT_REQUEST_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_MOVEMENTS ** ====
insert into MKW_MOVEMENTS (COMPANY_ID, MOVEMENT_ID, FILIAL_ID, STATUS, MOVEMENT_NUMBER, FROM_MOVEMENT_TIME, FROM_MOVEMENT_DATE, TO_MOVEMENT_TIME, TO_MOVEMENT_DATE, REQUEST_ID, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, FROM_WAREHOUSE_ID, TO_WAREHOUSE_ID, REASON_ID, NOTE, BARCODE, HAS_TRANSIT_ERROR, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MOVEMENT_ID, FILIAL_ID, STATUS, MOVEMENT_NUMBER, FROM_MOVEMENT_TIME, FROM_MOVEMENT_DATE, TO_MOVEMENT_TIME, TO_MOVEMENT_DATE, REQUEST_ID, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, FROM_WAREHOUSE_ID, TO_WAREHOUSE_ID, REASON_ID, NOTE, BARCODE, HAS_TRANSIT_ERROR, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_MOVEMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_ORDER_ITEMS ** ====
insert into MKW_PURCHASE_ORDER_ITEMS (COMPANY_ID, ORDER_ITEM_ID, FILIAL_ID, ORDER_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, REQUEST_QUANTITY, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, NOTE, ORDER_NO, PURCHASE_QUANTITY, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, ORDER_ITEM_ID, FILIAL_ID, ORDER_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, REQUEST_QUANTITY, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, NOTE, ORDER_NO, PURCHASE_QUANTITY, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASE_ORDER_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_REQUEST_ITEMS ** ====
insert into MKW_PURCHASE_REQUEST_ITEMS (COMPANY_ID, REQUEST_ITEM_ID, FILIAL_ID, REQUEST_ID, PRODUCT_ID, PRODUCT_NAME, MEASURE_ID, QUANTITY, REASON_ID, NOTE, ORDER_NO, ORDER_QUANTITY, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, REQUEST_ITEM_ID, FILIAL_ID, REQUEST_ID, PRODUCT_ID, PRODUCT_NAME, MEASURE_ID, QUANTITY, REASON_ID, NOTE, ORDER_NO, ORDER_QUANTITY, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASE_REQUEST_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASES ** ====
insert into MKW_PURCHASES (COMPANY_ID, PURCHASE_ID, FILIAL_ID, STATUS_ID, POSTED, PURCHASE_TIME, PURCHASE_DATE, PURCHASE_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, INPUT_DATE, ORDER_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, SERVICE_EXPENSE_ARTICLE_ID, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, INVOICE_NUMBER, INVOICE_DATE, WITH_INPUT, WITH_EXTRA_COST, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, NOTE, BARCODE, SOURCE_TABLE, SOURCE_ID, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PURCHASE_ID, FILIAL_ID, STATUS_ID, POSTED, PURCHASE_TIME, PURCHASE_DATE, PURCHASE_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, INPUT_DATE, ORDER_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, SERVICE_EXPENSE_ARTICLE_ID, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, INVOICE_NUMBER, INVOICE_DATE, WITH_INPUT, WITH_EXTRA_COST, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, NOTE, BARCODE, SOURCE_TABLE, SOURCE_ID, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_REVALUATION_ITEMS ** ====
insert into MKW_REVALUATION_ITEMS (COMPANY_ID, REVALUATION_ITEM_ID, REVALUATION_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, BATCH_NUMBER, BALANCE_QUANTITY, BALANCE_AMOUNT, BALANCE_AMOUNT_BASE, AMOUNT, NEW_PRICE, AMOUNT_BASE, ORDER_NO) select COMPANY_ID, REVALUATION_ITEM_ID, REVALUATION_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, BATCH_NUMBER, BALANCE_QUANTITY, BALANCE_AMOUNT, BALANCE_AMOUNT_BASE, AMOUNT, NEW_PRICE, AMOUNT_BASE, ORDER_NO from OLD_MKW_REVALUATION_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_STOCKTAKING_CORRS ** ====
insert into MKW_STOCKTAKING_CORRS (COMPANY_ID, STOCKTAKING_CORR_ID, STOCKTAKING_ID, CORR_KIND, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, NOTE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, STOCKTAKING_CORR_ID, STOCKTAKING_ID, CORR_KIND, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, NOTE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_STOCKTAKING_CORRS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_STOCKTAKING_ITEMS ** ====
insert into MKW_STOCKTAKING_ITEMS (COMPANY_ID, STOCKTAKING_ITEM_ID, STOCKTAKING_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, BALANCE_QUANTITY, QUANTITY, INCOME_PRICE, INCOME_AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, STOCKTAKING_ITEM_ID, STOCKTAKING_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, BALANCE_QUANTITY, QUANTITY, INCOME_PRICE, INCOME_AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_STOCKTAKING_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_WRITEOFF_EXPENSES ** ====
insert into MKW_WRITEOFF_EXPENSES (COMPANY_ID, WRITEOFF_EXPENSE_ID, FILIAL_ID, WRITEOFF_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, NOTE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, WRITEOFF_EXPENSE_ID, FILIAL_ID, WRITEOFF_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, NOTE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_WRITEOFF_EXPENSES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_WRITEOFF_ITEMS ** ====
insert into MKW_WRITEOFF_ITEMS (COMPANY_ID, WRITEOFF_ITEM_ID, WRITEOFF_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, QUANTITY, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, WRITEOFF_ITEM_ID, WRITEOFF_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, QUANTITY, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_WRITEOFF_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MRF_SIGN_DOCUMENT_PERSONS ** ====
insert into MRF_SIGN_DOCUMENT_PERSONS (COMPANY_ID, DOCUMENT_ID, LEVEL_NO, GROUP_NO, PERSON_ID, ESIGN_REQUIRED, DOCUMENT_SIGN) select COMPANY_ID, DOCUMENT_ID, LEVEL_NO, GROUP_NO, PERSON_ID, ESIGN_REQUIRED, DOCUMENT_SIGN from OLD_MRF_SIGN_DOCUMENT_PERSONS t where t.company_id = &company_id;
commit;
prompt ==== ** MVTM_PERSON_VISIT_PLAN_SEQUENCES ** ====
insert into MVTM_PERSON_VISIT_PLAN_SEQUENCES (COMPANY_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, PERSON_ID, WEEK_DAY_NO, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, PERSON_ID, WEEK_DAY_NO, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVTM_PERSON_VISIT_PLAN_SEQUENCES t where t.company_id = &company_id;
commit;
prompt ==== ** MVTM_PERSON_VISIT_PLAN_TEMPLATES ** ====
insert into MVTM_PERSON_VISIT_PLAN_TEMPLATES (COMPANY_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, PERSON_ID, FIRST_WEEK_DATE, WEEK_PLAN, MONTH_PLAN, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, FILIAL_ID, ROOM_ID, ROBOT_ID, PERSON_ID, FIRST_WEEK_DATE, WEEK_PLAN, MONTH_PLAN, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MVTM_PERSON_VISIT_PLAN_TEMPLATES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_BUSINESS_TRIPS ** ====
insert into HPD_BUSINESS_TRIPS (COMPANY_ID, FILIAL_ID, TIMEOFF_ID, REGION_ID, PERSON_ID, REASON_ID, NOTE) select COMPANY_ID, FILIAL_ID, TIMEOFF_ID, REGION_ID, PERSON_ID, REASON_ID, NOTE from OLD_HPD_BUSINESS_TRIPS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_DISMISSALS ** ====
insert into HPD_DISMISSALS (COMPANY_ID, FILIAL_ID, PAGE_ID, DISMISSAL_DATE, DISMISSAL_REASON_ID, EMPLOYMENT_SOURCE_ID, BASED_ON_DOC, NOTE) select COMPANY_ID, FILIAL_ID, PAGE_ID, DISMISSAL_DATE, DISMISSAL_REASON_ID, EMPLOYMENT_SOURCE_ID, BASED_ON_DOC, NOTE from OLD_HPD_DISMISSALS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_DISMISSAL_TRANSACTIONS ** ====
insert into HPD_DISMISSAL_TRANSACTIONS (COMPANY_ID, FILIAL_ID, TRANS_ID, STAFF_ID, DISMISSAL_DATE, JOURNAL_ID, PAGE_ID, EVENT) select COMPANY_ID, FILIAL_ID, TRANS_ID, STAFF_ID, DISMISSAL_DATE, JOURNAL_ID, PAGE_ID, EVENT from OLD_HPD_DISMISSAL_TRANSACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_HIRINGS ** ====
insert into HPD_HIRINGS (COMPANY_ID, FILIAL_ID, PAGE_ID, STAFF_ID, HIRING_DATE, TRIAL_PERIOD, EMPLOYMENT_SOURCE_ID) select COMPANY_ID, FILIAL_ID, PAGE_ID, STAFF_ID, HIRING_DATE, TRIAL_PERIOD, EMPLOYMENT_SOURCE_ID from OLD_HPD_HIRINGS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_OVERTIME_DAYS ** ====
insert into HPD_OVERTIME_DAYS (COMPANY_ID, FILIAL_ID, STAFF_ID, OVERTIME_DATE, OVERTIME_SECONDS, OVERTIME_ID) select COMPANY_ID, FILIAL_ID, STAFF_ID, OVERTIME_DATE, OVERTIME_SECONDS, OVERTIME_ID from OLD_HPD_OVERTIME_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_PAGE_CONTRACTS ** ====
insert into HPD_PAGE_CONTRACTS (COMPANY_ID, FILIAL_ID, PAGE_ID, CONTRACT_NUMBER, CONTRACT_DATE, FIXED_TERM, EXPIRY_DATE, FIXED_TERM_BASE_ID, CONCLUDING_TERM, HIRING_CONDITIONS, OTHER_CONDITIONS, WORKPLACE_EQUIPMENT, REPRESENTATIVE_BASIS) select COMPANY_ID, FILIAL_ID, PAGE_ID, CONTRACT_NUMBER, CONTRACT_DATE, FIXED_TERM, EXPIRY_DATE, FIXED_TERM_BASE_ID, CONCLUDING_TERM, HIRING_CONDITIONS, OTHER_CONDITIONS, WORKPLACE_EQUIPMENT, REPRESENTATIVE_BASIS from OLD_HPD_PAGE_CONTRACTS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_PAGE_INDICATORS ** ====
insert into HPD_PAGE_INDICATORS (COMPANY_ID, FILIAL_ID, PAGE_ID, INDICATOR_ID, INDICATOR_VALUE) select COMPANY_ID, FILIAL_ID, PAGE_ID, INDICATOR_ID, INDICATOR_VALUE from OLD_HPD_PAGE_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_PAGE_OPER_TYPES ** ====
insert into HPD_PAGE_OPER_TYPES (COMPANY_ID, FILIAL_ID, PAGE_ID, OPER_TYPE_ID) select COMPANY_ID, FILIAL_ID, PAGE_ID, OPER_TYPE_ID from OLD_HPD_PAGE_OPER_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_PAGE_ROBOTS ** ====
insert into HPD_PAGE_ROBOTS (COMPANY_ID, FILIAL_ID, PAGE_ID, ROBOT_ID, DIVISION_ID, JOB_ID, RANK_ID, EMPLOYMENT_TYPE, FTE_ID, FTE) select COMPANY_ID, FILIAL_ID, PAGE_ID, ROBOT_ID, DIVISION_ID, JOB_ID, RANK_ID, EMPLOYMENT_TYPE, FTE_ID, FTE from OLD_HPD_PAGE_ROBOTS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_PAGE_SCHEDULES ** ====
insert into HPD_PAGE_SCHEDULES (COMPANY_ID, FILIAL_ID, PAGE_ID, SCHEDULE_ID) select COMPANY_ID, FILIAL_ID, PAGE_ID, SCHEDULE_ID from OLD_HPD_PAGE_SCHEDULES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_PAGE_VACATION_LIMITS ** ====
insert into HPD_PAGE_VACATION_LIMITS (COMPANY_ID, FILIAL_ID, PAGE_ID, DAYS_LIMIT) select COMPANY_ID, FILIAL_ID, PAGE_ID, DAYS_LIMIT from OLD_HPD_PAGE_VACATION_LIMITS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_RANK_CHANGES ** ====
insert into HPD_RANK_CHANGES (COMPANY_ID, FILIAL_ID, PAGE_ID, CHANGE_DATE, RANK_ID) select COMPANY_ID, FILIAL_ID, PAGE_ID, CHANGE_DATE, RANK_ID from OLD_HPD_RANK_CHANGES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_SICK_LEAVES ** ====
insert into HPD_SICK_LEAVES (COMPANY_ID, FILIAL_ID, TIMEOFF_ID, REASON_ID, COEFFICIENT, SICK_LEAVE_NUMBER) select COMPANY_ID, FILIAL_ID, TIMEOFF_ID, REASON_ID, COEFFICIENT, SICK_LEAVE_NUMBER from OLD_HPD_SICK_LEAVES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TIMEOFF_DAYS ** ====
insert into HPD_TIMEOFF_DAYS (COMPANY_ID, FILIAL_ID, STAFF_ID, TIMEOFF_DATE, TIMEOFF_ID, TIME_KIND_ID, TURNOUT_LOCKED) select COMPANY_ID, FILIAL_ID, STAFF_ID, TIMEOFF_DATE, TIMEOFF_ID, TIME_KIND_ID, TURNOUT_LOCKED from OLD_HPD_TIMEOFF_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TIMEOFF_FILES ** ====
insert into HPD_TIMEOFF_FILES (COMPANY_ID, FILIAL_ID, TIMEOFF_ID, SHA) select COMPANY_ID, FILIAL_ID, TIMEOFF_ID, SHA from OLD_HPD_TIMEOFF_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TIMEOFF_INTERVALS ** ====
insert into HPD_TIMEOFF_INTERVALS (COMPANY_ID, FILIAL_ID, TIMEOFF_ID, INTERVAL_ID) select COMPANY_ID, FILIAL_ID, TIMEOFF_ID, INTERVAL_ID from OLD_HPD_TIMEOFF_INTERVALS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TRANSACTIONS ** ====
insert into HPD_TRANSACTIONS (COMPANY_ID, FILIAL_ID, TRANS_ID, STAFF_ID, TRANS_TYPE, BEGIN_DATE, END_DATE, ORDER_NO, JOURNAL_ID, PAGE_ID, TAG, EVENT) select COMPANY_ID, FILIAL_ID, TRANS_ID, STAFF_ID, TRANS_TYPE, BEGIN_DATE, END_DATE, ORDER_NO, JOURNAL_ID, PAGE_ID, TAG, EVENT from OLD_HPD_TRANSACTIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TRANSFERS ** ====
insert into HPD_TRANSFERS (COMPANY_ID, FILIAL_ID, PAGE_ID, TRANSFER_BEGIN, TRANSFER_END, TRANSFER_REASON, TRANSFER_BASE) select COMPANY_ID, FILIAL_ID, PAGE_ID, TRANSFER_BEGIN, TRANSFER_END, TRANSFER_REASON, TRANSFER_BASE from OLD_HPD_TRANSFERS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_VACATIONS ** ====
insert into HPD_VACATIONS (COMPANY_ID, FILIAL_ID, TIMEOFF_ID, TIME_KIND_ID) select COMPANY_ID, FILIAL_ID, TIMEOFF_ID, TIME_KIND_ID from OLD_HPD_VACATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_WAGE_CHANGES ** ====
insert into HPD_WAGE_CHANGES (COMPANY_ID, FILIAL_ID, PAGE_ID, CHANGE_DATE) select COMPANY_ID, FILIAL_ID, PAGE_ID, CHANGE_DATE from OLD_HPD_WAGE_CHANGES t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_PLANS ** ====
insert into HPER_PLANS (COMPANY_ID, FILIAL_ID, PLAN_ID, PLAN_DATE, PLAN_KIND, MAIN_CALC_TYPE, EXTRA_CALC_TYPE, JOURNAL_PAGE_ID, DIVISION_ID, JOB_ID, RANK_ID, EMPLOYMENT_TYPE, NOTE) select COMPANY_ID, FILIAL_ID, PLAN_ID, PLAN_DATE, PLAN_KIND, MAIN_CALC_TYPE, EXTRA_CALC_TYPE, JOURNAL_PAGE_ID, DIVISION_ID, JOB_ID, RANK_ID, EMPLOYMENT_TYPE, NOTE from OLD_HPER_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_STAFF_PLANS ** ====
insert into HPER_STAFF_PLANS (COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, STAFF_ID, PLAN_DATE, MAIN_CALC_TYPE, EXTRA_CALC_TYPE, MONTH_BEGIN_DATE, MONTH_END_DATE, JOURNAL_PAGE_ID, DIVISION_ID, JOB_ID, RANK_ID, EMPLOYMENT_TYPE, BEGIN_DATE, END_DATE, MAIN_PLAN_AMOUNT, EXTRA_PLAN_AMOUNT, MAIN_FACT_AMOUNT, EXTRA_FACT_AMOUNT, MAIN_FACT_PERCENT, EXTRA_FACT_PERCENT, C_MAIN_FACT_PERCENT, C_EXTRA_FACT_PERCENT, STATUS, NOTE, CREATED_BY, CREATED_ON) select COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, STAFF_ID, PLAN_DATE, MAIN_CALC_TYPE, EXTRA_CALC_TYPE, MONTH_BEGIN_DATE, MONTH_END_DATE, JOURNAL_PAGE_ID, DIVISION_ID, JOB_ID, RANK_ID, EMPLOYMENT_TYPE, BEGIN_DATE, END_DATE, MAIN_PLAN_AMOUNT, EXTRA_PLAN_AMOUNT, MAIN_FACT_AMOUNT, EXTRA_FACT_AMOUNT, MAIN_FACT_PERCENT, EXTRA_FACT_PERCENT, C_MAIN_FACT_PERCENT, C_EXTRA_FACT_PERCENT, STATUS, NOTE, CREATED_BY, CREATED_ON from OLD_HPER_STAFF_PLANS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_CHARGES ** ====
insert into HPR_CHARGES (COMPANY_ID, FILIAL_ID, CHARGE_ID, INTERVAL_ID, BEGIN_DATE, END_DATE, OPER_TYPE_ID, AMOUNT, DIVISION_ID, SCHEDULE_ID, JOB_ID, RANK_ID, ROBOT_ID, WAGE_SCALE_ID, STATUS) select COMPANY_ID, FILIAL_ID, CHARGE_ID, INTERVAL_ID, BEGIN_DATE, END_DATE, OPER_TYPE_ID, AMOUNT, DIVISION_ID, SCHEDULE_ID, JOB_ID, RANK_ID, ROBOT_ID, WAGE_SCALE_ID, STATUS from OLD_HPR_CHARGES t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_TIMEBOOK_FACTS ** ====
insert into HPR_TIMEBOOK_FACTS (COMPANY_ID, FILIAL_ID, TIMEBOOK_ID, STAFF_ID, TIME_KIND_ID, FACT_HOURS) select COMPANY_ID, FILIAL_ID, TIMEBOOK_ID, STAFF_ID, TIME_KIND_ID, FACT_HOURS from OLD_HPR_TIMEBOOK_FACTS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_TIMEBOOK_INTERVALS ** ====
insert into HPR_TIMEBOOK_INTERVALS (COMPANY_ID, FILIAL_ID, TIMEBOOK_ID, STAFF_ID, INTERVAL_ID) select COMPANY_ID, FILIAL_ID, TIMEBOOK_ID, STAFF_ID, INTERVAL_ID from OLD_HPR_TIMEBOOK_INTERVALS t where t.company_id = &company_id;
commit;
prompt ==== ** HRM_OPER_TYPE_INDICATORS ** ====
insert into HRM_OPER_TYPE_INDICATORS (COMPANY_ID, FILIAL_ID, ROBOT_ID, OPER_TYPE_ID, INDICATOR_ID) select COMPANY_ID, FILIAL_ID, ROBOT_ID, OPER_TYPE_ID, INDICATOR_ID from OLD_HRM_OPER_TYPE_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_CHANGE_DAYS ** ====
insert into HTT_CHANGE_DAYS (COMPANY_ID, FILIAL_ID, STAFF_ID, CHANGE_DATE, CHANGE_ID, SWAPPED_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, PLAN_TIME, FULL_TIME) select COMPANY_ID, FILIAL_ID, STAFF_ID, CHANGE_DATE, CHANGE_ID, SWAPPED_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, PLAN_TIME, FULL_TIME from OLD_HTT_CHANGE_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_REQUEST_HELPERS ** ====
insert into HTT_REQUEST_HELPERS (COMPANY_ID, FILIAL_ID, STAFF_ID, INTERVAL_DATE, REQUEST_ID) select COMPANY_ID, FILIAL_ID, STAFF_ID, INTERVAL_DATE, REQUEST_ID from OLD_HTT_REQUEST_HELPERS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TIMESHEET_FACTS ** ====
insert into HTT_TIMESHEET_FACTS (COMPANY_ID, FILIAL_ID, TIMESHEET_ID, TIME_KIND_ID, FACT_VALUE) select COMPANY_ID, FILIAL_ID, TIMESHEET_ID, TIME_KIND_ID, FACT_VALUE from OLD_HTT_TIMESHEET_FACTS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TIMESHEET_HELPERS ** ====
insert into HTT_TIMESHEET_HELPERS (COMPANY_ID, FILIAL_ID, STAFF_ID, INTERVAL_DATE, TIMESHEET_ID, DAY_KIND, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER) select COMPANY_ID, FILIAL_ID, STAFF_ID, INTERVAL_DATE, TIMESHEET_ID, DAY_KIND, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER from OLD_HTT_TIMESHEET_HELPERS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TIMESHEET_LOCKS ** ====
insert into HTT_TIMESHEET_LOCKS (COMPANY_ID, FILIAL_ID, STAFF_ID, TIMESHEET_DATE, FACTS_CHANGED) select COMPANY_ID, FILIAL_ID, STAFF_ID, TIMESHEET_DATE, FACTS_CHANGED from OLD_HTT_TIMESHEET_LOCKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TIMESHEET_MARKS ** ====
insert into HTT_TIMESHEET_MARKS (COMPANY_ID, FILIAL_ID, TIMESHEET_ID, BEGIN_TIME, END_TIME, DONE) select COMPANY_ID, FILIAL_ID, TIMESHEET_ID, BEGIN_TIME, END_TIME, DONE from OLD_HTT_TIMESHEET_MARKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TIMESHEET_REQUESTS ** ====
insert into HTT_TIMESHEET_REQUESTS (COMPANY_ID, FILIAL_ID, TIMESHEET_ID, REQUEST_ID) select COMPANY_ID, FILIAL_ID, TIMESHEET_ID, REQUEST_ID from OLD_HTT_TIMESHEET_REQUESTS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_TIMESHEET_TRACKS ** ====
insert into HTT_TIMESHEET_TRACKS (COMPANY_ID, FILIAL_ID, TIMESHEET_ID, TRACK_ID, TRACK_DATETIME, TRACK_TYPE, TRACK_USED, TRANS_INPUT, TRANS_OUTPUT) select COMPANY_ID, FILIAL_ID, TIMESHEET_ID, TRACK_ID, TRACK_DATETIME, TRACK_TYPE, TRACK_USED, TRANS_INPUT, TRANS_OUTPUT from OLD_HTT_TIMESHEET_TRACKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_UNIT_SCHEDULE_DAYS ** ====
insert into HTT_UNIT_SCHEDULE_DAYS (COMPANY_ID, FILIAL_ID, UNIT_ID, SCHEDULE_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER) select COMPANY_ID, FILIAL_ID, UNIT_ID, SCHEDULE_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER from OLD_HTT_UNIT_SCHEDULE_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** MDEAL_REQUEST_ITEMS ** ====
insert into MDEAL_REQUEST_ITEMS (COMPANY_ID, REQUEST_ITEM_ID, REQUEST_ID, FILIAL_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, PRICE, ORDER_NO) select COMPANY_ID, REQUEST_ITEM_ID, REQUEST_ID, FILIAL_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, PRICE, ORDER_NO from OLD_MDEAL_REQUEST_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MFM_MOVEMENTS ** ====
insert into MFM_MOVEMENTS (COMPANY_ID, MOVEMENT_ID, FROM_FILIAL_ID, FROM_SUBFILIAL_ID, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, FROM_WAREHOUSE_ID, FROM_DATE, FROM_TIME, TO_FILIAL_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, TO_WAREHOUSE_ID, TO_DATE, TO_TIME, CURRENCY_ID, PRICE_TYPE_ID, PAYMENT_TYPE_ID, STATUS, TO_VISIBLE, CANCEL_REQUESTED, REQUEST_ID, REASON_ID, DEAL_ID, PURCHASE_ID, NOTE, BARCODE, C_AMOUNT, C_FROM_AMOUNT_BASE, C_TO_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MOVEMENT_ID, FROM_FILIAL_ID, FROM_SUBFILIAL_ID, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, FROM_WAREHOUSE_ID, FROM_DATE, FROM_TIME, TO_FILIAL_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, TO_WAREHOUSE_ID, TO_DATE, TO_TIME, CURRENCY_ID, PRICE_TYPE_ID, PAYMENT_TYPE_ID, STATUS, TO_VISIBLE, CANCEL_REQUESTED, REQUEST_ID, REASON_ID, DEAL_ID, PURCHASE_ID, NOTE, BARCODE, C_AMOUNT, C_FROM_AMOUNT_BASE, C_TO_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MFM_MOVEMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_BONUS_SETTING_ITEM_PART_RANGES ** ====
insert into MKPI_BONUS_SETTING_ITEM_PART_RANGES (COMPANY_ID, BONUS_SETTING_ITEM_PART_ID, ITEM_RANGE_PART_ID, FROM_VALUE, TO_VALUE, VALUE) select COMPANY_ID, BONUS_SETTING_ITEM_PART_ID, ITEM_RANGE_PART_ID, FROM_VALUE, TO_VALUE, VALUE from OLD_MKPI_BONUS_SETTING_ITEM_PART_RANGES t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_CALC_BONUS_ITEM_PARTS ** ====
insert into MKPI_CALC_BONUS_ITEM_PARTS (COMPANY_ID, CALC_ITEM_PART_ID, CALC_ITEM_ID, PRODUCT_ID, PRODUCT_TYPE_ID, PERCENT, PLAN_VALUE, FACT_VALUE) select COMPANY_ID, CALC_ITEM_PART_ID, CALC_ITEM_ID, PRODUCT_ID, PRODUCT_TYPE_ID, PERCENT, PLAN_VALUE, FACT_VALUE from OLD_MKPI_CALC_BONUS_ITEM_PARTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_ROBOT_CALC_BONUS_ITEMS ** ====
insert into MKPI_ROBOT_CALC_BONUS_ITEMS (COMPANY_ID, ROBOT_CALC_ITEM_ID, CALC_ITEM_ID, FILIAL_ID, ROBOT_ID, ROBOT_PERSON_ID, FACT_VALUE, FACT_PERCENT, BONUS_VALUE) select COMPANY_ID, ROBOT_CALC_ITEM_ID, CALC_ITEM_ID, FILIAL_ID, ROBOT_ID, ROBOT_PERSON_ID, FACT_VALUE, FACT_PERCENT, BONUS_VALUE from OLD_MKPI_ROBOT_CALC_BONUS_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INPUTS ** ====
insert into MKW_INPUTS (COMPANY_ID, INPUT_ID, FILIAL_ID, STATUS, INPUT_NUMBER, INPUT_TIME, INPUT_DATE, PURCHASE_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, BATCH_NUMBER, NOTE, BARCODE, CODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INPUT_ID, FILIAL_ID, STATUS, INPUT_NUMBER, INPUT_TIME, INPUT_DATE, PURCHASE_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, BATCH_NUMBER, NOTE, BARCODE, CODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INPUTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_MOVEMENT_ITEMS ** ====
insert into MKW_MOVEMENT_ITEMS (COMPANY_ID, MOVEMENT_ITEM_ID, FILIAL_ID, MOVEMENT_ID, REQUEST_ITEM_ID, PRODUCT_ID, INVENTORY_KIND, ON_BALANCE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, QUANTITY, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MOVEMENT_ITEM_ID, FILIAL_ID, MOVEMENT_ID, REQUEST_ITEM_ID, PRODUCT_ID, INVENTORY_KIND, ON_BALANCE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, QUANTITY, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_MOVEMENT_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_OFFSETS ** ====
insert into MKW_OFFSETS (COMPANY_ID, OFFSET_ID, PURCHASE_ID, FILIAL_ID, OFFSET_DATE, OFFSET_NUMBER, PERSON_ID, FROM_COA_ID, FROM_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, BARCODE, CREATED_BY, CREATED_ON) select COMPANY_ID, OFFSET_ID, PURCHASE_ID, FILIAL_ID, OFFSET_DATE, OFFSET_NUMBER, PERSON_ID, FROM_COA_ID, FROM_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, BARCODE, CREATED_BY, CREATED_ON from OLD_MKW_OFFSETS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_FILES ** ====
insert into MKW_PURCHASE_FILES (COMPANY_ID, PURCHASE_ID, SHA, NOTE) select COMPANY_ID, PURCHASE_ID, SHA, NOTE from OLD_MKW_PURCHASE_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_ITEMS ** ====
insert into MKW_PURCHASE_ITEMS (COMPANY_ID, PURCHASE_ITEM_ID, FILIAL_ID, PURCHASE_ID, ORDER_ITEM_ID, INVENTORY_KIND, ON_BALANCE, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, NOTE, ORDER_NO, INPUT_QUANTITY, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PURCHASE_ITEM_ID, FILIAL_ID, PURCHASE_ID, ORDER_ITEM_ID, INVENTORY_KIND, ON_BALANCE, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, NOTE, ORDER_NO, INPUT_QUANTITY, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASE_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_ORDER_REQUESTS ** ====
insert into MKW_PURCHASE_ORDER_REQUESTS (COMPANY_ID, ORDER_ITEM_ID, REQUEST_ITEM_ID, FILIAL_ID, ORDER_ID, QUANTITY, ORDER_NO) select COMPANY_ID, ORDER_ITEM_ID, REQUEST_ITEM_ID, FILIAL_ID, ORDER_ID, QUANTITY, ORDER_NO from OLD_MKW_PURCHASE_ORDER_REQUESTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_PRODUCT_FILES ** ====
insert into MKW_PURCHASE_PRODUCT_FILES (COMPANY_ID, PURCHASE_ID, PRODUCT_ID, CARD_ID, SHA, NOTE) select COMPANY_ID, PURCHASE_ID, PRODUCT_ID, CARD_ID, SHA, NOTE from OLD_MKW_PURCHASE_PRODUCT_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_RETURNS ** ====
insert into MKW_RETURNS (COMPANY_ID, RETURN_ID, FILIAL_ID, STATUS, RETURN_NUMBER, RETURN_TIME, RETURN_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, PURCHASE_ID, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, INVOICE_NUMBER, INVOICE_DATE, WAREHOUSE_ID, REASON_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, RETURN_ID, FILIAL_ID, STATUS, RETURN_NUMBER, RETURN_TIME, RETURN_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, PURCHASE_ID, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, INVOICE_NUMBER, INVOICE_DATE, WAREHOUSE_ID, REASON_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_RETURNS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_AGREEMENTS ** ====
insert into HPD_AGREEMENTS (COMPANY_ID, FILIAL_ID, STAFF_ID, TRANS_TYPE, PERIOD, TRANS_ID, ACTION) select COMPANY_ID, FILIAL_ID, STAFF_ID, TRANS_TYPE, PERIOD, TRANS_ID, ACTION from OLD_HPD_AGREEMENTS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_OPER_TYPE_INDICATORS ** ====
insert into HPD_OPER_TYPE_INDICATORS (COMPANY_ID, FILIAL_ID, PAGE_ID, OPER_TYPE_ID, INDICATOR_ID) select COMPANY_ID, FILIAL_ID, PAGE_ID, OPER_TYPE_ID, INDICATOR_ID from OLD_HPD_OPER_TYPE_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TRANS_INDICATORS ** ====
insert into HPD_TRANS_INDICATORS (COMPANY_ID, FILIAL_ID, TRANS_ID, INDICATOR_ID, INDICATOR_VALUE) select COMPANY_ID, FILIAL_ID, TRANS_ID, INDICATOR_ID, INDICATOR_VALUE from OLD_HPD_TRANS_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TRANS_OPER_TYPES ** ====
insert into HPD_TRANS_OPER_TYPES (COMPANY_ID, FILIAL_ID, TRANS_ID, OPER_TYPE_ID) select COMPANY_ID, FILIAL_ID, TRANS_ID, OPER_TYPE_ID from OLD_HPD_TRANS_OPER_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TRANS_RANKS ** ====
insert into HPD_TRANS_RANKS (COMPANY_ID, FILIAL_ID, TRANS_ID, RANK_ID) select COMPANY_ID, FILIAL_ID, TRANS_ID, RANK_ID from OLD_HPD_TRANS_RANKS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TRANS_ROBOTS ** ====
insert into HPD_TRANS_ROBOTS (COMPANY_ID, FILIAL_ID, TRANS_ID, ROBOT_ID, DIVISION_ID, JOB_ID, EMPLOYMENT_TYPE, FTE_ID, FTE, CONTRACTUAL_WAGE, WAGE_SCALE_ID) select COMPANY_ID, FILIAL_ID, TRANS_ID, ROBOT_ID, DIVISION_ID, JOB_ID, EMPLOYMENT_TYPE, FTE_ID, FTE, CONTRACTUAL_WAGE, WAGE_SCALE_ID from OLD_HPD_TRANS_ROBOTS t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TRANS_SCHEDULES ** ====
insert into HPD_TRANS_SCHEDULES (COMPANY_ID, FILIAL_ID, TRANS_ID, SCHEDULE_ID) select COMPANY_ID, FILIAL_ID, TRANS_ID, SCHEDULE_ID from OLD_HPD_TRANS_SCHEDULES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TRANS_VACATION_LIMITS ** ====
insert into HPD_TRANS_VACATION_LIMITS (COMPANY_ID, FILIAL_ID, TRANS_ID, DAYS_LIMIT) select COMPANY_ID, FILIAL_ID, TRANS_ID, DAYS_LIMIT from OLD_HPD_TRANS_VACATION_LIMITS t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_PLAN_ITEMS ** ====
insert into HPER_PLAN_ITEMS (COMPANY_ID, FILIAL_ID, PLAN_ID, PLAN_TYPE_ID, PLAN_TYPE, PLAN_VALUE, PLAN_AMOUNT, NOTE, ORDER_NO) select COMPANY_ID, FILIAL_ID, PLAN_ID, PLAN_TYPE_ID, PLAN_TYPE, PLAN_VALUE, PLAN_AMOUNT, NOTE, ORDER_NO from OLD_HPER_PLAN_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_STAFF_PLAN_INTERVALS ** ====
insert into HPER_STAFF_PLAN_INTERVALS (COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, INTERVAL_ID) select COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, INTERVAL_ID from OLD_HPER_STAFF_PLAN_INTERVALS t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_STAFF_PLAN_ITEMS ** ====
insert into HPER_STAFF_PLAN_ITEMS (COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, PLAN_TYPE, PLAN_VALUE, PLAN_AMOUNT, FACT_VALUE, FACT_PERCENT, FACT_AMOUNT, CALC_KIND, NOTE, FACT_NOTE) select COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, PLAN_TYPE, PLAN_VALUE, PLAN_AMOUNT, FACT_VALUE, FACT_PERCENT, FACT_AMOUNT, CALC_KIND, NOTE, FACT_NOTE from OLD_HPER_STAFF_PLAN_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_BOOK_OPERATIONS ** ====
insert into HPR_BOOK_OPERATIONS (COMPANY_ID, FILIAL_ID, BOOK_ID, OPERATION_ID, STAFF_ID, CHARGE_ID, AUTOFILLED) select COMPANY_ID, FILIAL_ID, BOOK_ID, OPERATION_ID, STAFF_ID, CHARGE_ID, AUTOFILLED from OLD_HPR_BOOK_OPERATIONS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_CHARGE_INDICATORS ** ====
insert into HPR_CHARGE_INDICATORS (COMPANY_ID, FILIAL_ID, CHARGE_ID, INDICATOR_ID, INDICATOR_VALUE) select COMPANY_ID, FILIAL_ID, CHARGE_ID, INDICATOR_ID, INDICATOR_VALUE from OLD_HPR_CHARGE_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HPR_TIMESHEET_LOCKS ** ====
insert into HPR_TIMESHEET_LOCKS (COMPANY_ID, FILIAL_ID, STAFF_ID, TIMESHEET_DATE, TIMEBOOK_ID) select COMPANY_ID, FILIAL_ID, STAFF_ID, TIMESHEET_DATE, TIMEBOOK_ID from OLD_HPR_TIMESHEET_LOCKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_ROBOT_SCHEDULE_DAYS ** ====
insert into HTT_ROBOT_SCHEDULE_DAYS (COMPANY_ID, FILIAL_ID, ROBOT_ID, SCHEDULE_DATE, REGISTRY_ID, UNIT_ID, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER) select COMPANY_ID, FILIAL_ID, ROBOT_ID, SCHEDULE_DATE, REGISTRY_ID, UNIT_ID, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER from OLD_HTT_ROBOT_SCHEDULE_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_STAFF_SCHEDULE_DAYS ** ====
insert into HTT_STAFF_SCHEDULE_DAYS (COMPANY_ID, FILIAL_ID, STAFF_ID, SCHEDULE_DATE, REGISTRY_ID, UNIT_ID, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER) select COMPANY_ID, FILIAL_ID, STAFF_ID, SCHEDULE_DATE, REGISTRY_ID, UNIT_ID, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, FULL_TIME, PLAN_TIME, SHIFT_BEGIN_TIME, SHIFT_END_TIME, INPUT_BORDER, OUTPUT_BORDER from OLD_HTT_STAFF_SCHEDULE_DAYS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_UNIT_SCHEDULE_DAY_MARKS ** ====
insert into HTT_UNIT_SCHEDULE_DAY_MARKS (COMPANY_ID, FILIAL_ID, UNIT_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME) select COMPANY_ID, FILIAL_ID, UNIT_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME from OLD_HTT_UNIT_SCHEDULE_DAY_MARKS t where t.company_id = &company_id;
commit;
prompt ==== ** MFM_MOVEMENT_ITEMS ** ====
insert into MFM_MOVEMENT_ITEMS (COMPANY_ID, MOVEMENT_UNIT_ID, MOVEMENT_ID, REQUEST_ITEM_ID, FROM_INVENTORY_KIND, ON_BALANCE, TO_INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, LOAD_ID, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, MOVEMENT_UNIT_ID, MOVEMENT_ID, REQUEST_ITEM_ID, FROM_INVENTORY_KIND, ON_BALANCE, TO_INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, LOAD_ID, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MFM_MOVEMENT_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKPI_ROBOT_CALC_BONUS_ITEM_PARTS ** ====
insert into MKPI_ROBOT_CALC_BONUS_ITEM_PARTS (COMPANY_ID, ROBOT_CALC_ITEM_PART_ID, CALC_ITEM_PART_ID, FILIAL_ID, ROBOT_ID, ROBOT_PERSON_ID, FACT_VALUE, FACT_PERCENT, BONUS_VALUE) select COMPANY_ID, ROBOT_CALC_ITEM_PART_ID, CALC_ITEM_PART_ID, FILIAL_ID, ROBOT_ID, ROBOT_PERSON_ID, FACT_VALUE, FACT_PERCENT, BONUS_VALUE from OLD_MKPI_ROBOT_CALC_BONUS_ITEM_PARTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INPUT_FILES ** ====
insert into MKW_INPUT_FILES (COMPANY_ID, INPUT_ID, SHA, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INPUT_ID, SHA, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INPUT_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INPUT_ITEMS ** ====
insert into MKW_INPUT_ITEMS (COMPANY_ID, INPUT_ITEM_ID, FILIAL_ID, INPUT_ID, PURCHASE_ID, PURCHASE_ITEM_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INPUT_ITEM_ID, FILIAL_ID, INPUT_ID, PURCHASE_ID, PURCHASE_ITEM_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INPUT_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INPUT_PRODUCT_FILES ** ====
insert into MKW_INPUT_PRODUCT_FILES (COMPANY_ID, INPUT_ID, PRODUCT_ID, CARD_ID, SHA, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INPUT_ID, PRODUCT_ID, CARD_ID, SHA, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INPUT_PRODUCT_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_PURCHASE_EXTRA_COSTS ** ====
insert into MKW_PURCHASE_EXTRA_COSTS (COMPANY_ID, PURCHASE_EXTRA_COST_UNIT_ID, EXTRA_COST_ID, PURCHASE_ID, PURCHASE_ITEM_ID, AMOUNT, AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, PURCHASE_EXTRA_COST_UNIT_ID, EXTRA_COST_ID, PURCHASE_ID, PURCHASE_ITEM_ID, AMOUNT, AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_PURCHASE_EXTRA_COSTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_RETURN_FILES ** ====
insert into MKW_RETURN_FILES (COMPANY_ID, RETURN_ID, SHA, NOTE) select COMPANY_ID, RETURN_ID, SHA, NOTE from OLD_MKW_RETURN_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_RETURN_PRODUCT_FILES ** ====
insert into MKW_RETURN_PRODUCT_FILES (COMPANY_ID, RETURN_ID, PRODUCT_ID, CARD_ID, SHA, NOTE) select COMPANY_ID, RETURN_ID, PRODUCT_ID, CARD_ID, SHA, NOTE from OLD_MKW_RETURN_PRODUCT_FILES t where t.company_id = &company_id;
commit;
prompt ==== ** HPD_TRANS_OPER_TYPE_INDICATORS ** ====
insert into HPD_TRANS_OPER_TYPE_INDICATORS (COMPANY_ID, FILIAL_ID, TRANS_ID, OPER_TYPE_ID, INDICATOR_ID) select COMPANY_ID, FILIAL_ID, TRANS_ID, OPER_TYPE_ID, INDICATOR_ID from OLD_HPD_TRANS_OPER_TYPE_INDICATORS t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_PLAN_RULES ** ====
insert into HPER_PLAN_RULES (COMPANY_ID, FILIAL_ID, PLAN_ID, PLAN_TYPE_ID, FROM_PERCENT, TO_PERCENT, FACT_AMOUNT) select COMPANY_ID, FILIAL_ID, PLAN_ID, PLAN_TYPE_ID, FROM_PERCENT, TO_PERCENT, FACT_AMOUNT from OLD_HPER_PLAN_RULES t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_STAFF_PLAN_PARTS ** ====
insert into HPER_STAFF_PLAN_PARTS (COMPANY_ID, FILIAL_ID, PART_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, PART_DATE, AMOUNT, NOTE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY) select COMPANY_ID, FILIAL_ID, PART_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, PART_DATE, AMOUNT, NOTE, CREATED_ON, CREATED_BY, MODIFIED_ON, MODIFIED_BY from OLD_HPER_STAFF_PLAN_PARTS t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_STAFF_PLAN_RULES ** ====
insert into HPER_STAFF_PLAN_RULES (COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, FROM_PERCENT, TO_PERCENT, FACT_AMOUNT) select COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, FROM_PERCENT, TO_PERCENT, FACT_AMOUNT from OLD_HPER_STAFF_PLAN_RULES t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_STAFF_PLAN_TASKS ** ====
insert into HPER_STAFF_PLAN_TASKS (COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, TASK_ID) select COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, TASK_ID from OLD_HPER_STAFF_PLAN_TASKS t where t.company_id = &company_id;
commit;
prompt ==== ** HPER_STAFF_PLAN_TASK_TYPES ** ====
insert into HPER_STAFF_PLAN_TASK_TYPES (COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, TASK_TYPE_ID) select COMPANY_ID, FILIAL_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, TASK_TYPE_ID from OLD_HPER_STAFF_PLAN_TASK_TYPES t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_ROBOT_SCHEDULE_DAY_MARKS ** ====
insert into HTT_ROBOT_SCHEDULE_DAY_MARKS (COMPANY_ID, FILIAL_ID, ROBOT_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME) select COMPANY_ID, FILIAL_ID, ROBOT_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME from OLD_HTT_ROBOT_SCHEDULE_DAY_MARKS t where t.company_id = &company_id;
commit;
prompt ==== ** HTT_STAFF_SCHEDULE_DAY_MARKS ** ====
insert into HTT_STAFF_SCHEDULE_DAY_MARKS (COMPANY_ID, FILIAL_ID, STAFF_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME) select COMPANY_ID, FILIAL_ID, STAFF_ID, SCHEDULE_DATE, BEGIN_TIME, END_TIME from OLD_HTT_STAFF_SCHEDULE_DAY_MARKS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_INPUT_EXTRA_COSTS ** ====
insert into MKW_INPUT_EXTRA_COSTS (COMPANY_ID, INPUT_EXTRA_COST_UNIT_ID, EXTRA_COST_ID, INPUT_ID, INPUT_ITEM_ID, AMOUNT, AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, INPUT_EXTRA_COST_UNIT_ID, EXTRA_COST_ID, INPUT_ID, INPUT_ITEM_ID, AMOUNT, AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_INPUT_EXTRA_COSTS t where t.company_id = &company_id;
commit;
prompt ==== ** MKW_RETURN_ITEMS ** ====
insert into MKW_RETURN_ITEMS (COMPANY_ID, RETURN_ITEM_ID, FILIAL_ID, RETURN_ID, PURCHASE_ITEM_ID, INPUT_ID, INPUT_ITEM_ID, INVENTORY_KIND, ON_BALANCE, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select COMPANY_ID, RETURN_ITEM_ID, FILIAL_ID, RETURN_ID, PURCHASE_ITEM_ID, INPUT_ID, INPUT_ITEM_ID, INVENTORY_KIND, ON_BALANCE, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_MKW_RETURN_ITEMS t where t.company_id = &company_id;
commit;
prompt ==== ** X_MCG_ORDER_RESTRICTIONS ** ====
insert into X_MCG_ORDER_RESTRICTIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_RESTRICTION_ID, FILIAL_ID, NAME, ORDER_RESTRICTION_KIND, STATE, PERSON_GROUP_ID, AMOUNT_LIMIT, DAY_LIMIT, CURRENT_DEBT_ONLY, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_RESTRICTION_ID, FILIAL_ID, NAME, ORDER_RESTRICTION_KIND, STATE, PERSON_GROUP_ID, AMOUNT_LIMIT, DAY_LIMIT, CURRENT_DEBT_ONLY, NOTE from OLD_X_MCG_ORDER_RESTRICTIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MCG_ORDER_RESTRICTION_PERSON_TYPES ** ====
insert into X_MCG_ORDER_RESTRICTION_PERSON_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_RESTRICTION_ID, PERSON_TYPE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_RESTRICTION_ID, PERSON_TYPE_ID from OLD_X_MCG_ORDER_RESTRICTION_PERSON_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MCG_ORDER_RESTRICTION_BANS ** ====
insert into X_MCG_ORDER_RESTRICTION_BANS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BAN_ID, ORDER_RESTRICTION_ID, BAN_KIND, VALUE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BAN_ID, ORDER_RESTRICTION_ID, BAN_KIND, VALUE from OLD_X_MCG_ORDER_RESTRICTION_BANS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MVTM_PERSON_VISIT_PLAN_TEMPLATES ** ====
insert into X_MVTM_PERSON_VISIT_PLAN_TEMPLATES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, ROBOT_ID, PERSON_ID, FIRST_WEEK_DATE, WEEK_PLAN, MONTH_PLAN) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, ROBOT_ID, PERSON_ID, FIRST_WEEK_DATE, WEEK_PLAN, MONTH_PLAN from OLD_X_MVTM_PERSON_VISIT_PLAN_TEMPLATES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HTT_REQUESTS ** ====
insert into X_HTT_REQUESTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ID, REQUEST_KIND_ID, BEGIN_TIME, END_TIME, REQUEST_TYPE, MANAGER_NOTE, NOTE, STATUS, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ID, REQUEST_KIND_ID, BEGIN_TIME, END_TIME, REQUEST_TYPE, MANAGER_NOTE, NOTE, STATUS, BARCODE from OLD_X_HTT_REQUESTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HTT_PLAN_CHANGES ** ====
insert into X_HTT_PLAN_CHANGES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CHANGE_ID, CHANGE_KIND, MANAGER_NOTE, NOTE, STATUS) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CHANGE_ID, CHANGE_KIND, MANAGER_NOTE, NOTE, STATUS from OLD_X_HTT_PLAN_CHANGES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HTT_CHANGE_DAYS ** ====
insert into X_HTT_CHANGE_DAYS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STAFF_ID, CHANGE_DATE, CHANGE_ID, SWAPPED_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, PLAN_TIME) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STAFF_ID, CHANGE_DATE, CHANGE_ID, SWAPPED_DATE, DAY_KIND, BEGIN_TIME, END_TIME, BREAK_ENABLED, BREAK_BEGIN_TIME, BREAK_END_TIME, PLAN_TIME from OLD_X_HTT_CHANGE_DAYS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HTT_LOCATION_TYPES ** ====
insert into X_HTT_LOCATION_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LOCATION_TYPE_ID, NAME, COLOR, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LOCATION_TYPE_ID, NAME, COLOR, STATE, CODE from OLD_X_HTT_LOCATION_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HTT_LOCATIONS ** ====
insert into X_HTT_LOCATIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LOCATION_ID, NAME, LOCATION_TYPE_ID, TIMEZONE_CODE, REGION_ID, ADDRESS, LATLNG, ACCURACY, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LOCATION_ID, NAME, LOCATION_TYPE_ID, TIMEZONE_CODE, REGION_ID, ADDRESS, LATLNG, ACCURACY, STATE, CODE from OLD_X_HTT_LOCATIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HTT_LOCATION_PERSONS ** ====
insert into X_HTT_LOCATION_PERSONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LOCATION_ID, PERSON_ID, ATTACH_TYPE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LOCATION_ID, PERSON_ID, ATTACH_TYPE from OLD_X_HTT_LOCATION_PERSONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HTT_TIME_KINDS ** ====
insert into X_HTT_TIME_KINDS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIME_KIND_ID, NAME, LETTER_CODE, DIGITAL_CODE, PARENT_ID, PLAN_LOAD, BG_COLOR, COLOR, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIME_KIND_ID, NAME, LETTER_CODE, DIGITAL_CODE, PARENT_ID, PLAN_LOAD, BG_COLOR, COLOR, STATE from OLD_X_HTT_TIME_KINDS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HTT_REQUEST_KINDS ** ====
insert into X_HTT_REQUEST_KINDS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_KIND_ID, NAME, TIME_KIND_ID, ANNUALLY_LIMITED, DAY_COUNT_TYPE, ANNUAL_DAY_LIMIT, USER_PERMITTED, ALLOW_UNUSED_TIME, REQUEST_RESTRICTION_DAYS, CARRYOVER_POLICY, CARRYOVER_CAP_DAYS, CARRYOVER_EXPIRES_DAYS, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_KIND_ID, NAME, TIME_KIND_ID, ANNUALLY_LIMITED, DAY_COUNT_TYPE, ANNUAL_DAY_LIMIT, USER_PERMITTED, ALLOW_UNUSED_TIME, REQUEST_RESTRICTION_DAYS, CARRYOVER_POLICY, CARRYOVER_CAP_DAYS, CARRYOVER_EXPIRES_DAYS, STATE from OLD_X_HTT_REQUEST_KINDS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HLN_QUESTION_GROUPS ** ====
insert into X_HLN_QUESTION_GROUPS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, QUESTION_GROUP_ID, NAME, CODE, IS_REQUIRED, ORDER_NO, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, QUESTION_GROUP_ID, NAME, CODE, IS_REQUIRED, ORDER_NO, STATE from OLD_X_HLN_QUESTION_GROUPS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HLN_QUESTION_TYPES ** ====
insert into X_HLN_QUESTION_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, QUESTION_TYPE_ID, QUESTION_GROUP_ID, NAME, CODE, ORDER_NO, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, QUESTION_TYPE_ID, QUESTION_GROUP_ID, NAME, CODE, ORDER_NO, STATE from OLD_X_HLN_QUESTION_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HLN_TRAINING_SUBJECTS ** ====
insert into X_HLN_TRAINING_SUBJECTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SUBJECT_ID, NAME, CODE, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SUBJECT_ID, NAME, CODE, STATE from OLD_X_HLN_TRAINING_SUBJECTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_JOURNALS ** ====
insert into X_HPD_JOURNALS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOURNAL_ID, JOURNAL_TYPE_ID, JOURNAL_NUMBER, JOURNAL_DATE, JOURNAL_NAME, POSTED) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOURNAL_ID, JOURNAL_TYPE_ID, JOURNAL_NUMBER, JOURNAL_DATE, JOURNAL_NAME, POSTED from OLD_X_HPD_JOURNALS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_JOURNAL_PAGES ** ====
insert into X_HPD_JOURNAL_PAGES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOURNAL_ID, PAGE_ID, STAFF_ID, EMPLOYEE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOURNAL_ID, PAGE_ID, STAFF_ID, EMPLOYEE_ID from OLD_X_HPD_JOURNAL_PAGES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_PAGE_ROBOTS ** ====
insert into X_HPD_PAGE_ROBOTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, ROBOT_ID, RANK_ID, EMPLOYMENT_TYPE, FTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, ROBOT_ID, RANK_ID, EMPLOYMENT_TYPE, FTE from OLD_X_HPD_PAGE_ROBOTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_PAGE_CONTRACTS ** ====
insert into X_HPD_PAGE_CONTRACTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, CONTRACT_NUMBER, CONTRACT_DATE, FIXED_TERM, EXPIRY_DATE, FIXED_TERM_BASE_ID, CONCLUDING_TERM, HIRING_CONDITIONS, OTHER_CONDITIONS, WORKPLACE_EQUIPMENT, REPRESENTATIVE_BASIS) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, CONTRACT_NUMBER, CONTRACT_DATE, FIXED_TERM, EXPIRY_DATE, FIXED_TERM_BASE_ID, CONCLUDING_TERM, HIRING_CONDITIONS, OTHER_CONDITIONS, WORKPLACE_EQUIPMENT, REPRESENTATIVE_BASIS from OLD_X_HPD_PAGE_CONTRACTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_PAGE_SCHEDULES ** ====
insert into X_HPD_PAGE_SCHEDULES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, SCHEDULE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, SCHEDULE_ID from OLD_X_HPD_PAGE_SCHEDULES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_PAGE_OPER_TYPES ** ====
insert into X_HPD_PAGE_OPER_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, OPER_TYPE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, OPER_TYPE_ID from OLD_X_HPD_PAGE_OPER_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_OPER_TYPE_INDICATORS ** ====
insert into X_HPD_OPER_TYPE_INDICATORS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, OPER_TYPE_ID, INDICATOR_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, OPER_TYPE_ID, INDICATOR_ID from OLD_X_HPD_OPER_TYPE_INDICATORS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_PAGE_INDICATORS ** ====
insert into X_HPD_PAGE_INDICATORS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, INDICATOR_ID, INDICATOR_VALUE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, INDICATOR_ID, INDICATOR_VALUE from OLD_X_HPD_PAGE_INDICATORS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_HIRINGS ** ====
insert into X_HPD_HIRINGS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, HIRING_DATE, TRIAL_PERIOD, EMPLOYMENT_SOURCE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, HIRING_DATE, TRIAL_PERIOD, EMPLOYMENT_SOURCE_ID from OLD_X_HPD_HIRINGS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_TRANSFERS ** ====
insert into X_HPD_TRANSFERS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, TRANSFER_BEGIN, TRANSFER_END, TRANSFER_REASON, TRANSFER_BASE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, TRANSFER_BEGIN, TRANSFER_END, TRANSFER_REASON, TRANSFER_BASE from OLD_X_HPD_TRANSFERS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_DISMISSALS ** ====
insert into X_HPD_DISMISSALS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, DISMISSAL_DATE, DISMISSAL_REASON_ID, EMPLOYMENT_SOURCE_ID, BASED_ON_DOC, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, DISMISSAL_DATE, DISMISSAL_REASON_ID, EMPLOYMENT_SOURCE_ID, BASED_ON_DOC, NOTE from OLD_X_HPD_DISMISSALS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_WAGE_CHANGES ** ====
insert into X_HPD_WAGE_CHANGES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, CHANGE_DATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, CHANGE_DATE from OLD_X_HPD_WAGE_CHANGES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_RANK_CHANGES ** ====
insert into X_HPD_RANK_CHANGES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, CHANGE_DATE, RANK_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAGE_ID, CHANGE_DATE, RANK_ID from OLD_X_HPD_RANK_CHANGES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_SCHEDULE_CHANGES ** ====
insert into X_HPD_SCHEDULE_CHANGES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOURNAL_ID, DIVISION_ID, BEGIN_DATE, END_DATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOURNAL_ID, DIVISION_ID, BEGIN_DATE, END_DATE from OLD_X_HPD_SCHEDULE_CHANGES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_VACATION_LIMIT_CHANGES ** ====
insert into X_HPD_VACATION_LIMIT_CHANGES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOURNAL_ID, DIVISION_ID, CHANGE_DATE, DAYS_LIMIT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOURNAL_ID, DIVISION_ID, CHANGE_DATE, DAYS_LIMIT from OLD_X_HPD_VACATION_LIMIT_CHANGES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_JOURNAL_TIMEOFFS ** ====
insert into X_HPD_JOURNAL_TIMEOFFS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIMEOFF_ID, JOURNAL_ID, EMPLOYEE_ID, STAFF_ID, BEGIN_DATE, END_DATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIMEOFF_ID, JOURNAL_ID, EMPLOYEE_ID, STAFF_ID, BEGIN_DATE, END_DATE from OLD_X_HPD_JOURNAL_TIMEOFFS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_SICK_LEAVES ** ====
insert into X_HPD_SICK_LEAVES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIMEOFF_ID, REASON_ID, COEFFICIENT, SICK_LEAVE_NUMBER) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIMEOFF_ID, REASON_ID, COEFFICIENT, SICK_LEAVE_NUMBER from OLD_X_HPD_SICK_LEAVES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_BUSINESS_TRIPS ** ====
insert into X_HPD_BUSINESS_TRIPS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIMEOFF_ID, REGION_ID, PERSON_ID, REASON_ID, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIMEOFF_ID, REGION_ID, PERSON_ID, REASON_ID, NOTE from OLD_X_HPD_BUSINESS_TRIPS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPD_TIMEOFF_FILES ** ====
insert into X_HPD_TIMEOFF_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIMEOFF_ID, SHA) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TIMEOFF_ID, SHA from OLD_X_HPD_TIMEOFF_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPER_STAFF_PLANS ** ====
insert into X_HPER_STAFF_PLANS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STAFF_PLAN_ID, STAFF_ID, PLAN_DATE, MAIN_CALC_TYPE, EXTRA_CALC_TYPE, MONTH_BEGIN_DATE, MONTH_END_DATE, JOURNAL_PAGE_ID, DIVISION_ID, JOB_ID, RANK_ID, EMPLOYMENT_TYPE, BEGIN_DATE, END_DATE, MAIN_PLAN_AMOUNT, EXTRA_PLAN_AMOUNT, MAIN_FACT_AMOUNT, EXTRA_FACT_AMOUNT, MAIN_FACT_PERCENT, EXTRA_FACT_PERCENT, C_MAIN_FACT_PERCENT, C_EXTRA_FACT_PERCENT, STATUS, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STAFF_PLAN_ID, STAFF_ID, PLAN_DATE, MAIN_CALC_TYPE, EXTRA_CALC_TYPE, MONTH_BEGIN_DATE, MONTH_END_DATE, JOURNAL_PAGE_ID, DIVISION_ID, JOB_ID, RANK_ID, EMPLOYMENT_TYPE, BEGIN_DATE, END_DATE, MAIN_PLAN_AMOUNT, EXTRA_PLAN_AMOUNT, MAIN_FACT_AMOUNT, EXTRA_FACT_AMOUNT, MAIN_FACT_PERCENT, EXTRA_FACT_PERCENT, C_MAIN_FACT_PERCENT, C_EXTRA_FACT_PERCENT, STATUS, NOTE from OLD_X_HPER_STAFF_PLANS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPER_STAFF_PLAN_ITEMS ** ====
insert into X_HPER_STAFF_PLAN_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, PLAN_TYPE, PLAN_VALUE, PLAN_AMOUNT, FACT_VALUE, FACT_PERCENT, FACT_AMOUNT, CALC_KIND, NOTE, FACT_NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, PLAN_TYPE, PLAN_VALUE, PLAN_AMOUNT, FACT_VALUE, FACT_PERCENT, FACT_AMOUNT, CALC_KIND, NOTE, FACT_NOTE from OLD_X_HPER_STAFF_PLAN_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPER_STAFF_PLAN_RULES ** ====
insert into X_HPER_STAFF_PLAN_RULES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, FROM_PERCENT, TO_PERCENT, FACT_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, FROM_PERCENT, TO_PERCENT, FACT_AMOUNT from OLD_X_HPER_STAFF_PLAN_RULES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPER_STAFF_PLAN_PARTS ** ====
insert into X_HPER_STAFF_PLAN_PARTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PART_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, PART_DATE, AMOUNT, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PART_ID, STAFF_PLAN_ID, PLAN_TYPE_ID, PART_DATE, AMOUNT, NOTE from OLD_X_HPER_STAFF_PLAN_PARTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPER_PLAN_GROUPS ** ====
insert into X_HPER_PLAN_GROUPS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PLAN_GROUP_ID, NAME, STATE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PLAN_GROUP_ID, NAME, STATE, ORDER_NO from OLD_X_HPER_PLAN_GROUPS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPER_PLAN_TYPES ** ====
insert into X_HPER_PLAN_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PLAN_TYPE_ID, NAME, PLAN_GROUP_ID, CALC_KIND, WITH_PART, STATE, CODE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PLAN_TYPE_ID, NAME, PLAN_GROUP_ID, CALC_KIND, WITH_PART, STATE, CODE, ORDER_NO from OLD_X_HPER_PLAN_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPER_PLAN_TYPE_DIVISIONS ** ====
insert into X_HPER_PLAN_TYPE_DIVISIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PLAN_TYPE_ID, DIVISION_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PLAN_TYPE_ID, DIVISION_ID from OLD_X_HPER_PLAN_TYPE_DIVISIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HPER_PLAN_TYPE_TASK_TYPES ** ====
insert into X_HPER_PLAN_TYPE_TASK_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PLAN_TYPE_ID, TASK_TYPE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PLAN_TYPE_ID, TASK_TYPE_ID from OLD_X_HPER_PLAN_TYPE_TASK_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_EDU_STAGES ** ====
insert into X_HREF_EDU_STAGES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EDU_STAGE_ID, NAME, STATE, CODE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EDU_STAGE_ID, NAME, STATE, CODE, ORDER_NO from OLD_X_HREF_EDU_STAGES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_SCIENCE_BRANCHES ** ====
insert into X_HREF_SCIENCE_BRANCHES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SCIENCE_BRANCH_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SCIENCE_BRANCH_ID, NAME, STATE, CODE from OLD_X_HREF_SCIENCE_BRANCHES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_INSTITUTIONS ** ====
insert into X_HREF_INSTITUTIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INSTITUTION_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INSTITUTION_ID, NAME, STATE, CODE from OLD_X_HREF_INSTITUTIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_SPECIALTIES ** ====
insert into X_HREF_SPECIALTIES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SPECIALTY_ID, NAME, KIND, PARENT_ID, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SPECIALTY_ID, NAME, KIND, PARENT_ID, STATE, CODE from OLD_X_HREF_SPECIALTIES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_LANGS ** ====
insert into X_HREF_LANGS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LANG_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LANG_ID, NAME, STATE, CODE from OLD_X_HREF_LANGS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_LANG_LEVELS ** ====
insert into X_HREF_LANG_LEVELS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LANG_LEVEL_ID, NAME, STATE, CODE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LANG_LEVEL_ID, NAME, STATE, CODE, ORDER_NO from OLD_X_HREF_LANG_LEVELS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_DOCUMENT_TYPES ** ====
insert into X_HREF_DOCUMENT_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DOC_TYPE_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DOC_TYPE_ID, NAME, STATE, CODE from OLD_X_HREF_DOCUMENT_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_REFERENCE_TYPES ** ====
insert into X_HREF_REFERENCE_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REFERENCE_TYPE_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REFERENCE_TYPE_ID, NAME, STATE, CODE from OLD_X_HREF_REFERENCE_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_RELATION_DEGREES ** ====
insert into X_HREF_RELATION_DEGREES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RELATION_DEGREE_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RELATION_DEGREE_ID, NAME, STATE, CODE from OLD_X_HREF_RELATION_DEGREES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_MARITAL_STATUSES ** ====
insert into X_HREF_MARITAL_STATUSES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MARITAL_STATUS_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MARITAL_STATUS_ID, NAME, STATE, CODE from OLD_X_HREF_MARITAL_STATUSES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_EXPERIENCE_TYPES ** ====
insert into X_HREF_EXPERIENCE_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EXPERIENCE_TYPE_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EXPERIENCE_TYPE_ID, NAME, STATE, CODE from OLD_X_HREF_EXPERIENCE_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_AWARDS ** ====
insert into X_HREF_AWARDS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, AWARD_ID, NAME, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, AWARD_ID, NAME, STATE from OLD_X_HREF_AWARDS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_LABOR_FUNCTIONS ** ====
insert into X_HREF_LABOR_FUNCTIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LABOR_FUNCTION_ID, NAME, DESCRIPTION, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LABOR_FUNCTION_ID, NAME, DESCRIPTION, CODE from OLD_X_HREF_LABOR_FUNCTIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_SICK_LEAVE_REASONS ** ====
insert into X_HREF_SICK_LEAVE_REASONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, COEFFICIENT, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, COEFFICIENT, STATE, CODE from OLD_X_HREF_SICK_LEAVE_REASONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_BUSINESS_TRIP_REASONS ** ====
insert into X_HREF_BUSINESS_TRIP_REASONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE, CODE from OLD_X_HREF_BUSINESS_TRIP_REASONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_DISMISSAL_REASONS ** ====
insert into X_HREF_DISMISSAL_REASONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DISMISSAL_REASON_ID, NAME, DESCRIPTION, REASON_TYPE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DISMISSAL_REASON_ID, NAME, DESCRIPTION, REASON_TYPE from OLD_X_HREF_DISMISSAL_REASONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_WAGES ** ====
insert into X_HREF_WAGES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WAGE_ID, JOB_ID, RANK_ID, WAGE_BEGIN, WAGE_END) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WAGE_ID, JOB_ID, RANK_ID, WAGE_BEGIN, WAGE_END from OLD_X_HREF_WAGES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_EMPLOYMENT_SOURCES ** ====
insert into X_HREF_EMPLOYMENT_SOURCES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SOURCE_ID, NAME, KIND, ORDER_NO, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SOURCE_ID, NAME, KIND, ORDER_NO, STATE from OLD_X_HREF_EMPLOYMENT_SOURCES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_INDICATORS ** ====
insert into X_HREF_INDICATORS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INDICATOR_ID, NAME, SHORT_NAME, IDENTIFIER, USED, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INDICATOR_ID, NAME, SHORT_NAME, IDENTIFIER, USED, STATE from OLD_X_HREF_INDICATORS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_HREF_FTES ** ====
insert into X_HREF_FTES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FTE_ID, NAME, FTE_VALUE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FTE_ID, NAME, FTE_VALUE, ORDER_NO from OLD_X_HREF_FTES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_COMPANIES ** ====
insert into X_MD_COMPANIES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, COMPANY_ID, NAME, STATE, CODE, LANG_CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, COMPANY_ID, NAME, STATE, CODE, LANG_CODE from OLD_X_MD_COMPANIES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_COMPANY_INFOS ** ====
insert into X_MD_COMPANY_INFOS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, COMPANY_ID, USER_SYSTEM, USER_ADMIN, FILIAL_HEAD, FILE_UPLOAD_LIMIT, REGION_ID, TIMEZONE_CODE, PHONE, EMAIL, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, COMPANY_ID, USER_SYSTEM, USER_ADMIN, FILIAL_HEAD, FILE_UPLOAD_LIMIT, REGION_ID, TIMEZONE_CODE, PHONE, EMAIL, NOTE from OLD_X_MD_COMPANY_INFOS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_FILIALS ** ====
insert into X_MD_FILIALS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, NAME, STATE, TIMEZONE_CODE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, NAME, STATE, TIMEZONE_CODE, ORDER_NO from OLD_X_MD_FILIALS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_USERS ** ====
insert into X_MD_USERS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, USER_ID, NAME, LOGIN, PASSWORD, STATE, GENDER, MANAGER_ID, TIMEZONE_CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, USER_ID, NAME, LOGIN, PASSWORD, STATE, GENDER, MANAGER_ID, TIMEZONE_CODE from OLD_X_MD_USERS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_USER_FILIALS ** ====
insert into X_MD_USER_FILIALS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, USER_ID, FILIAL_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, USER_ID, FILIAL_ID from OLD_X_MD_USER_FILIALS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_USER_ROLES ** ====
insert into X_MD_USER_ROLES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, USER_ID, FILIAL_ID, ROLE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, USER_ID, FILIAL_ID, ROLE_ID from OLD_X_MD_USER_ROLES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_USER_FORM_ACTIONS ** ====
insert into X_MD_USER_FORM_ACTIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, USER_ID, FILIAL_ID, FORM, ACTION_KEY) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, USER_ID, FILIAL_ID, FORM, ACTION_KEY from OLD_X_MD_USER_FORM_ACTIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_ROLES ** ====
insert into X_MD_ROLES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROLE_ID, NAME, STATE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROLE_ID, NAME, STATE, ORDER_NO from OLD_X_MD_ROLES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_ROLE_FORM_ACTIONS ** ====
insert into X_MD_ROLE_FORM_ACTIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROLE_ID, FORM, ACTION_KEY) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROLE_ID, FORM, ACTION_KEY from OLD_X_MD_ROLE_FORM_ACTIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_ROLE_PROJECTS ** ====
insert into X_MD_ROLE_PROJECTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROLE_ID, PROJECT_CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROLE_ID, PROJECT_CODE from OLD_X_MD_ROLE_PROJECTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MS_TASKS ** ====
insert into X_MS_TASKS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TASK_ID, TITLE, STATUS_ID, BEGIN_TIME, END_TIME, CREATED_BY, CREATED_ON) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TASK_ID, TITLE, STATUS_ID, BEGIN_TIME, END_TIME, CREATED_BY, CREATED_ON from OLD_X_MS_TASKS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MS_TASK_PERSONS ** ====
insert into X_MS_TASK_PERSONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TASK_ID, PERSON_ID, INVOLVE_KIND, VIEWED) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TASK_ID, PERSON_ID, INVOLVE_KIND, VIEWED from OLD_X_MS_TASK_PERSONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MS_TASK_CHECK_LIST ** ====
insert into X_MS_TASK_CHECK_LIST (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TASK_CHECK_ID, TASK_ID, TEXT, CHECKED, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TASK_CHECK_ID, TASK_ID, TEXT, CHECKED, ORDER_NO from OLD_X_MS_TASK_CHECK_LIST t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MS_TASK_TYPE_BINDS ** ====
insert into X_MS_TASK_TYPE_BINDS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TASK_ID, TASK_GROUP_ID, TASK_TYPE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TASK_ID, TASK_GROUP_ID, TASK_TYPE_ID from OLD_X_MS_TASK_TYPE_BINDS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_PERSONS ** ====
insert into X_MD_PERSONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, NAME, EMAIL, PHOTO_SHA, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, NAME, EMAIL, PHOTO_SHA, STATE, CODE from OLD_X_MD_PERSONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_REGIONS ** ====
insert into X_MD_REGIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REGION_ID, NAME, REGION_KIND, STATE, PARENT_ID, LATLNG, PCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REGION_ID, NAME, REGION_KIND, STATE, PARENT_ID, LATLNG, PCODE from OLD_X_MD_REGIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MVT_VISIT_HEADERS ** ====
insert into X_MVT_VISIT_HEADERS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VISIT_ID, PERSON_ID, VISIT_DATE, VISIT_TIME, BEGUN_ON, ENDED_ON, STATUS, REVIEW_STATUS, USER_ID, START_LOCATION, END_LOCATION, NOTE, SOURCE_TABLE, SOURCE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VISIT_ID, PERSON_ID, VISIT_DATE, VISIT_TIME, BEGUN_ON, ENDED_ON, STATUS, REVIEW_STATUS, USER_ID, START_LOCATION, END_LOCATION, NOTE, SOURCE_TABLE, SOURCE_ID from OLD_X_MVT_VISIT_HEADERS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MVT_VISIT_PHOTOS ** ====
insert into X_MVT_VISIT_PHOTOS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VISIT_ID, PHOTO_ID, STATUS, PHOTO_DATE, PHOTO_TYPE_ID, PHOTO_SHA, TEMP_SHA, LATLNG, NOTE, DELETED) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VISIT_ID, PHOTO_ID, STATUS, PHOTO_DATE, PHOTO_TYPE_ID, PHOTO_SHA, TEMP_SHA, LATLNG, NOTE, DELETED from OLD_X_MVT_VISIT_PHOTOS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MVT_VISIT_VIDEOS ** ====
insert into X_MVT_VISIT_VIDEOS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VISIT_ID, VIDEO_ID, STATUS, VIDEO_DATE, VIDEO_TYPE_ID, VIDEO_SHA, TEMP_SHA, LATLNG, NOTE, DELETED) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VISIT_ID, VIDEO_ID, STATUS, VIDEO_DATE, VIDEO_TYPE_ID, VIDEO_SHA, TEMP_SHA, LATLNG, NOTE, DELETED from OLD_X_MVT_VISIT_VIDEOS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MVT_VISIT_COMMENTS ** ====
insert into X_MVT_VISIT_COMMENTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VISIT_ID, COMMENT_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VISIT_ID, COMMENT_ID from OLD_X_MVT_VISIT_COMMENTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_LEGAL_FORMS ** ====
insert into X_MR_LEGAL_FORMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LEGAL_FORM_ID, SHORT_NAME, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, LEGAL_FORM_ID, SHORT_NAME, NAME, STATE, CODE from OLD_X_MR_LEGAL_FORMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_SECTORS ** ====
insert into X_MR_SECTORS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SECTOR_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SECTOR_ID, NAME, STATE, CODE from OLD_X_MR_SECTORS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_SECTOR_PRODUCTS ** ====
insert into X_MR_SECTOR_PRODUCTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SECTOR_ID, PRODUCT_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SECTOR_ID, PRODUCT_ID from OLD_X_MR_SECTOR_PRODUCTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_LEGAL_PERSONS ** ====
insert into X_MR_LEGAL_PERSONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, NAME, SHORT_NAME, PRIMARY_PERSON_ID, LATLNG, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, NAME, SHORT_NAME, PRIMARY_PERSON_ID, LATLNG, STATE, CODE from OLD_X_MR_LEGAL_PERSONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_LEGAL_PERSON_CONTACTS ** ====
insert into X_MR_LEGAL_PERSON_CONTACTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_CONTACT_ID, PERSON_ID, NAME, POSITION_ID, PHONE_NUMBER, BIRTHDAY, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_CONTACT_ID, PERSON_ID, NAME, POSITION_ID, PHONE_NUMBER, BIRTHDAY, NOTE from OLD_X_MR_LEGAL_PERSON_CONTACTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_NATURAL_PERSONS ** ====
insert into X_MR_NATURAL_PERSONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, NAME, FIRST_NAME, LAST_NAME, MIDDLE_NAME, GENDER, BIRTHDAY, LEGAL_PERSON_ID, RESPONSIBLE_PERSON_ID, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, NAME, FIRST_NAME, LAST_NAME, MIDDLE_NAME, GENDER, BIRTHDAY, LEGAL_PERSON_ID, RESPONSIBLE_PERSON_ID, STATE, CODE from OLD_X_MR_NATURAL_PERSONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_PERSON_DETAILS ** ====
insert into X_MR_PERSON_DETAILS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, TIN, CEA, MAIN_PHONE, WEB, FAX, ADDRESS, ADDRESS_GUIDE, DIRECTOR_NAME, DIRECTOR_FIRST_NAME, DIRECTOR_LAST_NAME, DIRECTOR_MIDDLE_NAME, ACCOUNTANT_NAME, ACCOUNTANT_FIRST_NAME, ACCOUNTANT_LAST_NAME, ACCOUNTANT_MIDDLE_NAME, PARENT_PERSON_ID, OWNER_PERSON_ID, REGION_ID, BARCODE, NOTE, ZIP_CODE, IS_BUDGETARIAN) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, TIN, CEA, MAIN_PHONE, WEB, FAX, ADDRESS, ADDRESS_GUIDE, DIRECTOR_NAME, DIRECTOR_FIRST_NAME, DIRECTOR_LAST_NAME, DIRECTOR_MIDDLE_NAME, ACCOUNTANT_NAME, ACCOUNTANT_FIRST_NAME, ACCOUNTANT_LAST_NAME, ACCOUNTANT_MIDDLE_NAME, PARENT_PERSON_ID, OWNER_PERSON_ID, REGION_ID, BARCODE, NOTE, ZIP_CODE, IS_BUDGETARIAN from OLD_X_MR_PERSON_DETAILS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_PERSON_TYPE_BINDS ** ====
insert into X_MR_PERSON_TYPE_BINDS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_GROUP_ID, PERSON_ID, PERSON_TYPE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_GROUP_ID, PERSON_ID, PERSON_TYPE_ID from OLD_X_MR_PERSON_TYPE_BINDS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_PERSON_FILES ** ====
insert into X_MR_PERSON_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, FILE_SHA, TITLE, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PERSON_ID, FILE_SHA, TITLE, NOTE from OLD_X_MR_PERSON_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_BOX_TYPES ** ====
insert into X_MR_BOX_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BOX_TYPE_ID, NAME, SHORT_NAME, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BOX_TYPE_ID, NAME, SHORT_NAME, STATE from OLD_X_MR_BOX_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_MEASURES ** ====
insert into X_MR_MEASURES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MEASURE_ID, NAME, SHORT_NAME, SCALE, PRODUCT_KIND, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MEASURE_ID, NAME, SHORT_NAME, SCALE, PRODUCT_KIND, STATE from OLD_X_MR_MEASURES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_PRODUCERS ** ====
insert into X_MR_PRODUCERS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCER_ID, ORDER_NO, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCER_ID, ORDER_NO, STATE, CODE from OLD_X_MR_PRODUCERS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_PRODUCTS ** ====
insert into X_MR_PRODUCTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_ID, NAME, GEN_NAME, SHORT_NAME, MEASURE_ID, PRODUCT_KIND, PRODUCER_ID, BOX_TYPE_ID, BOX_QUANT, WEIGHT_NETTO, WEIGHT_BRUTTO, LITR, ORDER_NO, STATE, CODE, PHONEX_NAME) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_ID, NAME, GEN_NAME, SHORT_NAME, MEASURE_ID, PRODUCT_KIND, PRODUCER_ID, BOX_TYPE_ID, BOX_QUANT, WEIGHT_NETTO, WEIGHT_BRUTTO, LITR, ORDER_NO, STATE, CODE, PHONEX_NAME from OLD_X_MR_PRODUCTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_PRODUCT_TYPE_BINDS ** ====
insert into X_MR_PRODUCT_TYPE_BINDS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_GROUP_ID, PRODUCT_ID, PRODUCT_TYPE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_GROUP_ID, PRODUCT_ID, PRODUCT_TYPE_ID from OLD_X_MR_PRODUCT_TYPE_BINDS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_PRODUCT_FILES ** ====
insert into X_MR_PRODUCT_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_ID, FILE_SHA, TITLE, NOTE, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_ID, FILE_SHA, TITLE, NOTE, STATE from OLD_X_MR_PRODUCT_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_PRODUCT_PHOTOS ** ====
insert into X_MR_PRODUCT_PHOTOS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_ID, PHOTO_SHA, TITLE, NOTE, ORDER_NO, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_ID, PHOTO_SHA, TITLE, NOTE, ORDER_NO, STATE from OLD_X_MR_PRODUCT_PHOTOS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MR_PRODUCT_BARCODES ** ====
insert into X_MR_PRODUCT_BARCODES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_ID, BARCODE, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_ID, BARCODE, STATE from OLD_X_MR_PRODUCT_BARCODES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_VANS ** ====
insert into X_MRF_VANS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VAN_ID, NAME, VAN_NUMBER, CARRYING, VOLUME, NOTE, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, VAN_ID, NAME, VAN_NUMBER, CARRYING, VOLUME, NOTE, STATE, CODE from OLD_X_MRF_VANS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_CLIENTS ** ====
insert into X_MRF_CLIENTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CLIENT_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CLIENT_ID, FILIAL_ID, STATE from OLD_X_MRF_CLIENTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_ROBOTS ** ====
insert into X_MRF_ROBOTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROBOT_ID, NAME, CODE, PERSON_ID, ROBOT_GROUP_ID, DIVISION_ID, JOB_ID, MANAGER_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROBOT_ID, NAME, CODE, PERSON_ID, ROBOT_GROUP_ID, DIVISION_ID, JOB_ID, MANAGER_ID, STATE from OLD_X_MRF_ROBOTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_ROBOT_PERSONS ** ====
insert into X_MRF_ROBOT_PERSONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROBOT_ID, PERSON_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROBOT_ID, PERSON_ID from OLD_X_MRF_ROBOT_PERSONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_ROOMS ** ====
insert into X_MRF_ROOMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, FILIAL_ID, NAME, SUBFILIAL_ID, ROOM_TYPE_ID, ORDER_NO, STATE, CODE, ORDER_PRODUCT_SET_ID, GIFT_PRODUCT_SET_ID, STOCK_PRODUCT_SET_ID, RETURN_PRODUCT_SET_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, FILIAL_ID, NAME, SUBFILIAL_ID, ROOM_TYPE_ID, ORDER_NO, STATE, CODE, ORDER_PRODUCT_SET_ID, GIFT_PRODUCT_SET_ID, STOCK_PRODUCT_SET_ID, RETURN_PRODUCT_SET_ID from OLD_X_MRF_ROOMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_ROOM_ROBOTS ** ====
insert into X_MRF_ROOM_ROBOTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, ROBOT_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, ROBOT_ID, FILIAL_ID, STATE from OLD_X_MRF_ROOM_ROBOTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_ROOM_SECTORS ** ====
insert into X_MRF_ROOM_SECTORS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, SECTOR_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, SECTOR_ID, FILIAL_ID, STATE from OLD_X_MRF_ROOM_SECTORS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_ROOM_SUBFILIALS ** ====
insert into X_MRF_ROOM_SUBFILIALS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, SUBFILIAL_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, SUBFILIAL_ID, FILIAL_ID, STATE from OLD_X_MRF_ROOM_SUBFILIALS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_ROOM_PERSONS ** ====
insert into X_MRF_ROOM_PERSONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, PERSON_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, PERSON_ID, FILIAL_ID, STATE from OLD_X_MRF_ROOM_PERSONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MK_CURRENCIES ** ====
insert into X_MK_CURRENCIES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CURRENCY_ID, NAME, ROUND_MODEL, PREFIX, SUFFIX, DECIMAL_NAME, FRACTION_NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CURRENCY_ID, NAME, ROUND_MODEL, PREFIX, SUFFIX, DECIMAL_NAME, FRACTION_NAME, STATE, CODE from OLD_X_MK_CURRENCIES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MK_CURRENCY_RATES ** ====
insert into X_MK_CURRENCY_RATES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, CURRENCY_ID, RATE_DATE, RATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, CURRENCY_ID, RATE_DATE, RATE from OLD_X_MK_CURRENCY_RATES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MHR_DIVISION_GROUPS ** ====
insert into X_MHR_DIVISION_GROUPS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DIVISION_GROUP_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DIVISION_GROUP_ID, NAME, STATE, CODE from OLD_X_MHR_DIVISION_GROUPS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MHR_DIVISIONS ** ====
insert into X_MHR_DIVISIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DIVISION_ID, NAME, PARENT_ID, DIVISION_GROUP_ID, OPENED_DATE, CLOSED_DATE, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DIVISION_ID, NAME, PARENT_ID, DIVISION_GROUP_ID, OPENED_DATE, CLOSED_DATE, STATE, CODE from OLD_X_MHR_DIVISIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MRF_DIVISION_MANAGERS ** ====
insert into X_MRF_DIVISION_MANAGERS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DIVISION_ID, MANAGER_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DIVISION_ID, MANAGER_ID from OLD_X_MRF_DIVISION_MANAGERS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MHR_JOB_GROUPS ** ====
insert into X_MHR_JOB_GROUPS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOB_GROUP_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOB_GROUP_ID, NAME, STATE, CODE from OLD_X_MHR_JOB_GROUPS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MHR_JOBS ** ====
insert into X_MHR_JOBS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOB_ID, NAME, JOB_GROUP_ID, EXPENSE_COA_ID, EXPENSE_REF_SET, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOB_ID, NAME, JOB_GROUP_ID, EXPENSE_COA_ID, EXPENSE_REF_SET, STATE, CODE from OLD_X_MHR_JOBS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MHR_JOB_DIVISIONS ** ====
insert into X_MHR_JOB_DIVISIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOB_ID, DIVISION_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, JOB_ID, DIVISION_ID from OLD_X_MHR_JOB_DIVISIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MHR_RANKS ** ====
insert into X_MHR_RANKS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RANK_ID, NAME, ORDER_NO, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RANK_ID, NAME, ORDER_NO, CODE from OLD_X_MHR_RANKS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MHR_EMPLOYEES ** ====
insert into X_MHR_EMPLOYEES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EMPLOYEE_ID, EMPLOYEE_NUMBER, DIVISION_ID, JOB_ID, RANK_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EMPLOYEE_ID, EMPLOYEE_NUMBER, DIVISION_ID, JOB_ID, RANK_ID, STATE from OLD_X_MHR_EMPLOYEES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKR_MARGINS ** ====
insert into X_MKR_MARGINS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MARGIN_ID, NAME, PERCENT, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MARGIN_ID, NAME, PERCENT, STATE, CODE from OLD_X_MKR_MARGINS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKR_PAYMENT_TYPES ** ====
insert into X_MKR_PAYMENT_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAYMENT_TYPE_ID, NAME, PAYMENT_KIND, ORDER_NO, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAYMENT_TYPE_ID, NAME, PAYMENT_KIND, ORDER_NO, STATE, CODE from OLD_X_MKR_PAYMENT_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKR_PRICE_TYPES ** ====
insert into X_MKR_PRICE_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRICE_TYPE_ID, NAME, SHORT_NAME, PRICE_TYPE_KIND, CURRENCY_ID, WITH_CARD, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRICE_TYPE_ID, NAME, SHORT_NAME, PRICE_TYPE_KIND, CURRENCY_ID, WITH_CARD, STATE, CODE from OLD_X_MKR_PRICE_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKF_PRODUCT_PRICES ** ====
insert into X_MKF_PRODUCT_PRICES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, PRODUCT_ID, PRICE_TYPE_ID, CARD_ID, PRICE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, PRODUCT_ID, PRICE_TYPE_ID, CARD_ID, PRICE from OLD_X_MKF_PRODUCT_PRICES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKF_MARGINS ** ====
insert into X_MKF_MARGINS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, MARGIN_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, MARGIN_ID from OLD_X_MKF_MARGINS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKF_PAYMENT_TYPES ** ====
insert into X_MKF_PAYMENT_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, PAYMENT_TYPE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, PAYMENT_TYPE_ID from OLD_X_MKF_PAYMENT_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKF_PRICE_TYPES ** ====
insert into X_MKF_PRICE_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, PRICE_TYPE_ID, EDITABLE, MOBILE_EDITABLE, MIN_PRICE, MAX_PRICE, MIN_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, PRICE_TYPE_ID, EDITABLE, MOBILE_EDITABLE, MIN_PRICE, MAX_PRICE, MIN_AMOUNT from OLD_X_MKF_PRICE_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKF_ROOM_PRICE_TYPES ** ====
insert into X_MKF_ROOM_PRICE_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, PRICE_TYPE_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, PRICE_TYPE_ID, FILIAL_ID, STATE from OLD_X_MKF_ROOM_PRICE_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKF_ROOM_PAYMENT_TYPES ** ====
insert into X_MKF_ROOM_PAYMENT_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, PAYMENT_TYPE_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, PAYMENT_TYPE_ID, FILIAL_ID, STATE from OLD_X_MKF_ROOM_PAYMENT_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKF_ROOM_MARGINS ** ====
insert into X_MKF_ROOM_MARGINS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, MARGIN_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, MARGIN_ID, FILIAL_ID, STATE from OLD_X_MKF_ROOM_MARGINS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKCS_CASHBOXES ** ====
insert into X_MKCS_CASHBOXES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CASHBOX_ID, FILIAL_ID, NAME, RESPONSIBLE_PERSON_ID, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CASHBOX_ID, FILIAL_ID, NAME, RESPONSIBLE_PERSON_ID, STATE, CODE from OLD_X_MKCS_CASHBOXES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKCS_CASHBOX_CURRENCIES ** ====
insert into X_MKCS_CASHBOX_CURRENCIES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, CASHBOX_ID, CURRENCY_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, CASHBOX_ID, CURRENCY_ID from OLD_X_MKCS_CASHBOX_CURRENCIES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MPR_SETTINGS ** ====
insert into X_MPR_SETTINGS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE from OLD_X_MPR_SETTINGS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MPR_OPER_TYPES ** ====
insert into X_MPR_OPER_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPER_TYPE_ID, OPERATION_KIND, NAME, SHORT_NAME, ACCOUNTING_TYPE, CORR_COA_ID, CORR_REF_SET, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE, NOTE, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPER_TYPE_ID, OPERATION_KIND, NAME, SHORT_NAME, ACCOUNTING_TYPE, CORR_COA_ID, CORR_REF_SET, INCOME_TAX_EXISTS, INCOME_TAX_RATE, PENSION_PAYMENT_EXISTS, PENSION_PAYMENT_RATE, SOCIAL_PAYMENT_EXISTS, SOCIAL_PAYMENT_RATE, NOTE, STATE, CODE from OLD_X_MPR_OPER_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MPR_BOOKS ** ====
insert into X_MPR_BOOKS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BOOK_ID, BOOK_NUMBER, BOOK_DATE, BOOK_NAME, MONTH, DIVISION_ID, CURRENCY_ID, POSTED, BARCODE, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BOOK_ID, BOOK_NUMBER, BOOK_DATE, BOOK_NAME, MONTH, DIVISION_ID, CURRENCY_ID, POSTED, BARCODE, NOTE from OLD_X_MPR_BOOKS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MPR_BOOK_OPERATIONS ** ====
insert into X_MPR_BOOK_OPERATIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BOOK_ID, OPERATION_ID, EMPLOYEE_ID, OPER_TYPE_ID, AMOUNT, AMOUNT_BASE, NET_AMOUNT, INCOME_TAX_AMOUNT, PENSION_PAYMENT_AMOUNT, SOCIAL_PAYMENT_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BOOK_ID, OPERATION_ID, EMPLOYEE_ID, OPER_TYPE_ID, AMOUNT, AMOUNT_BASE, NET_AMOUNT, INCOME_TAX_AMOUNT, PENSION_PAYMENT_AMOUNT, SOCIAL_PAYMENT_AMOUNT from OLD_X_MPR_BOOK_OPERATIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MPR_PAYMENTS ** ====
insert into X_MPR_PAYMENTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAYMENT_ID, PAYMENT_KIND, STATUS, PAYMENT_NUMBER, PAYMENT_DATE, BOOKED_DATE, DIVISION_ID, CURRENCY_ID, PAYMENT_TYPE, CASHBOX_ID, BANK_ACCOUNT_ID, AMOUNT, AMOUNT_BASE, PAID_AMOUNT, PAID_AMOUNT_BASE, UNPAID_AMOUNT, UNPAID_AMOUNT_BASE, NOTE, SOURCE_TABLE, SOURCE_ID, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAYMENT_ID, PAYMENT_KIND, STATUS, PAYMENT_NUMBER, PAYMENT_DATE, BOOKED_DATE, DIVISION_ID, CURRENCY_ID, PAYMENT_TYPE, CASHBOX_ID, BANK_ACCOUNT_ID, AMOUNT, AMOUNT_BASE, PAID_AMOUNT, PAID_AMOUNT_BASE, UNPAID_AMOUNT, UNPAID_AMOUNT_BASE, NOTE, SOURCE_TABLE, SOURCE_ID, BARCODE from OLD_X_MPR_PAYMENTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_WAREHOUSE_TYPES ** ====
insert into X_MKW_WAREHOUSE_TYPES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WAREHOUSE_TYPE_ID, NAME, STATE, ORDER_NO, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WAREHOUSE_TYPE_ID, NAME, STATE, ORDER_NO, CODE from OLD_X_MKW_WAREHOUSE_TYPES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_WAREHOUSES ** ====
insert into X_MKW_WAREHOUSES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WAREHOUSE_ID, WAREHOUSE_TYPE_ID, NAME, RESPONSIBLE_PERSON_ID, STATE, ORDER_NO, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WAREHOUSE_ID, WAREHOUSE_TYPE_ID, NAME, RESPONSIBLE_PERSON_ID, STATE, ORDER_NO, CODE from OLD_X_MKW_WAREHOUSES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_WAREHOUSE_INFOS ** ====
insert into X_MKW_WAREHOUSE_INFOS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WAREHOUSE_ID, ADDRESS, ADDRESS_GUIDE, REGION_ID, LATLNG, TEMPERATURE_TYPE_ID, HUMIDITY_TYPE_ID, SHAPE_TYPE, HEIGHT, WIDTH, LENGTH, DIAMETER, VOLUME) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WAREHOUSE_ID, ADDRESS, ADDRESS_GUIDE, REGION_ID, LATLNG, TEMPERATURE_TYPE_ID, HUMIDITY_TYPE_ID, SHAPE_TYPE, HEIGHT, WIDTH, LENGTH, DIAMETER, VOLUME from OLD_X_MKW_WAREHOUSE_INFOS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_SUPPLIERS ** ====
insert into X_MKW_SUPPLIERS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SUPPLIER_ID, VAT_ENABLED, VAT_PERCENT, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SUPPLIER_ID, VAT_ENABLED, VAT_PERCENT, STATE from OLD_X_MKW_SUPPLIERS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_SUPPLIER_PRODUCTS ** ====
insert into X_MKW_SUPPLIER_PRODUCTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SUPPLIER_ID, PRODUCT_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SUPPLIER_ID, PRODUCT_ID from OLD_X_MKW_SUPPLIER_PRODUCTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASE_REQUESTS ** ====
insert into X_MKW_PURCHASE_REQUESTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ID, STATUS, REQUEST_TIME, REQUEST_DATE, REQUEST_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, EXPIRY_DATE, NOTE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ID, STATUS, REQUEST_TIME, REQUEST_DATE, REQUEST_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, EXPIRY_DATE, NOTE, BARCODE from OLD_X_MKW_PURCHASE_REQUESTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASE_REQUEST_ITEMS ** ====
insert into X_MKW_PURCHASE_REQUEST_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ITEM_ID, REQUEST_ID, PRODUCT_ID, PRODUCT_NAME, MEASURE_ID, QUANTITY, REASON_ID, NOTE, ORDER_NO, ORDER_QUANTITY) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ITEM_ID, REQUEST_ID, PRODUCT_ID, PRODUCT_NAME, MEASURE_ID, QUANTITY, REASON_ID, NOTE, ORDER_NO, ORDER_QUANTITY from OLD_X_MKW_PURCHASE_REQUEST_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASE_ORDERS ** ====
insert into X_MKW_PURCHASE_ORDERS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_ID, STATUS, ORDER_TIME, ORDER_DATE, ORDER_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, PURCHASE_DATE, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_ID, STATUS, ORDER_TIME, ORDER_DATE, ORDER_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, PURCHASE_DATE, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT from OLD_X_MKW_PURCHASE_ORDERS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASE_ORDER_ITEMS ** ====
insert into X_MKW_PURCHASE_ORDER_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_ITEM_ID, ORDER_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, REQUEST_QUANTITY, QUANTITY, EXTRA_QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, NOTE, ORDER_NO, PURCHASE_QUANTITY) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_ITEM_ID, ORDER_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, REQUEST_QUANTITY, QUANTITY, EXTRA_QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, NOTE, ORDER_NO, PURCHASE_QUANTITY from OLD_X_MKW_PURCHASE_ORDER_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASE_ORDER_REQUESTS ** ====
insert into X_MKW_PURCHASE_ORDER_REQUESTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_ITEM_ID, REQUEST_ITEM_ID, ORDER_ID, QUANTITY, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_ITEM_ID, REQUEST_ITEM_ID, ORDER_ID, QUANTITY, ORDER_NO from OLD_X_MKW_PURCHASE_ORDER_REQUESTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASES ** ====
insert into X_MKW_PURCHASES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_ID, STATUS_ID, POSTED, PURCHASE_TIME, PURCHASE_DATE, PURCHASE_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, INPUT_DATE, ORDER_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, INVOICE_NUMBER, INVOICE_DATE, WITH_INPUT, WITH_EXTRA_COST, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, NOTE, BARCODE, SOURCE_TABLE, SOURCE_ID, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_ID, STATUS_ID, POSTED, PURCHASE_TIME, PURCHASE_DATE, PURCHASE_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, INPUT_DATE, ORDER_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, INVOICE_NUMBER, INVOICE_DATE, WITH_INPUT, WITH_EXTRA_COST, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, NOTE, BARCODE, SOURCE_TABLE, SOURCE_ID, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT from OLD_X_MKW_PURCHASES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASE_ITEMS ** ====
insert into X_MKW_PURCHASE_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_ITEM_ID, PURCHASE_ID, ORDER_ITEM_ID, INVENTORY_KIND, ON_BALANCE, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, NOTE, ORDER_NO, INPUT_QUANTITY) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_ITEM_ID, PURCHASE_ID, ORDER_ITEM_ID, INVENTORY_KIND, ON_BALANCE, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, NOTE, ORDER_NO, INPUT_QUANTITY from OLD_X_MKW_PURCHASE_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASE_EXTRA_COSTS ** ====
insert into X_MKW_PURCHASE_EXTRA_COSTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_EXTRA_COST_UNIT_ID, EXTRA_COST_ID, PURCHASE_ID, PURCHASE_ITEM_ID, AMOUNT, AMOUNT_BASE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_EXTRA_COST_UNIT_ID, EXTRA_COST_ID, PURCHASE_ID, PURCHASE_ITEM_ID, AMOUNT, AMOUNT_BASE from OLD_X_MKW_PURCHASE_EXTRA_COSTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASE_FILES ** ====
insert into X_MKW_PURCHASE_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_ID, SHA, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_ID, SHA, NOTE from OLD_X_MKW_PURCHASE_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_PURCHASE_PRODUCT_FILES ** ====
insert into X_MKW_PURCHASE_PRODUCT_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_ID, PRODUCT_ID, CARD_ID, SHA, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PURCHASE_ID, PRODUCT_ID, CARD_ID, SHA, NOTE from OLD_X_MKW_PURCHASE_PRODUCT_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INPUTS ** ====
insert into X_MKW_INPUTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ID, STATUS, INPUT_NUMBER, INPUT_TIME, INPUT_DATE, PURCHASE_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, BATCH_NUMBER, NOTE, BARCODE, CODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ID, STATUS, INPUT_NUMBER, INPUT_TIME, INPUT_DATE, PURCHASE_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, BATCH_NUMBER, NOTE, BARCODE, CODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT from OLD_X_MKW_INPUTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INPUT_ITEMS ** ====
insert into X_MKW_INPUT_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ITEM_ID, INPUT_ID, PURCHASE_ID, PURCHASE_ITEM_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ITEM_ID, INPUT_ID, PURCHASE_ID, PURCHASE_ITEM_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, ORDER_NO from OLD_X_MKW_INPUT_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INPUT_EXTRA_COSTS ** ====
insert into X_MKW_INPUT_EXTRA_COSTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_EXTRA_COST_UNIT_ID, EXTRA_COST_ID, INPUT_ID, INPUT_ITEM_ID, AMOUNT, AMOUNT_BASE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_EXTRA_COST_UNIT_ID, EXTRA_COST_ID, INPUT_ID, INPUT_ITEM_ID, AMOUNT, AMOUNT_BASE from OLD_X_MKW_INPUT_EXTRA_COSTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INPUT_FILES ** ====
insert into X_MKW_INPUT_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ID, SHA, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ID, SHA, NOTE from OLD_X_MKW_INPUT_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INPUT_PRODUCT_FILES ** ====
insert into X_MKW_INPUT_PRODUCT_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ID, PRODUCT_ID, CARD_ID, SHA, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ID, PRODUCT_ID, CARD_ID, SHA, NOTE from OLD_X_MKW_INPUT_PRODUCT_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_RETURNS ** ====
insert into X_MKW_RETURNS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RETURN_ID, STATUS, RETURN_NUMBER, RETURN_TIME, RETURN_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, PURCHASE_ID, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, INVOICE_NUMBER, INVOICE_DATE, WAREHOUSE_ID, REASON_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RETURN_ID, STATUS, RETURN_NUMBER, RETURN_TIME, RETURN_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, PURCHASE_ID, SUPPLIER_ID, OWNER_PERSON_ID, CONTRACT_ID, CURRENCY_ID, INVOICE_NUMBER, INVOICE_DATE, WAREHOUSE_ID, REASON_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE, C_MARGIN_AMOUNT, C_MARGIN_AMOUNT_BASE, C_VAT_AMOUNT from OLD_X_MKW_RETURNS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_RETURN_ITEMS ** ====
insert into X_MKW_RETURN_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RETURN_ITEM_ID, RETURN_ID, PURCHASE_ITEM_ID, INPUT_ID, INPUT_ITEM_ID, INVENTORY_KIND, ON_BALANCE, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RETURN_ITEM_ID, RETURN_ID, PURCHASE_ITEM_ID, INPUT_ID, INPUT_ITEM_ID, INVENTORY_KIND, ON_BALANCE, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, ORDER_NO from OLD_X_MKW_RETURN_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_RETURN_FILES ** ====
insert into X_MKW_RETURN_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RETURN_ID, SHA, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RETURN_ID, SHA, NOTE from OLD_X_MKW_RETURN_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_RETURN_PRODUCT_FILES ** ====
insert into X_MKW_RETURN_PRODUCT_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RETURN_ID, PRODUCT_ID, CARD_ID, SHA, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, RETURN_ID, PRODUCT_ID, CARD_ID, SHA, NOTE from OLD_X_MKW_RETURN_PRODUCT_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_WRITEOFF_REASONS ** ====
insert into X_MKW_WRITEOFF_REASONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE, CODE from OLD_X_MKW_WRITEOFF_REASONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_WRITEOFFS ** ====
insert into X_MKW_WRITEOFFS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WRITEOFF_ID, STATUS, WRITEOFF_NUMBER, WRITEOFF_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, REASON_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WRITEOFF_ID, STATUS, WRITEOFF_NUMBER, WRITEOFF_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, REASON_ID, NOTE, BARCODE, C_AMOUNT, C_AMOUNT_BASE from OLD_X_MKW_WRITEOFFS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_WRITEOFF_EXPENSES ** ====
insert into X_MKW_WRITEOFF_EXPENSES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WRITEOFF_EXPENSE_ID, WRITEOFF_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, NOTE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WRITEOFF_EXPENSE_ID, WRITEOFF_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, NOTE, ORDER_NO from OLD_X_MKW_WRITEOFF_EXPENSES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_WRITEOFF_ITEMS ** ====
insert into X_MKW_WRITEOFF_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WRITEOFF_ITEM_ID, WRITEOFF_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, QUANTITY, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, WRITEOFF_ITEM_ID, WRITEOFF_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, QUANTITY, ORDER_NO from OLD_X_MKW_WRITEOFF_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_STOCKTAKING_REASONS ** ====
insert into X_MKW_STOCKTAKING_REASONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE, CODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE, CODE from OLD_X_MKW_STOCKTAKING_REASONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_STOCKTAKINGS ** ====
insert into X_MKW_STOCKTAKINGS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STOCKTAKING_ID, STATUS, STOCKTAKING_NUMBER, STOCKTAKING_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, REASON_ID, INCOME_BATCH_NUMBER, NOTE, BARCODE, C_INCOME_AMOUNT, C_INCOME_AMOUNT_BASE, C_EXPENSE_AMOUNT, C_EXPENSE_AMOUNT_BASE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STOCKTAKING_ID, STATUS, STOCKTAKING_NUMBER, STOCKTAKING_DATE, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, WAREHOUSE_ID, CURRENCY_ID, REASON_ID, INCOME_BATCH_NUMBER, NOTE, BARCODE, C_INCOME_AMOUNT, C_INCOME_AMOUNT_BASE, C_EXPENSE_AMOUNT, C_EXPENSE_AMOUNT_BASE from OLD_X_MKW_STOCKTAKINGS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_STOCKTAKING_CORRS ** ====
insert into X_MKW_STOCKTAKING_CORRS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STOCKTAKING_CORR_ID, STOCKTAKING_ID, CORR_KIND, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, NOTE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STOCKTAKING_CORR_ID, STOCKTAKING_ID, CORR_KIND, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, NOTE, ORDER_NO from OLD_X_MKW_STOCKTAKING_CORRS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_STOCKTAKING_ITEMS ** ====
insert into X_MKW_STOCKTAKING_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STOCKTAKING_ITEM_ID, STOCKTAKING_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, BALANCE_QUANTITY, QUANTITY, INCOME_PRICE, INCOME_AMOUNT, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, STOCKTAKING_ITEM_ID, STOCKTAKING_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, BALANCE_QUANTITY, QUANTITY, INCOME_PRICE, INCOME_AMOUNT, ORDER_NO from OLD_X_MKW_STOCKTAKING_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_MOVEMENT_REQUESTS ** ====
insert into X_MKW_MOVEMENT_REQUESTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ID, STATUS, REQUEST_TIME, REQUEST_DATE, REQUEST_NUMBER, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, MOVEMENT_DATE, FROM_WAREHOUSE_ID, TO_WAREHOUSE_ID, REASON_ID, NOTE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ID, STATUS, REQUEST_TIME, REQUEST_DATE, REQUEST_NUMBER, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, MOVEMENT_DATE, FROM_WAREHOUSE_ID, TO_WAREHOUSE_ID, REASON_ID, NOTE, BARCODE from OLD_X_MKW_MOVEMENT_REQUESTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_MOVEMENT_REQUEST_ITEMS ** ====
insert into X_MKW_MOVEMENT_REQUEST_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ITEM_ID, REQUEST_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ITEM_ID, REQUEST_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, ORDER_NO from OLD_X_MKW_MOVEMENT_REQUEST_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_MOVEMENTS ** ====
insert into X_MKW_MOVEMENTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MOVEMENT_ID, STATUS, MOVEMENT_NUMBER, FROM_MOVEMENT_TIME, FROM_MOVEMENT_DATE, TO_MOVEMENT_TIME, TO_MOVEMENT_DATE, REQUEST_ID, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, FROM_WAREHOUSE_ID, TO_WAREHOUSE_ID, REASON_ID, NOTE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MOVEMENT_ID, STATUS, MOVEMENT_NUMBER, FROM_MOVEMENT_TIME, FROM_MOVEMENT_DATE, TO_MOVEMENT_TIME, TO_MOVEMENT_DATE, REQUEST_ID, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, FROM_WAREHOUSE_ID, TO_WAREHOUSE_ID, REASON_ID, NOTE, BARCODE from OLD_X_MKW_MOVEMENTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_MOVEMENT_ITEMS ** ====
insert into X_MKW_MOVEMENT_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MOVEMENT_ITEM_ID, MOVEMENT_ID, REQUEST_ITEM_ID, PRODUCT_ID, INVENTORY_KIND, ON_BALANCE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, QUANTITY, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MOVEMENT_ITEM_ID, MOVEMENT_ID, REQUEST_ITEM_ID, PRODUCT_ID, INVENTORY_KIND, ON_BALANCE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, QUANTITY, ORDER_NO from OLD_X_MKW_MOVEMENT_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INVENTORY_PAYABLES ** ====
insert into X_MKW_INVENTORY_PAYABLES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INVENTORY_PAYABLE_ID, INVENTORY_PAYABLE_NUMBER, INVENTORY_PAYABLE_DATE, NOTE, PERSON_ID, BARCODE, POSTED, CHARGE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INVENTORY_PAYABLE_ID, INVENTORY_PAYABLE_NUMBER, INVENTORY_PAYABLE_DATE, NOTE, PERSON_ID, BARCODE, POSTED, CHARGE from OLD_X_MKW_INVENTORY_PAYABLES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INVENTORY_PAYABLE_ITEMS ** ====
insert into X_MKW_INVENTORY_PAYABLE_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INVENTORY_PAYABLE_ITEM_ID, INVENTORY_PAYABLE_ID, PRODUCT_ID, INVENTORY_KIND, PRICE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INVENTORY_PAYABLE_ITEM_ID, INVENTORY_PAYABLE_ID, PRODUCT_ID, INVENTORY_KIND, PRICE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, BATCH_NUMBER, ORDER_NO from OLD_X_MKW_INVENTORY_PAYABLE_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_EXTRA_COSTS ** ====
insert into X_MKW_EXTRA_COSTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EXTRA_COST_ID, POSTED, EXTRA_COST_NUMBER, EXTRA_COST_DATE, AFFECTS_THE_PRICE, DISTRIBUTION_METHOD, ARTICLE_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_CONTRACT_ID, INVOICE_NUMBER, INVOICE_DATE, CURRENCY_ID, AMOUNT, AMOUNT_BASE, VAT_AMOUNT, NOTE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EXTRA_COST_ID, POSTED, EXTRA_COST_NUMBER, EXTRA_COST_DATE, AFFECTS_THE_PRICE, DISTRIBUTION_METHOD, ARTICLE_ID, CORR_TEMPLATE_ID, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_CONTRACT_ID, INVOICE_NUMBER, INVOICE_DATE, CURRENCY_ID, AMOUNT, AMOUNT_BASE, VAT_AMOUNT, NOTE, BARCODE from OLD_X_MKW_EXTRA_COSTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INIT_INVENTORY_BALANCES ** ====
insert into X_MKW_INIT_INVENTORY_BALANCES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ID, POSTED, WAREHOUSE_ID, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, BATCH_NUMBER, NOTE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ID, POSTED, WAREHOUSE_ID, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, BATCH_NUMBER, NOTE, BARCODE from OLD_X_MKW_INIT_INVENTORY_BALANCES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INIT_INVENTORY_BALANCE_ITEMS ** ====
insert into X_MKW_INIT_INVENTORY_BALANCE_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, PRODUCT_ID, INVENTORY_KIND, ON_BALANCE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, PRODUCT_ID, INVENTORY_KIND, ON_BALANCE, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, AMOUNT_BASE, ORDER_NO from OLD_X_MKW_INIT_INVENTORY_BALANCE_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INIT_CLIENT_INVENTORY_BALANCES ** ====
insert into X_MKW_INIT_CLIENT_INVENTORY_BALANCES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ID, POSTED, BALANCE_DATE, BALANCE_NUMBER, BATCH_NUMBER, NOTE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ID, POSTED, BALANCE_DATE, BALANCE_NUMBER, BATCH_NUMBER, NOTE, BARCODE from OLD_X_MKW_INIT_CLIENT_INVENTORY_BALANCES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_INIT_CLIENT_INVENTORY_BALANCE_ITEMS ** ====
insert into X_MKW_INIT_CLIENT_INVENTORY_BALANCE_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, PERSON_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, PRICE, CONTRACT_ID, INSTALLED_BY, INSTALLED_DATE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, PERSON_ID, PRODUCT_ID, INVENTORY_KIND, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, PRICE, CONTRACT_ID, INSTALLED_BY, INSTALLED_DATE, ORDER_NO from OLD_X_MKW_INIT_CLIENT_INVENTORY_BALANCE_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKW_ROOM_WAREHOUSES ** ====
insert into X_MKW_ROOM_WAREHOUSES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, WAREHOUSE_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, WAREHOUSE_ID, FILIAL_ID, STATE from OLD_X_MKW_ROOM_WAREHOUSES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_AUTHORIZED_CAPITALS ** ====
insert into X_MKU_AUTHORIZED_CAPITALS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CAPITAL_ID, POSTED, CAPITAL_DATE, CAPITAL_NUMBER, NOTE, C_AMOUNT, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CAPITAL_ID, POSTED, CAPITAL_DATE, CAPITAL_NUMBER, NOTE, C_AMOUNT, BARCODE from OLD_X_MKU_AUTHORIZED_CAPITALS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_AUTHORIZED_CAPITAL_ITEMS ** ====
insert into X_MKU_AUTHORIZED_CAPITAL_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CAPITAL_ITEM_UNIT_ID, CAPITAL_ID, PERSON_ID, AMOUNT, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CAPITAL_ITEM_UNIT_ID, CAPITAL_ID, PERSON_ID, AMOUNT, ORDER_NO from OLD_X_MKU_AUTHORIZED_CAPITAL_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_INIT_BALANCES ** ====
insert into X_MKU_INIT_BALANCES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ID, POSTED, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, NOTE, SOURCE_TABLE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ID, POSTED, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, NOTE, SOURCE_TABLE, BARCODE from OLD_X_MKU_INIT_BALANCES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_INIT_BALANCE_ITEMS ** ====
insert into X_MKU_INIT_BALANCE_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, COA_ID, REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, COA_ID, REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, ORDER_NO from OLD_X_MKU_INIT_BALANCE_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_INIT_PERSON_BALANCES ** ====
insert into X_MKU_INIT_PERSON_BALANCES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ID, SUBFILIAL_ID, PERSON_KIND, POSTED, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, NOTE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ID, SUBFILIAL_ID, PERSON_KIND, POSTED, CURRENCY_ID, BALANCE_DATE, BALANCE_NUMBER, NOTE, BARCODE from OLD_X_MKU_INIT_PERSON_BALANCES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_INIT_PERSON_BALANCE_ITEMS ** ====
insert into X_MKU_INIT_PERSON_BALANCE_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, PERSON_ID, CONTRACT_ID, DEBIT_AMOUNT, DEBIT_AMOUNT_BASE, CREDIT_AMOUNT, CREDIT_AMOUNT_BASE, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, BALANCE_ITEM_UNIT_ID, BALANCE_ID, PERSON_ID, CONTRACT_ID, DEBIT_AMOUNT, DEBIT_AMOUNT_BASE, CREDIT_AMOUNT, CREDIT_AMOUNT_BASE, ORDER_NO from OLD_X_MKU_INIT_PERSON_BALANCE_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_OFFSETS ** ====
insert into X_MKU_OFFSETS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OFFSET_ID, OFFSET_DATE, OFFSET_NUMBER, SOURCE_TABLE, NOTE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OFFSET_ID, OFFSET_DATE, OFFSET_NUMBER, SOURCE_TABLE, NOTE, BARCODE from OLD_X_MKU_OFFSETS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_OFFSET_ITEMS ** ====
insert into X_MKU_OFFSET_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OFFSET_ITEM_UNIT_ID, OFFSET_ID, COA_TWIN_ID, FIRST_COA_ID, FIRST_REF_SET, SECOND_COA_ID, SECOND_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OFFSET_ITEM_UNIT_ID, OFFSET_ID, COA_TWIN_ID, FIRST_COA_ID, FIRST_REF_SET, SECOND_COA_ID, SECOND_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE from OLD_X_MKU_OFFSET_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_OPERATIONS ** ====
insert into X_MKU_OPERATIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ID, POSTED, OPERATION_DATE, OPERATION_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ID, POSTED, OPERATION_DATE, OPERATION_NUMBER, NOTE, BARCODE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_X_MKU_OPERATIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_OPERATION_ITEMS ** ====
insert into X_MKU_OPERATION_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ITEM_UNIT_ID, OPERATION_ID, DEBIT_COA_ID, DEBIT_CURRENCY_ID, DEBIT_REF_SET, DEBIT_LINK_REF_SET, CREDIT_COA_ID, CREDIT_CURRENCY_ID, CREDIT_REF_SET, CREDIT_LINK_REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ITEM_UNIT_ID, OPERATION_ID, DEBIT_COA_ID, DEBIT_CURRENCY_ID, DEBIT_REF_SET, DEBIT_LINK_REF_SET, CREDIT_COA_ID, CREDIT_CURRENCY_ID, CREDIT_REF_SET, CREDIT_LINK_REF_SET, QUANTITY, AMOUNT, AMOUNT_BASE, ORDER_NO, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_X_MKU_OPERATION_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MD_COMPANY_AUDIT_INFOS ** ====
insert into X_MD_COMPANY_AUDIT_INFOS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TABLE_NAME, STARTED) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, TABLE_NAME, STARTED from OLD_X_MD_COMPANY_AUDIT_INFOS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKU_REALLOCATIONS ** ====
insert into X_MKU_REALLOCATIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REALLOCATION_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, REALLOCATION_DATE, POSTED, REALLOCATION_KIND, COA_ID, FROM_REF_SET, FROM_CURRENCY_ID, FROM_PAYMENT_TYPE_ID, FROM_PERSON_ID, FROM_CONTRACT_ID, FROM_AMOUNT, TO_REF_SET, TO_CURRENCY_ID, TO_PAYMENT_TYPE_ID, TO_PERSON_ID, TO_CONTRACT_ID, TO_AMOUNT, INCOME_ARTICLE_ID, EXPENSE_ARTICLE_ID, REALLOCATION_NUMBER, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REALLOCATION_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, REALLOCATION_DATE, POSTED, REALLOCATION_KIND, COA_ID, FROM_REF_SET, FROM_CURRENCY_ID, FROM_PAYMENT_TYPE_ID, FROM_PERSON_ID, FROM_CONTRACT_ID, FROM_AMOUNT, TO_REF_SET, TO_CURRENCY_ID, TO_PAYMENT_TYPE_ID, TO_PERSON_ID, TO_CONTRACT_ID, TO_AMOUNT, INCOME_ARTICLE_ID, EXPENSE_ARTICLE_ID, REALLOCATION_NUMBER, NOTE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_X_MKU_REALLOCATIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKCS_CASH_OPERATIONS ** ====
insert into X_MKCS_CASH_OPERATIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, POSTED, OPERATION_NUMBER, OPERATION_DATE, CASHBOX_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CURRENCY_ID, AMOUNT, RESPONSIBLE_PERSON_ID, COLLECTOR_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, POSTED, OPERATION_NUMBER, OPERATION_DATE, CASHBOX_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CURRENCY_ID, AMOUNT, RESPONSIBLE_PERSON_ID, COLLECTOR_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE from OLD_X_MKCS_CASH_OPERATIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKCS_BANK_OPERATIONS ** ====
insert into X_MKCS_BANK_OPERATIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, POSTED, OPERATION_NUMBER, OPERATION_DATE, BANK_TRANS_NUMBER, BANK_TRANS_DATE, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ID, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, SUBFILIAL_ID, POSTED, OPERATION_NUMBER, OPERATION_DATE, BANK_TRANS_NUMBER, BANK_TRANS_DATE, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE from OLD_X_MKCS_BANK_OPERATIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKCS_CHECKBOOK_OPERATIONS ** ====
insert into X_MKCS_CHECKBOOK_OPERATIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ID, CLIENT_ID, SUBFILIAL_ID, CONTRACT_ID, STATUS, CHECK_NUMBER, OPERATION_TIME, OPERATION_DATE, AGREEMENT_CASHING_DATE, CASHING_DATE, CURRENCY_ID, CASHBOX_ID, BANK_ACCOUNT_ID, AMOUNT, NOTE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OPERATION_ID, CLIENT_ID, SUBFILIAL_ID, CONTRACT_ID, STATUS, CHECK_NUMBER, OPERATION_TIME, OPERATION_DATE, AGREEMENT_CASHING_DATE, CASHING_DATE, CURRENCY_ID, CASHBOX_ID, BANK_ACCOUNT_ID, AMOUNT, NOTE, BARCODE from OLD_X_MKCS_CHECKBOOK_OPERATIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKCS_BANK_APPOINTMENTS ** ====
insert into X_MKCS_BANK_APPOINTMENTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, APPOINTMENT_ID, SUBFILIAL_ID, STATUS, APPOINTMENT_NUMBER, APPOINTMENT_DATE, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, APPOINTMENT_ID, SUBFILIAL_ID, STATUS, APPOINTMENT_NUMBER, APPOINTMENT_DATE, BANK_ACCOUNT_ID, CASHFLOW_REASON_ID, CASHFLOW_KIND, CORR_COA_ID, CORR_REF_SET, CORR_PERSON_ID, CORR_BANK_ACCOUNT_ID, CURRENCY_ID, AMOUNT, PAYMENT_CODE, PURPOSE, RESPONSIBLE_PERSON_ID, NOTE, SOURCE_TABLE, SOURCE_ID, ACCESS_KIND, BARCODE from OLD_X_MKCS_BANK_APPOINTMENTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKCS_ROOM_CASHBOXES ** ====
insert into X_MKCS_ROOM_CASHBOXES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, ROOM_ID, CASHBOX_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, ROOM_ID, CASHBOX_ID, STATE from OLD_X_MKCS_ROOM_CASHBOXES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MKCS_ROOM_BANK_ACCOUNTS ** ====
insert into X_MKCS_ROOM_BANK_ACCOUNTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, ROOM_ID, BANK_ACCOUNT_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILIAL_ID, ROOM_ID, BANK_ACCOUNT_ID, STATE from OLD_X_MKCS_ROOM_BANK_ACCOUNTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MDEAL_HEADERS ** ====
insert into X_MDEAL_HEADERS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DEAL_ID, SUBFILIAL_ID, ROOM_ID, PERSON_ID, OWNER_PERSON_ID, CORR_EXTRA_REF_SET, CURRENCY_ID, DEAL_KIND, DEAL_TIME, DEAL_DATE, DELIVERY_DATE, DELIVERY_NUMBER, BOOKED_DATE, BASE_STATUS, BOOK_STATUS, STATUS, ROBOT_ID, SALES_MANAGER_ID, MANAGER_ID, EXPEDITOR_ID, VAN_ID, CONTRACT_ID, INVOICE_NUMBER, BATCH_NUMBER, ORDER_DEAL_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_AMOUNT, TOTAL_AMOUNT, TOTAL_AMOUNT_BASE, BOOKED_PAYMENT_AMOUNT, BOOKED_PAYMENT_AMOUNT_BASE, PAYMENT_TYPE_ID, SOURCE_TABLE, SOURCE_ID, NOTE, RETURN_REASON_ID, CODE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DEAL_ID, SUBFILIAL_ID, ROOM_ID, PERSON_ID, OWNER_PERSON_ID, CORR_EXTRA_REF_SET, CURRENCY_ID, DEAL_KIND, DEAL_TIME, DEAL_DATE, DELIVERY_DATE, DELIVERY_NUMBER, BOOKED_DATE, BASE_STATUS, BOOK_STATUS, STATUS, ROBOT_ID, SALES_MANAGER_ID, MANAGER_ID, EXPEDITOR_ID, VAN_ID, CONTRACT_ID, INVOICE_NUMBER, BATCH_NUMBER, ORDER_DEAL_ID, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_AMOUNT, TOTAL_AMOUNT, TOTAL_AMOUNT_BASE, BOOKED_PAYMENT_AMOUNT, BOOKED_PAYMENT_AMOUNT_BASE, PAYMENT_TYPE_ID, SOURCE_TABLE, SOURCE_ID, NOTE, RETURN_REASON_ID, CODE, BARCODE from OLD_X_MDEAL_HEADERS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MDEAL_PRODUCTS ** ====
insert into X_MDEAL_PRODUCTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_UNIT_ID, DEAL_ID, PRICE_TYPE_ID, SERIAL_ID, INVENTORY_KIND, ON_BALANCE, WAREHOUSE_ID, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, PRODUCT_PRICE, ORDER_QUANT, RETURN_QUANT, SOLD_QUANT, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, SOLD_PRICE, SOLD_AMOUNT, SOLD_AMOUNT_BASE, IS_IN_MML, VAT_PERCENT, VAT_AMOUNT, BONUS_ID, LOAD_ID, DISCOUNT_CARD_ID, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_UNIT_ID, DEAL_ID, PRICE_TYPE_ID, SERIAL_ID, INVENTORY_KIND, ON_BALANCE, WAREHOUSE_ID, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, PRODUCT_PRICE, ORDER_QUANT, RETURN_QUANT, SOLD_QUANT, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, SOLD_PRICE, SOLD_AMOUNT, SOLD_AMOUNT_BASE, IS_IN_MML, VAT_PERCENT, VAT_AMOUNT, BONUS_ID, LOAD_ID, DISCOUNT_CARD_ID, ORDER_NO from OLD_X_MDEAL_PRODUCTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MDEAL_CONSIGNMENTS ** ====
insert into X_MDEAL_CONSIGNMENTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CONSIGNMENT_UNIT_ID, DEAL_ID, CONSIGNMENT_DATE, CONSIGNMENT_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, CONSIGNMENT_UNIT_ID, DEAL_ID, CONSIGNMENT_DATE, CONSIGNMENT_AMOUNT from OLD_X_MDEAL_CONSIGNMENTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MDEAL_PAYMENTS ** ====
insert into X_MDEAL_PAYMENTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAYMENT_ID, DEAL_ID, PAYMENT_DATE, PAYMENT_NUMBER, PAYMENT_KIND, PERSON_ID, FROM_COA_ID, FROM_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, BARCODE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PAYMENT_ID, DEAL_ID, PAYMENT_DATE, PAYMENT_NUMBER, PAYMENT_KIND, PERSON_ID, FROM_COA_ID, FROM_REF_SET, CURRENCY_ID, AMOUNT, AMOUNT_BASE, BARCODE from OLD_X_MDEAL_PAYMENTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MDEAL_FILES ** ====
insert into X_MDEAL_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DEAL_ID, FILE_SHA, NOTE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, DEAL_ID, FILE_SHA, NOTE from OLD_X_MDEAL_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MDEAL_USER_COMMENTS ** ====
insert into X_MDEAL_USER_COMMENTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, COMMENT_ID, DEAL_ID, COMMENTS) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, COMMENT_ID, DEAL_ID, COMMENTS from OLD_X_MDEAL_USER_COMMENTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFM_MOVEMENTS ** ====
insert into X_MFM_MOVEMENTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MOVEMENT_ID, FROM_FILIAL_ID, FROM_SUBFILIAL_ID, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, FROM_WAREHOUSE_ID, FROM_DATE, FROM_TIME, TO_FILIAL_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, TO_WAREHOUSE_ID, TO_DATE, TO_TIME, CURRENCY_ID, PRICE_TYPE_ID, PAYMENT_TYPE_ID, STATUS, TO_VISIBLE, CANCEL_REQUESTED, REQUEST_ID, REASON_ID, DEAL_ID, PURCHASE_ID, NOTE, BARCODE, C_AMOUNT, C_FROM_AMOUNT_BASE, C_TO_AMOUNT_BASE, C_VAT_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MOVEMENT_ID, FROM_FILIAL_ID, FROM_SUBFILIAL_ID, FROM_ROOM_ID, FROM_ROBOT_ID, FROM_ROBOT_PERSON_ID, FROM_WAREHOUSE_ID, FROM_DATE, FROM_TIME, TO_FILIAL_ID, TO_ROOM_ID, TO_ROBOT_ID, TO_ROBOT_PERSON_ID, TO_WAREHOUSE_ID, TO_DATE, TO_TIME, CURRENCY_ID, PRICE_TYPE_ID, PAYMENT_TYPE_ID, STATUS, TO_VISIBLE, CANCEL_REQUESTED, REQUEST_ID, REASON_ID, DEAL_ID, PURCHASE_ID, NOTE, BARCODE, C_AMOUNT, C_FROM_AMOUNT_BASE, C_TO_AMOUNT_BASE, C_VAT_AMOUNT from OLD_X_MFM_MOVEMENTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFM_MOVEMENT_ITEMS ** ====
insert into X_MFM_MOVEMENT_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MOVEMENT_UNIT_ID, MOVEMENT_ID, REQUEST_ITEM_ID, FROM_INVENTORY_KIND, ON_BALANCE, TO_INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, LOAD_ID, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MOVEMENT_UNIT_ID, MOVEMENT_ID, REQUEST_ITEM_ID, FROM_INVENTORY_KIND, ON_BALANCE, TO_INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, SERIAL_ID, QUANTITY, PRICE, AMOUNT, FROM_AMOUNT_BASE, TO_AMOUNT_BASE, MARGIN_KIND, MARGIN_VALUE, MARGIN_AMOUNT, MARGIN_AMOUNT_BASE, VAT_PERCENT, VAT_AMOUNT, LOAD_ID, ORDER_NO from OLD_X_MFM_MOVEMENT_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFM_MOVEMENT_REQUESTS ** ====
insert into X_MFM_MOVEMENT_REQUESTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRICE_TYPE_ID, STATUS, NOTE, REASON_ID, BARCODE, C_AMOUNT) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRICE_TYPE_ID, STATUS, NOTE, REASON_ID, BARCODE, C_AMOUNT from OLD_X_MFM_MOVEMENT_REQUESTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFM_MOVEMENT_REQUEST_ITEMS ** ====
insert into X_MFM_MOVEMENT_REQUEST_ITEMS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ITEM_ID, REQUEST_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRODUCT_ID, CARD_ID, QUANTITY, MOVEMENT_QUANTITY, PRICE, AMOUNT, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REQUEST_ITEM_ID, REQUEST_ID, FROM_FILIAL_ID, TO_FILIAL_ID, PRODUCT_ID, CARD_ID, QUANTITY, MOVEMENT_QUANTITY, PRICE, AMOUNT, ORDER_NO from OLD_X_MFM_MOVEMENT_REQUEST_ITEMS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFM_MOVEMENT_REQUEST_REASONS ** ====
insert into X_MFM_MOVEMENT_REQUEST_REASONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE from OLD_X_MFM_MOVEMENT_REQUEST_REASONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFM_MOVEMENT_REASONS ** ====
insert into X_MFM_MOVEMENT_REASONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, REASON_ID, NAME, STATE from OLD_X_MFM_MOVEMENT_REASONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFG_MANUFACTURES ** ====
insert into X_MFG_MANUFACTURES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MANUFACTURE_ID, INPUT_DATE, OUTPUT_DATE, MANUFACTURE_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, STATUS, INPUT_WAREHOUSE_ID, OUTPUT_WAREHOUSE_ID, SPECIFICATION_ID, CURRENCY_ID, BATCH_NUMBER, NOTE, C_AMOUNT, C_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, MANUFACTURE_ID, INPUT_DATE, OUTPUT_DATE, MANUFACTURE_NUMBER, ROOM_ID, ROBOT_ID, ROBOT_PERSON_ID, STATUS, INPUT_WAREHOUSE_ID, OUTPUT_WAREHOUSE_ID, SPECIFICATION_ID, CURRENCY_ID, BATCH_NUMBER, NOTE, C_AMOUNT, C_AMOUNT_BASE, CREATED_BY, CREATED_ON, MODIFIED_BY, MODIFIED_ON from OLD_X_MFG_MANUFACTURES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFG_MANUFACTURE_INPUTS ** ====
insert into X_MFG_MANUFACTURE_INPUTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ITEM_ID, MANUFACTURE_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ITEM_ID, MANUFACTURE_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, ORDER_NO from OLD_X_MFG_MANUFACTURE_INPUTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFG_MANUFACTURE_OUTPUTS ** ====
insert into X_MFG_MANUFACTURE_OUTPUTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OUTPUT_ITEM_ID, MANUFACTURE_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, AMOUNT, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OUTPUT_ITEM_ID, MANUFACTURE_ID, INVENTORY_KIND, PRODUCT_ID, CARD_ID, EXPIRY_DATE_ID, QUANTITY, AMOUNT, ORDER_NO from OLD_X_MFG_MANUFACTURE_OUTPUTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFG_MANUFACTURE_EXTRA_COSTS ** ====
insert into X_MFG_MANUFACTURE_EXTRA_COSTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EXTRA_COST_ITEM_ID, MANUFACTURE_ID, EXTRA_COST_ID, AMOUNT, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, EXTRA_COST_ITEM_ID, MANUFACTURE_ID, EXTRA_COST_ID, AMOUNT, ORDER_NO from OLD_X_MFG_MANUFACTURE_EXTRA_COSTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFG_MANUFACTURE_FILES ** ====
insert into X_MFG_MANUFACTURE_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILE_ITEM_ID, MANUFACTURE_ID, SHA, NOTE, CREATED_ON) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, FILE_ITEM_ID, MANUFACTURE_ID, SHA, NOTE, CREATED_ON from OLD_X_MFG_MANUFACTURE_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFG_MANUFACTURE_PRODUCT_FILES ** ====
insert into X_MFG_MANUFACTURE_PRODUCT_FILES (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_FILE_ITEM_ID, MANUFACTURE_ID, PRODUCT_ID, CARD_ID, SHA, NOTE, CREATED_ON) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, PRODUCT_FILE_ITEM_ID, MANUFACTURE_ID, PRODUCT_ID, CARD_ID, SHA, NOTE, CREATED_ON from OLD_X_MFG_MANUFACTURE_PRODUCT_FILES t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFG_SPECIFICATIONS ** ====
insert into X_MFG_SPECIFICATIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SPECIFICATION_ID, FILIAL_ID, NAME, STATE, CODE, SOURCE_ID) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, SPECIFICATION_ID, FILIAL_ID, NAME, STATE, CODE, SOURCE_ID from OLD_X_MFG_SPECIFICATIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFG_SPECIFICATION_INPUTS ** ====
insert into X_MFG_SPECIFICATION_INPUTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ITEM_ID, SPECIFICATION_ID, PRODUCT_ID, INVENTORY_KIND, QUANTITY, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, INPUT_ITEM_ID, SPECIFICATION_ID, PRODUCT_ID, INVENTORY_KIND, QUANTITY, ORDER_NO from OLD_X_MFG_SPECIFICATION_INPUTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MFG_SPECIFICATION_OUTPUTS ** ====
insert into X_MFG_SPECIFICATION_OUTPUTS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OUTPUT_ITEM_ID, SPECIFICATION_ID, PRODUCT_ID, INVENTORY_KIND, QUANTITY, EXPIRY_DAYS, ORDER_NO) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, OUTPUT_ITEM_ID, SPECIFICATION_ID, PRODUCT_ID, INVENTORY_KIND, QUANTITY, EXPIRY_DAYS, ORDER_NO from OLD_X_MFG_SPECIFICATION_OUTPUTS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MCG_ROOM_ACTIONS ** ====
insert into X_MCG_ROOM_ACTIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, ACTION_ID, FILIAL_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ROOM_ID, ACTION_ID, FILIAL_ID, STATE from OLD_X_MCG_ROOM_ACTIONS t where t.t_company_id = &company_id;
commit;
prompt ==== ** X_MCG_ROOM_ORDER_RESTRICTIONS ** ====
insert into X_MCG_ROOM_ORDER_RESTRICTIONS (T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_RESTRICTION_ID, ROOM_ID, STATE) select T_COMPANY_ID, T_AUDIT_ID, T_FILIAL_ID, T_EVENT, T_TIMESTAMP, T_DATE, T_USER_ID, T_SOURCE_PROJECT_CODE, T_SESSION_ID, T_CONTEXT_ID, ORDER_RESTRICTION_ID, ROOM_ID, STATE from OLD_X_MCG_ROOM_ORDER_RESTRICTIONS t where t.t_company_id = &company_id;
commit;
